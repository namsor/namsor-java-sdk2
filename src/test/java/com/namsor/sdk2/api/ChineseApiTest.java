/*
 * NamSor API v2
 * NamSor API v2 : enpoints to process personal names (gender, cultural origin or ethnicity) in all alphabets or languages. Use GET methods for small tests, but prefer POST methods for higher throughput (batch processing of up to 1000 names at a time). Need something you can't find here? We have many more features coming soon. Let us know, we'll do our best to add it! 
 *
 * OpenAPI spec version: 2.0.2-beta
 * Contact: contact@namsor.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.namsor.sdk2.api;

import com.namsor.sdk2.invoke.ApiException;
import com.namsor.sdk2.model.BatchFirstLastNameIn;
import com.namsor.sdk2.model.BatchNameMatchCandidatesOut;
import com.namsor.sdk2.model.RomanizedNameOut;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ChineseApi
 */
@Ignore
public class ChineseApiTest {

    private final ChineseApi api = new ChineseApi();

    
    /**
     * Identify Chinese name candidates, based on the romanized name.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void chineseNameCandidatesTest() throws ApiException {
        String chineseSurnameLatin = null;
        String chineseGivenNameLatin = null;
        RomanizedNameOut response = api.chineseNameCandidates(chineseSurnameLatin, chineseGivenNameLatin);

        // TODO: test validations
    }
    
    /**
     * Identify Chinese name candidates, based on the romanized name (firstName &#x3D; chineseGivenName; lastName&#x3D;chineseSurname).
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void chineseNameCandidatesBatchTest() throws ApiException {
        BatchFirstLastNameIn batchFirstLastNameIn = null;
        BatchNameMatchCandidatesOut response = api.chineseNameCandidatesBatch(batchFirstLastNameIn);

        // TODO: test validations
    }
    
    /**
     * Identify Chinese name candidates, based on the romanized name (firstName &#x3D; chineseGivenName; lastName&#x3D;chineseSurname).
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void chineseNameCandidatesGenderBatchTest() throws ApiException {
        BatchFirstLastNameIn batchFirstLastNameIn = null;
        BatchNameMatchCandidatesOut response = api.chineseNameCandidatesGenderBatch(batchFirstLastNameIn);

        // TODO: test validations
    }
    
    /**
     * Identify Chinese name candidates, based on the romanized name - having a known gender (&#39;male&#39; or &#39;female&#39;)
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void chineseNameGenderCandidatesTest() throws ApiException {
        String chineseSurnameLatin = null;
        String chineseGivenNameLatin = null;
        String knownGender = null;
        RomanizedNameOut response = api.chineseNameGenderCandidates(chineseSurnameLatin, chineseGivenNameLatin, knownGender);

        // TODO: test validations
    }
    
}
