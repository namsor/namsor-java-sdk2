/*
 * NamSor API v2
 * NamSor API v2 : enpoints to process personal names (gender, cultural origin or ethnicity) in all alphabets or languages. Use GET methods for small tests, but prefer POST methods for higher throughput (batch processing of up to 1000 names at a time). Need something you can't find here? We have many more features coming soon. Let us know, we'll do our best to add it! 
 *
 * OpenAPI spec version: 2.0.2-beta
 * Contact: contact@namsor.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.namsor.sdk2.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for UserInfoOut
 */
public class UserInfoOutTest {
    private final UserInfoOut model = new UserInfoOut();

    /**
     * Model tests for UserInfoOut
     */
    @Test
    public void testUserInfoOut() {
        // TODO: test UserInfoOut
    }

    /**
     * Test the property 'uid'
     */
    @Test
    public void uidTest() {
        // TODO: test uid
    }

    /**
     * Test the property 'email'
     */
    @Test
    public void emailTest() {
        // TODO: test email
    }

    /**
     * Test the property 'phoneNumber'
     */
    @Test
    public void phoneNumberTest() {
        // TODO: test phoneNumber
    }

    /**
     * Test the property 'emailVerified'
     */
    @Test
    public void emailVerifiedTest() {
        // TODO: test emailVerified
    }

    /**
     * Test the property 'displayName'
     */
    @Test
    public void displayNameTest() {
        // TODO: test displayName
    }

    /**
     * Test the property 'photoUrl'
     */
    @Test
    public void photoUrlTest() {
        // TODO: test photoUrl
    }

    /**
     * Test the property 'disabled'
     */
    @Test
    public void disabledTest() {
        // TODO: test disabled
    }

    /**
     * Test the property 'firstKnownIpAddress'
     */
    @Test
    public void firstKnownIpAddressTest() {
        // TODO: test firstKnownIpAddress
    }

    /**
     * Test the property 'providerId'
     */
    @Test
    public void providerIdTest() {
        // TODO: test providerId
    }

    /**
     * Test the property 'timeStamp'
     */
    @Test
    public void timeStampTest() {
        // TODO: test timeStamp
    }

    /**
     * Test the property 'verifyToken'
     */
    @Test
    public void verifyTokenTest() {
        // TODO: test verifyToken
    }

    /**
     * Test the property 'apiKey'
     */
    @Test
    public void apiKeyTest() {
        // TODO: test apiKey
    }

    /**
     * Test the property 'stripePerishableKey'
     */
    @Test
    public void stripePerishableKeyTest() {
        // TODO: test stripePerishableKey
    }

    /**
     * Test the property 'stripeCustomerId'
     */
    @Test
    public void stripeCustomerIdTest() {
        // TODO: test stripeCustomerId
    }

    /**
     * Test the property 'otherInfos'
     */
    @Test
    public void otherInfosTest() {
        // TODO: test otherInfos
    }

}
