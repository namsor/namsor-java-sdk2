/*
 * NamSor API v2
 * NamSor API v2 : enpoints to process personal names (gender, cultural origin or ethnicity) in all alphabets or languages. By default, enpoints use 1 unit per name (ex. Gender), but Ethnicity classification uses 10 to 20 units per name depending on taxonomy. Use GET methods for small tests, but prefer POST methods for higher throughput (batch processing of up to 100 names at a time). Need something you can't find here? We have many more features coming soon. Let us know, we'll do our best to add it! 
 *
 * OpenAPI spec version: 2.0.14
 * Contact: contact@namsor.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.namsor.sdk2.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for APIPlanSubscriptionOut
 */
public class APIPlanSubscriptionOutTest {
    private final APIPlanSubscriptionOut model = new APIPlanSubscriptionOut();

    /**
     * Model tests for APIPlanSubscriptionOut
     */
    @Test
    public void testAPIPlanSubscriptionOut() {
        // TODO: test APIPlanSubscriptionOut
    }

    /**
     * Test the property 'apiKey'
     */
    @Test
    public void apiKeyTest() {
        // TODO: test apiKey
    }

    /**
     * Test the property 'planStarted'
     */
    @Test
    public void planStartedTest() {
        // TODO: test planStarted
    }

    /**
     * Test the property 'priorPlanStarted'
     */
    @Test
    public void priorPlanStartedTest() {
        // TODO: test priorPlanStarted
    }

    /**
     * Test the property 'planEnded'
     */
    @Test
    public void planEndedTest() {
        // TODO: test planEnded
    }

    /**
     * Test the property 'taxRate'
     */
    @Test
    public void taxRateTest() {
        // TODO: test taxRate
    }

    /**
     * Test the property 'planName'
     */
    @Test
    public void planNameTest() {
        // TODO: test planName
    }

    /**
     * Test the property 'planBaseFeesKey'
     */
    @Test
    public void planBaseFeesKeyTest() {
        // TODO: test planBaseFeesKey
    }

    /**
     * Test the property 'planStatus'
     */
    @Test
    public void planStatusTest() {
        // TODO: test planStatus
    }

    /**
     * Test the property 'planQuota'
     */
    @Test
    public void planQuotaTest() {
        // TODO: test planQuota
    }

    /**
     * Test the property 'priceUSD'
     */
    @Test
    public void priceUSDTest() {
        // TODO: test priceUSD
    }

    /**
     * Test the property 'priceOverageUSD'
     */
    @Test
    public void priceOverageUSDTest() {
        // TODO: test priceOverageUSD
    }

    /**
     * Test the property 'price'
     */
    @Test
    public void priceTest() {
        // TODO: test price
    }

    /**
     * Test the property 'priceOverage'
     */
    @Test
    public void priceOverageTest() {
        // TODO: test priceOverage
    }

    /**
     * Test the property 'currency'
     */
    @Test
    public void currencyTest() {
        // TODO: test currency
    }

    /**
     * Test the property 'currencyFactor'
     */
    @Test
    public void currencyFactorTest() {
        // TODO: test currencyFactor
    }

    /**
     * Test the property 'stripeCustomerId'
     */
    @Test
    public void stripeCustomerIdTest() {
        // TODO: test stripeCustomerId
    }

    /**
     * Test the property 'stripeStatus'
     */
    @Test
    public void stripeStatusTest() {
        // TODO: test stripeStatus
    }

    /**
     * Test the property 'stripeSubscription'
     */
    @Test
    public void stripeSubscriptionTest() {
        // TODO: test stripeSubscription
    }

    /**
     * Test the property 'userId'
     */
    @Test
    public void userIdTest() {
        // TODO: test userId
    }

}
