/*
 * NamSor API v2
 * NamSor API v2 : enpoints to process personal names (gender, cultural origin or ethnicity) in all alphabets or languages. Use GET methods for small tests, but prefer POST methods for higher throughput (batch processing of up to 100 names at a time). Need something you can't find here? We have many more features coming soon. Let us know, we'll do our best to add it! 
 *
 * OpenAPI spec version: 2.0.12
 * Contact: contact@namsor.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.namsor.sdk2.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.namsor.sdk2.model.ExpectedClassMetricsOut;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for ClassifierMetricsOut
 */
public class ClassifierMetricsOutTest {
    private final ClassifierMetricsOut model = new ClassifierMetricsOut();

    /**
     * Model tests for ClassifierMetricsOut
     */
    @Test
    public void testClassifierMetricsOut() {
        // TODO: test ClassifierMetricsOut
    }

    /**
     * Test the property 'softwareVersion'
     */
    @Test
    public void softwareVersionTest() {
        // TODO: test softwareVersion
    }

    /**
     * Test the property 'hostAddress'
     */
    @Test
    public void hostAddressTest() {
        // TODO: test hostAddress
    }

    /**
     * Test the property 'learnQueueSize'
     */
    @Test
    public void learnQueueSizeTest() {
        // TODO: test learnQueueSize
    }

    /**
     * Test the property 'bufferSize'
     */
    @Test
    public void bufferSizeTest() {
        // TODO: test bufferSize
    }

    /**
     * Test the property 'preClassifyQueueSize'
     */
    @Test
    public void preClassifyQueueSizeTest() {
        // TODO: test preClassifyQueueSize
    }

    /**
     * Test the property 'factKeysSize'
     */
    @Test
    public void factKeysSizeTest() {
        // TODO: test factKeysSize
    }

    /**
     * Test the property 'factsLearned'
     */
    @Test
    public void factsLearnedTest() {
        // TODO: test factsLearned
    }

    /**
     * Test the property 'classifyDurationsCurrent'
     */
    @Test
    public void classifyDurationsCurrentTest() {
        // TODO: test classifyDurationsCurrent
    }

    /**
     * Test the property 'classifyDurationsSummary'
     */
    @Test
    public void classifyDurationsSummaryTest() {
        // TODO: test classifyDurationsSummary
    }

    /**
     * Test the property 'learnDurationsCurrent'
     */
    @Test
    public void learnDurationsCurrentTest() {
        // TODO: test learnDurationsCurrent
    }

    /**
     * Test the property 'learnDurationsSummary'
     */
    @Test
    public void learnDurationsSummaryTest() {
        // TODO: test learnDurationsSummary
    }

    /**
     * Test the property 'classifierName'
     */
    @Test
    public void classifierNameTest() {
        // TODO: test classifierName
    }

    /**
     * Test the property 'featuresSize'
     */
    @Test
    public void featuresSizeTest() {
        // TODO: test featuresSize
    }

    /**
     * Test the property 'aiVettedEstimateTotal'
     */
    @Test
    public void aiVettedEstimateTotalTest() {
        // TODO: test aiVettedEstimateTotal
    }

    /**
     * Test the property 'aiVettedEstimatePrecision'
     */
    @Test
    public void aiVettedEstimatePrecisionTest() {
        // TODO: test aiVettedEstimatePrecision
    }

    /**
     * Test the property 'aiVettedEstimateRecall'
     */
    @Test
    public void aiVettedEstimateRecallTest() {
        // TODO: test aiVettedEstimateRecall
    }

    /**
     * Test the property 'aiVettedLearnTotal'
     */
    @Test
    public void aiVettedLearnTotalTest() {
        // TODO: test aiVettedLearnTotal
    }

    /**
     * Test the property 'aiNonVettedEstimateTotal'
     */
    @Test
    public void aiNonVettedEstimateTotalTest() {
        // TODO: test aiNonVettedEstimateTotal
    }

    /**
     * Test the property 'aiNonVettedEstimatePrecision'
     */
    @Test
    public void aiNonVettedEstimatePrecisionTest() {
        // TODO: test aiNonVettedEstimatePrecision
    }

    /**
     * Test the property 'aiNonVettedEstimateRecall'
     */
    @Test
    public void aiNonVettedEstimateRecallTest() {
        // TODO: test aiNonVettedEstimateRecall
    }

    /**
     * Test the property 'aiNonVettedLearnTotal'
     */
    @Test
    public void aiNonVettedLearnTotalTest() {
        // TODO: test aiNonVettedLearnTotal
    }

    /**
     * Test the property 'metricTimeStamp'
     */
    @Test
    public void metricTimeStampTest() {
        // TODO: test metricTimeStamp
    }

    /**
     * Test the property 'aiStartTime'
     */
    @Test
    public void aiStartTimeTest() {
        // TODO: test aiStartTime
    }

    /**
     * Test the property 'aiVettedExpectedClassMetrics'
     */
    @Test
    public void aiVettedExpectedClassMetricsTest() {
        // TODO: test aiVettedExpectedClassMetrics
    }

    /**
     * Test the property 'aiNonVettedExpectedClassMetrics'
     */
    @Test
    public void aiNonVettedExpectedClassMetricsTest() {
        // TODO: test aiNonVettedExpectedClassMetrics
    }

}
