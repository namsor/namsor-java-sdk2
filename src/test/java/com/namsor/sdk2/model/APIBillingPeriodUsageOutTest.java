/*
 * NamSor API v2
 * NamSor API v2 : enpoints to process personal names (gender, cultural origin or ethnicity) in all alphabets or languages. By default, enpoints use 1 unit per name (ex. Gender), but Ethnicity classification uses 10 to 20 units per name depending on taxonomy. Use GET methods for small tests, but prefer POST methods for higher throughput (batch processing of up to 100 names at a time). Need something you can't find here? We have many more features coming soon. Let us know, we'll do our best to add it! 
 *
 * The version of the OpenAPI document: 2.0.29
 * Contact: contact@namsor.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.namsor.sdk2.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for APIBillingPeriodUsageOut
 */
public class APIBillingPeriodUsageOutTest {
    private final APIBillingPeriodUsageOut model = new APIBillingPeriodUsageOut();

    /**
     * Model tests for APIBillingPeriodUsageOut
     */
    @Test
    public void testAPIBillingPeriodUsageOut() {
        // TODO: test APIBillingPeriodUsageOut
    }

    /**
     * Test the property 'apiKey'
     */
    @Test
    public void apiKeyTest() {
        // TODO: test apiKey
    }

    /**
     * Test the property 'subscriptionStarted'
     */
    @Test
    public void subscriptionStartedTest() {
        // TODO: test subscriptionStarted
    }

    /**
     * Test the property 'periodStarted'
     */
    @Test
    public void periodStartedTest() {
        // TODO: test periodStarted
    }

    /**
     * Test the property 'periodEnded'
     */
    @Test
    public void periodEndedTest() {
        // TODO: test periodEnded
    }

    /**
     * Test the property 'stripeCurrentPeriodEnd'
     */
    @Test
    public void stripeCurrentPeriodEndTest() {
        // TODO: test stripeCurrentPeriodEnd
    }

    /**
     * Test the property 'stripeCurrentPeriodStart'
     */
    @Test
    public void stripeCurrentPeriodStartTest() {
        // TODO: test stripeCurrentPeriodStart
    }

    /**
     * Test the property 'billingStatus'
     */
    @Test
    public void billingStatusTest() {
        // TODO: test billingStatus
    }

    /**
     * Test the property 'usage'
     */
    @Test
    public void usageTest() {
        // TODO: test usage
    }

    /**
     * Test the property 'softLimit'
     */
    @Test
    public void softLimitTest() {
        // TODO: test softLimit
    }

    /**
     * Test the property 'hardLimit'
     */
    @Test
    public void hardLimitTest() {
        // TODO: test hardLimit
    }

}
