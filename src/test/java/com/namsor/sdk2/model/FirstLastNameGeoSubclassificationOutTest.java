/*
 * NamSor API v2
 * NamSor API v2 : enpoints to process personal names (gender, cultural origin or ethnicity) in all alphabets or languages. By default, enpoints use 1 unit per name (ex. Gender), but Ethnicity classification uses 10 to 20 units per name depending on taxonomy. Use GET methods for small tests, but prefer POST methods for higher throughput (batch processing of up to 100 names at a time). Need something you can't find here? We have many more features coming soon. Let us know, we'll do our best to add it! 
 *
 * The version of the OpenAPI document: 2.0.29
 * Contact: contact@namsor.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.namsor.sdk2.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for FirstLastNameGeoSubclassificationOut
 */
public class FirstLastNameGeoSubclassificationOutTest {
    private final FirstLastNameGeoSubclassificationOut model = new FirstLastNameGeoSubclassificationOut();

    /**
     * Model tests for FirstLastNameGeoSubclassificationOut
     */
    @Test
    public void testFirstLastNameGeoSubclassificationOut() {
        // TODO: test FirstLastNameGeoSubclassificationOut
    }

    /**
     * Test the property 'script'
     */
    @Test
    public void scriptTest() {
        // TODO: test script
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'explanation'
     */
    @Test
    public void explanationTest() {
        // TODO: test explanation
    }

    /**
     * Test the property 'firstName'
     */
    @Test
    public void firstNameTest() {
        // TODO: test firstName
    }

    /**
     * Test the property 'lastName'
     */
    @Test
    public void lastNameTest() {
        // TODO: test lastName
    }

    /**
     * Test the property 'countryIso2'
     */
    @Test
    public void countryIso2Test() {
        // TODO: test countryIso2
    }

    /**
     * Test the property 'subClassification'
     */
    @Test
    public void subClassificationTest() {
        // TODO: test subClassification
    }

    /**
     * Test the property 'subClassificationAlt'
     */
    @Test
    public void subClassificationAltTest() {
        // TODO: test subClassificationAlt
    }

    /**
     * Test the property 'subclassificationTop'
     */
    @Test
    public void subclassificationTopTest() {
        // TODO: test subclassificationTop
    }

    /**
     * Test the property 'score'
     */
    @Test
    public void scoreTest() {
        // TODO: test score
    }

    /**
     * Test the property 'probabilityCalibrated'
     */
    @Test
    public void probabilityCalibratedTest() {
        // TODO: test probabilityCalibrated
    }

    /**
     * Test the property 'probabilityAltCalibrated'
     */
    @Test
    public void probabilityAltCalibratedTest() {
        // TODO: test probabilityAltCalibrated
    }

}
