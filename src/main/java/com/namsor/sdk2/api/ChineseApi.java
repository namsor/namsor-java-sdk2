/*
 * NamSor API v2
 * NamSor API v2 : enpoints to process personal names (gender, cultural origin or ethnicity) in all alphabets or languages. Use GET methods for small tests, but prefer POST methods for higher throughput (batch processing of up to 1000 names at a time). Need something you can't find here? We have many more features coming soon. Let us know, we'll do our best to add it! 
 *
 * OpenAPI spec version: 2.0.2-beta
 * Contact: contact@namsor.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.namsor.sdk2.api;

import com.namsor.sdk2.invoke.ApiCallback;
import com.namsor.sdk2.invoke.ApiClient;
import com.namsor.sdk2.invoke.ApiException;
import com.namsor.sdk2.invoke.ApiResponse;
import com.namsor.sdk2.invoke.Configuration;
import com.namsor.sdk2.invoke.Pair;
import com.namsor.sdk2.invoke.ProgressRequestBody;
import com.namsor.sdk2.invoke.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import com.namsor.sdk2.model.BatchFirstLastNameIn;
import com.namsor.sdk2.model.BatchNameMatchCandidatesOut;
import com.namsor.sdk2.model.RomanizedNameOut;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ChineseApi {
    private ApiClient apiClient;

    public ChineseApi() {
        this(Configuration.getDefaultApiClient());
    }

    public ChineseApi(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return apiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    /**
     * Build call for chineseNameCandidates
     * @param chineseSurnameLatin  (required)
     * @param chineseGivenNameLatin  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call chineseNameCandidatesCall(String chineseSurnameLatin, String chineseGivenNameLatin, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = new Object();

        // create path and map variables
        String localVarPath = "/api2/json/chineseNameCandidates/{chineseSurnameLatin}/{chineseGivenNameLatin}"
            .replaceAll("\\{" + "chineseSurnameLatin" + "\\}", apiClient.escapeString(chineseSurnameLatin.toString()))
            .replaceAll("\\{" + "chineseGivenNameLatin" + "\\}", apiClient.escapeString(chineseGivenNameLatin.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if (progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "api_key" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call chineseNameCandidatesValidateBeforeCall(String chineseSurnameLatin, String chineseGivenNameLatin, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'chineseSurnameLatin' is set
        if (chineseSurnameLatin == null) {
            throw new ApiException("Missing the required parameter 'chineseSurnameLatin' when calling chineseNameCandidates(Async)");
        }
        
        // verify the required parameter 'chineseGivenNameLatin' is set
        if (chineseGivenNameLatin == null) {
            throw new ApiException("Missing the required parameter 'chineseGivenNameLatin' when calling chineseNameCandidates(Async)");
        }
        

        com.squareup.okhttp.Call call = chineseNameCandidatesCall(chineseSurnameLatin, chineseGivenNameLatin, progressListener, progressRequestListener);
        return call;

    }

    /**
     * Identify Chinese name candidates, based on the romanized name.
     * 
     * @param chineseSurnameLatin  (required)
     * @param chineseGivenNameLatin  (required)
     * @return RomanizedNameOut
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public RomanizedNameOut chineseNameCandidates(String chineseSurnameLatin, String chineseGivenNameLatin) throws ApiException {
        ApiResponse<RomanizedNameOut> resp = chineseNameCandidatesWithHttpInfo(chineseSurnameLatin, chineseGivenNameLatin);
        return resp.getData();
    }

    /**
     * Identify Chinese name candidates, based on the romanized name.
     * 
     * @param chineseSurnameLatin  (required)
     * @param chineseGivenNameLatin  (required)
     * @return ApiResponse&lt;RomanizedNameOut&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<RomanizedNameOut> chineseNameCandidatesWithHttpInfo(String chineseSurnameLatin, String chineseGivenNameLatin) throws ApiException {
        com.squareup.okhttp.Call call = chineseNameCandidatesValidateBeforeCall(chineseSurnameLatin, chineseGivenNameLatin, null, null);
        Type localVarReturnType = new TypeToken<RomanizedNameOut>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Identify Chinese name candidates, based on the romanized name. (asynchronously)
     * 
     * @param chineseSurnameLatin  (required)
     * @param chineseGivenNameLatin  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call chineseNameCandidatesAsync(String chineseSurnameLatin, String chineseGivenNameLatin, final ApiCallback<RomanizedNameOut> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = chineseNameCandidatesValidateBeforeCall(chineseSurnameLatin, chineseGivenNameLatin, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<RomanizedNameOut>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for chineseNameCandidatesBatch
     * @param batchFirstLastNameIn A list of personal Chinese names in LATIN, firstName &#x3D; chineseGivenName; lastName&#x3D;chineseSurname (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call chineseNameCandidatesBatchCall(BatchFirstLastNameIn batchFirstLastNameIn, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = batchFirstLastNameIn;

        // create path and map variables
        String localVarPath = "/api2/json/chineseNameCandidatesBatch";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if (progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "api_key" };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call chineseNameCandidatesBatchValidateBeforeCall(BatchFirstLastNameIn batchFirstLastNameIn, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        

        com.squareup.okhttp.Call call = chineseNameCandidatesBatchCall(batchFirstLastNameIn, progressListener, progressRequestListener);
        return call;

    }

    /**
     * Identify Chinese name candidates, based on the romanized name (firstName &#x3D; chineseGivenName; lastName&#x3D;chineseSurname).
     * 
     * @param batchFirstLastNameIn A list of personal Chinese names in LATIN, firstName &#x3D; chineseGivenName; lastName&#x3D;chineseSurname (optional)
     * @return BatchNameMatchCandidatesOut
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public BatchNameMatchCandidatesOut chineseNameCandidatesBatch(BatchFirstLastNameIn batchFirstLastNameIn) throws ApiException {
        ApiResponse<BatchNameMatchCandidatesOut> resp = chineseNameCandidatesBatchWithHttpInfo(batchFirstLastNameIn);
        return resp.getData();
    }

    /**
     * Identify Chinese name candidates, based on the romanized name (firstName &#x3D; chineseGivenName; lastName&#x3D;chineseSurname).
     * 
     * @param batchFirstLastNameIn A list of personal Chinese names in LATIN, firstName &#x3D; chineseGivenName; lastName&#x3D;chineseSurname (optional)
     * @return ApiResponse&lt;BatchNameMatchCandidatesOut&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<BatchNameMatchCandidatesOut> chineseNameCandidatesBatchWithHttpInfo(BatchFirstLastNameIn batchFirstLastNameIn) throws ApiException {
        com.squareup.okhttp.Call call = chineseNameCandidatesBatchValidateBeforeCall(batchFirstLastNameIn, null, null);
        Type localVarReturnType = new TypeToken<BatchNameMatchCandidatesOut>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Identify Chinese name candidates, based on the romanized name (firstName &#x3D; chineseGivenName; lastName&#x3D;chineseSurname). (asynchronously)
     * 
     * @param batchFirstLastNameIn A list of personal Chinese names in LATIN, firstName &#x3D; chineseGivenName; lastName&#x3D;chineseSurname (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call chineseNameCandidatesBatchAsync(BatchFirstLastNameIn batchFirstLastNameIn, final ApiCallback<BatchNameMatchCandidatesOut> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = chineseNameCandidatesBatchValidateBeforeCall(batchFirstLastNameIn, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<BatchNameMatchCandidatesOut>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for chineseNameCandidatesGenderBatch
     * @param batchFirstLastNameIn A list of personal Chinese names in LATIN, firstName &#x3D; chineseGivenName; lastName&#x3D;chineseSurname (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call chineseNameCandidatesGenderBatchCall(BatchFirstLastNameIn batchFirstLastNameIn, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = batchFirstLastNameIn;

        // create path and map variables
        String localVarPath = "/api2/json/chineseNameCandidatesGenderBatch";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if (progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "api_key" };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call chineseNameCandidatesGenderBatchValidateBeforeCall(BatchFirstLastNameIn batchFirstLastNameIn, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        

        com.squareup.okhttp.Call call = chineseNameCandidatesGenderBatchCall(batchFirstLastNameIn, progressListener, progressRequestListener);
        return call;

    }

    /**
     * Identify Chinese name candidates, based on the romanized name (firstName &#x3D; chineseGivenName; lastName&#x3D;chineseSurname).
     * 
     * @param batchFirstLastNameIn A list of personal Chinese names in LATIN, firstName &#x3D; chineseGivenName; lastName&#x3D;chineseSurname (optional)
     * @return BatchNameMatchCandidatesOut
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public BatchNameMatchCandidatesOut chineseNameCandidatesGenderBatch(BatchFirstLastNameIn batchFirstLastNameIn) throws ApiException {
        ApiResponse<BatchNameMatchCandidatesOut> resp = chineseNameCandidatesGenderBatchWithHttpInfo(batchFirstLastNameIn);
        return resp.getData();
    }

    /**
     * Identify Chinese name candidates, based on the romanized name (firstName &#x3D; chineseGivenName; lastName&#x3D;chineseSurname).
     * 
     * @param batchFirstLastNameIn A list of personal Chinese names in LATIN, firstName &#x3D; chineseGivenName; lastName&#x3D;chineseSurname (optional)
     * @return ApiResponse&lt;BatchNameMatchCandidatesOut&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<BatchNameMatchCandidatesOut> chineseNameCandidatesGenderBatchWithHttpInfo(BatchFirstLastNameIn batchFirstLastNameIn) throws ApiException {
        com.squareup.okhttp.Call call = chineseNameCandidatesGenderBatchValidateBeforeCall(batchFirstLastNameIn, null, null);
        Type localVarReturnType = new TypeToken<BatchNameMatchCandidatesOut>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Identify Chinese name candidates, based on the romanized name (firstName &#x3D; chineseGivenName; lastName&#x3D;chineseSurname). (asynchronously)
     * 
     * @param batchFirstLastNameIn A list of personal Chinese names in LATIN, firstName &#x3D; chineseGivenName; lastName&#x3D;chineseSurname (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call chineseNameCandidatesGenderBatchAsync(BatchFirstLastNameIn batchFirstLastNameIn, final ApiCallback<BatchNameMatchCandidatesOut> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = chineseNameCandidatesGenderBatchValidateBeforeCall(batchFirstLastNameIn, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<BatchNameMatchCandidatesOut>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for chineseNameGenderCandidates
     * @param chineseSurnameLatin  (required)
     * @param chineseGivenNameLatin  (required)
     * @param knownGender  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call chineseNameGenderCandidatesCall(String chineseSurnameLatin, String chineseGivenNameLatin, String knownGender, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = new Object();

        // create path and map variables
        String localVarPath = "/api2/json/chineseNameGenderCandidates/{chineseSurnameLatin}/{chineseGivenNameLatin}/{knownGender}"
            .replaceAll("\\{" + "chineseSurnameLatin" + "\\}", apiClient.escapeString(chineseSurnameLatin.toString()))
            .replaceAll("\\{" + "chineseGivenNameLatin" + "\\}", apiClient.escapeString(chineseGivenNameLatin.toString()))
            .replaceAll("\\{" + "knownGender" + "\\}", apiClient.escapeString(knownGender.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if (progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "api_key" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call chineseNameGenderCandidatesValidateBeforeCall(String chineseSurnameLatin, String chineseGivenNameLatin, String knownGender, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'chineseSurnameLatin' is set
        if (chineseSurnameLatin == null) {
            throw new ApiException("Missing the required parameter 'chineseSurnameLatin' when calling chineseNameGenderCandidates(Async)");
        }
        
        // verify the required parameter 'chineseGivenNameLatin' is set
        if (chineseGivenNameLatin == null) {
            throw new ApiException("Missing the required parameter 'chineseGivenNameLatin' when calling chineseNameGenderCandidates(Async)");
        }
        
        // verify the required parameter 'knownGender' is set
        if (knownGender == null) {
            throw new ApiException("Missing the required parameter 'knownGender' when calling chineseNameGenderCandidates(Async)");
        }
        

        com.squareup.okhttp.Call call = chineseNameGenderCandidatesCall(chineseSurnameLatin, chineseGivenNameLatin, knownGender, progressListener, progressRequestListener);
        return call;

    }

    /**
     * Identify Chinese name candidates, based on the romanized name - having a known gender (&#39;male&#39; or &#39;female&#39;)
     * 
     * @param chineseSurnameLatin  (required)
     * @param chineseGivenNameLatin  (required)
     * @param knownGender  (required)
     * @return RomanizedNameOut
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public RomanizedNameOut chineseNameGenderCandidates(String chineseSurnameLatin, String chineseGivenNameLatin, String knownGender) throws ApiException {
        ApiResponse<RomanizedNameOut> resp = chineseNameGenderCandidatesWithHttpInfo(chineseSurnameLatin, chineseGivenNameLatin, knownGender);
        return resp.getData();
    }

    /**
     * Identify Chinese name candidates, based on the romanized name - having a known gender (&#39;male&#39; or &#39;female&#39;)
     * 
     * @param chineseSurnameLatin  (required)
     * @param chineseGivenNameLatin  (required)
     * @param knownGender  (required)
     * @return ApiResponse&lt;RomanizedNameOut&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<RomanizedNameOut> chineseNameGenderCandidatesWithHttpInfo(String chineseSurnameLatin, String chineseGivenNameLatin, String knownGender) throws ApiException {
        com.squareup.okhttp.Call call = chineseNameGenderCandidatesValidateBeforeCall(chineseSurnameLatin, chineseGivenNameLatin, knownGender, null, null);
        Type localVarReturnType = new TypeToken<RomanizedNameOut>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Identify Chinese name candidates, based on the romanized name - having a known gender (&#39;male&#39; or &#39;female&#39;) (asynchronously)
     * 
     * @param chineseSurnameLatin  (required)
     * @param chineseGivenNameLatin  (required)
     * @param knownGender  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call chineseNameGenderCandidatesAsync(String chineseSurnameLatin, String chineseGivenNameLatin, String knownGender, final ApiCallback<RomanizedNameOut> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = chineseNameGenderCandidatesValidateBeforeCall(chineseSurnameLatin, chineseGivenNameLatin, knownGender, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<RomanizedNameOut>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
}
