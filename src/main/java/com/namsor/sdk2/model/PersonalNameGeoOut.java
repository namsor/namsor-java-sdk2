/*
 * NamSor API v2
 * NamSor API v2 : enpoints to process personal names (gender, cultural origin or ethnicity) in all alphabets or languages. By default, enpoints use 1 unit per name (ex. Gender), but Ethnicity classification uses 10 to 20 units per name depending on taxonomy. Use GET methods for small tests, but prefer POST methods for higher throughput (batch processing of up to 100 names at a time). Need something you can't find here? We have many more features coming soon. Let us know, we'll do our best to add it! 
 *
 * OpenAPI spec version: 2.0.16
 * Contact: contact@namsor.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.namsor.sdk2.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Classified geo names
 */
@ApiModel(description = "Classified geo names")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-19T10:09:03.048+02:00[Europe/Berlin]")
public class PersonalNameGeoOut {
  public static final String SERIALIZED_NAME_SCRIPT = "script";
  @SerializedName(SERIALIZED_NAME_SCRIPT)
  private String script;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_SCORE = "score";
  @SerializedName(SERIALIZED_NAME_SCORE)
  private Double score;

  public static final String SERIALIZED_NAME_COUNTRY = "country";
  @SerializedName(SERIALIZED_NAME_COUNTRY)
  private String country;

  public static final String SERIALIZED_NAME_COUNTRY_ALT = "countryAlt";
  @SerializedName(SERIALIZED_NAME_COUNTRY_ALT)
  private String countryAlt;

  public static final String SERIALIZED_NAME_REGION = "region";
  @SerializedName(SERIALIZED_NAME_REGION)
  private String region;

  public static final String SERIALIZED_NAME_TOP_REGION = "topRegion";
  @SerializedName(SERIALIZED_NAME_TOP_REGION)
  private String topRegion;

  public static final String SERIALIZED_NAME_SUB_REGION = "subRegion";
  @SerializedName(SERIALIZED_NAME_SUB_REGION)
  private String subRegion;

  public static final String SERIALIZED_NAME_COUNTRIES_TOP = "countriesTop";
  @SerializedName(SERIALIZED_NAME_COUNTRIES_TOP)
  private List<String> countriesTop = new ArrayList<String>();

  public static final String SERIALIZED_NAME_PROBABILITY_CALIBRATED = "probabilityCalibrated";
  @SerializedName(SERIALIZED_NAME_PROBABILITY_CALIBRATED)
  private Double probabilityCalibrated;

  public static final String SERIALIZED_NAME_PROBABILITY_ALT_CALIBRATED = "probabilityAltCalibrated";
  @SerializedName(SERIALIZED_NAME_PROBABILITY_ALT_CALIBRATED)
  private Double probabilityAltCalibrated;

  public PersonalNameGeoOut script(String script) {
    this.script = script;
    return this;
  }

   /**
   * Get script
   * @return script
  **/
  @ApiModelProperty(value = "")
  public String getScript() {
    return script;
  }

  public void setScript(String script) {
    this.script = script;
  }

  public PersonalNameGeoOut id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public PersonalNameGeoOut name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The input name.
   * @return name
  **/
  @ApiModelProperty(value = "The input name.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public PersonalNameGeoOut score(Double score) {
    this.score = score;
    return this;
  }

   /**
   * Higher score is better, but score is not normalized. Use calibratedProbability if available. 
   * minimum: 0
   * maximum: 100
   * @return score
  **/
  @ApiModelProperty(value = "Higher score is better, but score is not normalized. Use calibratedProbability if available. ")
  public Double getScore() {
    return score;
  }

  public void setScore(Double score) {
    this.score = score;
  }

  public PersonalNameGeoOut country(String country) {
    this.country = country;
    return this;
  }

   /**
   * Most likely country 
   * @return country
  **/
  @ApiModelProperty(value = "Most likely country ")
  public String getCountry() {
    return country;
  }

  public void setCountry(String country) {
    this.country = country;
  }

  public PersonalNameGeoOut countryAlt(String countryAlt) {
    this.countryAlt = countryAlt;
    return this;
  }

   /**
   * Second best alternative : country 
   * @return countryAlt
  **/
  @ApiModelProperty(value = "Second best alternative : country ")
  public String getCountryAlt() {
    return countryAlt;
  }

  public void setCountryAlt(String countryAlt) {
    this.countryAlt = countryAlt;
  }

  public PersonalNameGeoOut region(String region) {
    this.region = region;
    return this;
  }

   /**
   * Most likely region (based on country ISO2 code)
   * @return region
  **/
  @ApiModelProperty(value = "Most likely region (based on country ISO2 code)")
  public String getRegion() {
    return region;
  }

  public void setRegion(String region) {
    this.region = region;
  }

  public PersonalNameGeoOut topRegion(String topRegion) {
    this.topRegion = topRegion;
    return this;
  }

   /**
   * Most likely top region (based on country ISO2 code)
   * @return topRegion
  **/
  @ApiModelProperty(value = "Most likely top region (based on country ISO2 code)")
  public String getTopRegion() {
    return topRegion;
  }

  public void setTopRegion(String topRegion) {
    this.topRegion = topRegion;
  }

  public PersonalNameGeoOut subRegion(String subRegion) {
    this.subRegion = subRegion;
    return this;
  }

   /**
   * Most likely sub region (based on country ISO2 code)
   * @return subRegion
  **/
  @ApiModelProperty(value = "Most likely sub region (based on country ISO2 code)")
  public String getSubRegion() {
    return subRegion;
  }

  public void setSubRegion(String subRegion) {
    this.subRegion = subRegion;
  }

  public PersonalNameGeoOut countriesTop(List<String> countriesTop) {
    this.countriesTop = countriesTop;
    return this;
  }

  public PersonalNameGeoOut addCountriesTopItem(String countriesTopItem) {
    if (this.countriesTop == null) {
      this.countriesTop = new ArrayList<String>();
    }
    this.countriesTop.add(countriesTopItem);
    return this;
  }

   /**
   * List countries (top 10)
   * @return countriesTop
  **/
  @ApiModelProperty(value = "List countries (top 10)")
  public List<String> getCountriesTop() {
    return countriesTop;
  }

  public void setCountriesTop(List<String> countriesTop) {
    this.countriesTop = countriesTop;
  }

  public PersonalNameGeoOut probabilityCalibrated(Double probabilityCalibrated) {
    this.probabilityCalibrated = probabilityCalibrated;
    return this;
  }

   /**
   * The calibrated probability for country to have been guessed correctly. -1 &#x3D; still calibrating. 
   * minimum: -1
   * maximum: 1
   * @return probabilityCalibrated
  **/
  @ApiModelProperty(value = "The calibrated probability for country to have been guessed correctly. -1 = still calibrating. ")
  public Double getProbabilityCalibrated() {
    return probabilityCalibrated;
  }

  public void setProbabilityCalibrated(Double probabilityCalibrated) {
    this.probabilityCalibrated = probabilityCalibrated;
  }

  public PersonalNameGeoOut probabilityAltCalibrated(Double probabilityAltCalibrated) {
    this.probabilityAltCalibrated = probabilityAltCalibrated;
    return this;
  }

   /**
   * The calibrated probability for country OR countryAlt to have been guessed correctly. -1 &#x3D; still calibrating. 
   * minimum: -1
   * maximum: 1
   * @return probabilityAltCalibrated
  **/
  @ApiModelProperty(value = "The calibrated probability for country OR countryAlt to have been guessed correctly. -1 = still calibrating. ")
  public Double getProbabilityAltCalibrated() {
    return probabilityAltCalibrated;
  }

  public void setProbabilityAltCalibrated(Double probabilityAltCalibrated) {
    this.probabilityAltCalibrated = probabilityAltCalibrated;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PersonalNameGeoOut personalNameGeoOut = (PersonalNameGeoOut) o;
    return Objects.equals(this.script, personalNameGeoOut.script) &&
        Objects.equals(this.id, personalNameGeoOut.id) &&
        Objects.equals(this.name, personalNameGeoOut.name) &&
        Objects.equals(this.score, personalNameGeoOut.score) &&
        Objects.equals(this.country, personalNameGeoOut.country) &&
        Objects.equals(this.countryAlt, personalNameGeoOut.countryAlt) &&
        Objects.equals(this.region, personalNameGeoOut.region) &&
        Objects.equals(this.topRegion, personalNameGeoOut.topRegion) &&
        Objects.equals(this.subRegion, personalNameGeoOut.subRegion) &&
        Objects.equals(this.countriesTop, personalNameGeoOut.countriesTop) &&
        Objects.equals(this.probabilityCalibrated, personalNameGeoOut.probabilityCalibrated) &&
        Objects.equals(this.probabilityAltCalibrated, personalNameGeoOut.probabilityAltCalibrated);
  }

  @Override
  public int hashCode() {
    return Objects.hash(script, id, name, score, country, countryAlt, region, topRegion, subRegion, countriesTop, probabilityCalibrated, probabilityAltCalibrated);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PersonalNameGeoOut {\n");
    sb.append("    script: ").append(toIndentedString(script)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    score: ").append(toIndentedString(score)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    countryAlt: ").append(toIndentedString(countryAlt)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    topRegion: ").append(toIndentedString(topRegion)).append("\n");
    sb.append("    subRegion: ").append(toIndentedString(subRegion)).append("\n");
    sb.append("    countriesTop: ").append(toIndentedString(countriesTop)).append("\n");
    sb.append("    probabilityCalibrated: ").append(toIndentedString(probabilityCalibrated)).append("\n");
    sb.append("    probabilityAltCalibrated: ").append(toIndentedString(probabilityAltCalibrated)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

