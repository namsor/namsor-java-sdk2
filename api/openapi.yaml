openapi: 3.0.1
info:
  contact:
    email: contact@namsor.com
    name: Namsor SAS
    url: http://www.namsor.com/
  description: "NamSor API v2 : enpoints to process personal names (gender, cultural\
    \ origin or ethnicity) in all alphabets or languages. By default, enpoints use\
    \ 1 unit per name (ex. Gender), but Ethnicity classification uses 10 to 20 units\
    \ per name depending on taxonomy. Use GET methods for small tests, but prefer\
    \ POST methods for higher throughput (batch processing of up to 100 names at a\
    \ time). Need something you can't find here? We have many more features coming\
    \ soon. Let us know, we'll do our best to add it! "
  license:
    name: NamSorAPI_Lic_v0.0.7
    url: https://v2.namsor.com/NamSorAPIv2/assets/pdf/201803_NamSor_API_Terms_v007.pdf
  title: NamSor API v2
  version: 2.0.29
externalDocs:
  description: "NamSor API client SDKs v2 for Java, Python"
  url: https://github.com/namsor
servers:
- description: namsor_v2
  url: https://v2.namsor.com/NamSorAPIv2
security:
- api_key: []
tags:
- description: "Personal names (anthroponyms) : gender, country origin/ethnicity,\
    \ diaspora, US 'race'/ethniciy"
  name: personal
- description: Social media and pseudonyms
  name: social
- description: CHINESE special features
  name: chinese
- description: JAPANESE special features
  name: japanese
- description: INDIAN special features
  name: indian
- description: "Administrative, system management."
  name: admin
paths:
  /api2/json/regions:
    get:
      operationId: regions
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegionOut'
          description: List of countries and regions.
        "401":
          description: Missing or incorrect API Key
      summary: Print basic source statistics.
      tags:
      - admin
      x-accepts: application/json
  /api2/json/disable/{source}/{disabled}:
    get:
      operationId: disable
      parameters:
      - description: The API Key to set as enabled/disabled.
        explode: false
        in: path
        name: source
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: disabled
        required: true
        schema:
          type: boolean
        style: simple
      responses:
        "200":
          description: Disabled the API Key.
        "401":
          description: Missing or incorrect API Key
      summary: Activate/deactivate an API Key.
      tags:
      - admin
      x-accepts: application/json
  /api2/json/nameType/{properNoun}:
    get:
      operationId: nameType
      parameters:
      - explode: false
        in: path
        name: properNoun
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProperNounCategorizedOut'
          description: A typed name.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
      security:
      - api_key: []
      summary: "Infer the likely type of a proper noun (personal name, brand name,\
        \ place name etc.)"
      tags:
      - general
      x-accepts: application/json
  /api2/json/country/{personalNameFull}:
    get:
      operationId: country
      parameters:
      - explode: false
        in: path
        name: personalNameFull
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalNameGeoOut'
          description: A origined name.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
      security:
      - api_key: []
      summary: "[USES 10 UNITS PER NAME] Infer the likely country of residence of\
        \ a personal full name, or one surname. Assumes names as they are in the country\
        \ of residence OR the country of origin."
      tags:
      - personal
      x-accepts: application/json
  /api2/json/origin/{firstName}/{lastName}:
    get:
      operationId: origin
      parameters:
      - explode: false
        in: path
        name: firstName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: lastName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirstLastNameOriginedOut'
          description: A origined name.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
      security:
      - api_key: []
      summary: "[USES 10 UNITS PER NAME] Infer the likely country of origin of a personal\
        \ name. Assumes names as they are in the country of origin. For US, CA, AU,\
        \ NZ and other melting-pots : use 'diaspora' instead."
      tags:
      - personal
      x-accepts: application/json
  /api2/json/softwareVersion:
    get:
      operationId: softwareVersion
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SoftwareVersionOut'
          description: The current software version
        "401":
          description: Missing or incorrect token
      summary: Get the current software version
      tags:
      - admin
      x-accepts: application/json
  /api2/json/apiStatus:
    get:
      operationId: apiStatus
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIClassifiersStatusOut'
          description: Available classifiers and status
        "401":
          description: Missing or incorrect token
      summary: Prints the current status of the classifiers. A classifier name in
        apiStatus corresponds to a service name in apiServices.
      tags:
      - admin
      x-accepts: application/json
  /api2/json/apiServices:
    get:
      operationId: availableServices
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIServicesOut'
          description: Available services
        "401":
          description: Missing or incorrect token
      summary: List of classification services and usage cost in Units per classification
        (default is 1=ONE Unit). Some API endpoints (ex. Corridor) combine multiple
        classifiers.
      tags:
      - admin
      x-accepts: application/json
  /api2/json/taxonomyClasses/{classifierName}:
    get:
      operationId: taxonomyClasses
      parameters:
      - explode: false
        in: path
        name: classifierName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIClassifierTaxonomyOut'
          description: Available plans
        "401":
          description: Missing or incorrect token
      summary: Print the taxonomy classes valid for the given classifier.
      tags:
      - admin
      x-accepts: application/json
  /api2/json/apiUsage:
    get:
      operationId: apiUsage
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIPeriodUsageOut'
          description: Print current API usage.
        "401":
          description: Missing or incorrect API Key
      security:
      - api_key: []
      summary: Print current API usage.
      tags:
      - admin
      x-accepts: application/json
  /api2/json/apiUsageHistory:
    get:
      operationId: apiUsageHistory
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIUsageHistoryOut'
          description: Print historical API usage (NB. new output format form v2.0.15)
        "401":
          description: Missing or incorrect API Key
      security:
      - api_key: []
      summary: Print historical API usage.
      tags:
      - admin
      x-accepts: application/json
  /api2/json/apiUsageHistoryAggregate:
    get:
      operationId: apiUsageHistoryAggregate
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIUsageAggregatedOut'
          description: Print historical API usage.
        "401":
          description: Missing or incorrect API Key
      security:
      - api_key: []
      summary: "Print historical API usage (in an aggregated view, by service, by\
        \ day/hour/min)."
      tags:
      - admin
      x-accepts: application/json
  /api2/json/learnable/{source}/{learnable}/{token}:
    get:
      operationId: learnable
      parameters:
      - description: The API Key to set as learnable/non learnable.
        explode: false
        in: path
        name: source
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: learnable
        required: true
        schema:
          type: boolean
        style: simple
      - explode: false
        in: path
        name: token
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIKeyOut'
          description: Set learning from source.
        "401":
          description: Missing or incorrect API Key
      summary: Activate/deactivate learning from a source.
      tags:
      - admin
      x-accepts: application/json
  /api2/json/learnable/{source}/{learnable}:
    get:
      operationId: learnable_1
      parameters:
      - description: The API Key to set as learnable/non learnable.
        explode: false
        in: path
        name: source
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: learnable
        required: true
        schema:
          type: boolean
        style: simple
      responses:
        "200":
          description: Set learning from source.
        "401":
          description: Missing or incorrect API Key
      summary: Activate/deactivate learning from a source.
      tags:
      - admin
      x-accepts: application/json
  /api2/json/apiKeyInfo:
    get:
      operationId: apiKeyInfo
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIKeyOut'
          description: "Read API Key (uncached, i.e. DB read)"
        "401":
          description: Missing or incorrect API Key
      summary: Read API Key info.
      tags:
      - admin
      x-accepts: application/json
  /api2/json/anonymize/{source}/{anonymized}:
    get:
      operationId: anonymize
      parameters:
      - explode: false
        in: path
        name: source
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: anonymized
        required: true
        schema:
          type: boolean
        style: simple
      responses:
        "200":
          description: Anonymization of a source.
        "401":
          description: Missing or incorrect API Key
      summary: Activate/deactivate anonymization for a source.
      tags:
      - admin
      x-accepts: application/json
  /api2/json/anonymize/{source}/{anonymized}/{token}:
    get:
      operationId: anonymize_1
      parameters:
      - explode: false
        in: path
        name: source
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: anonymized
        required: true
        schema:
          type: boolean
        style: simple
      - explode: false
        in: path
        name: token
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIKeyOut'
          description: Anonymization of a source.
        "401":
          description: Missing or incorrect API Key
      summary: Activate/deactivate anonymization for a source.
      tags:
      - admin
      x-accepts: application/json
  /api2/json/nameTypeGeo/{properNoun}/{countryIso2}:
    get:
      operationId: nameTypeGeo
      parameters:
      - explode: false
        in: path
        name: properNoun
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: countryIso2
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProperNounCategorizedOut'
          description: A typed name.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
      security:
      - api_key: []
      summary: "Infer the likely type of a proper noun (personal name, brand name,\
        \ place name etc.)"
      tags:
      - general
      x-accepts: application/json
  /api2/json/nameTypeBatch:
    post:
      operationId: nameTypeBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchNameIn'
        description: A list of proper names
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchProperNounCategorizedOut'
          description: A list of commonTypeized names.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
        "400":
          description: Bad request (ex. too many names)
      security:
      - api_key: []
      summary: "Infer the likely common type of up to 100 proper nouns (personal name,\
        \ brand name, place name etc.)"
      tags:
      - general
      x-content-type: application/json
      x-accepts: application/json
  /api2/json/nameTypeGeoBatch:
    post:
      operationId: nameTypeGeoBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchNameGeoIn'
        description: A list of proper names
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchProperNounCategorizedOut'
          description: A list of commonTypeized names.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
        "400":
          description: Bad request (ex. too many names)
      security:
      - api_key: []
      summary: "Infer the likely common type of up to 100 proper nouns (personal name,\
        \ brand name, place name etc.)"
      tags:
      - general
      x-content-type: application/json
      x-accepts: application/json
  /api2/json/corridor/{countryIso2From}/{firstNameFrom}/{lastNameFrom}/{countryIso2To}/{firstNameTo}/{lastNameTo}:
    get:
      operationId: corridor
      parameters:
      - explode: false
        in: path
        name: countryIso2From
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: firstNameFrom
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: lastNameFrom
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: countryIso2To
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: firstNameTo
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: lastNameTo
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CorridorOut'
          description: Two classified names.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
      security:
      - api_key: []
      summary: "[USES 20 UNITS PER NAME COUPLE] Infer several classifications for\
        \ a cross border interaction between names (ex. remit, travel, intl com)"
      tags:
      - personal
      x-accepts: application/json
  /api2/json/corridorBatch:
    post:
      operationId: corridorBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchCorridorIn'
        description: "A list of name pairs, with country code (nameFrom -> nameTo)."
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchCorridorOut'
          description: A list of classified name pairs.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
        "400":
          description: Bad request (ex. too many names)
      security:
      - api_key: []
      summary: "[USES 20 UNITS PER NAME PAIR] Infer several classifications for up\
        \ to 100 cross border interaction between names (ex. remit, travel, intl com)"
      tags:
      - personal
      x-content-type: application/json
      x-accepts: application/json
  /api2/json/gender/{firstName}:
    get:
      operationId: gender
      parameters:
      - explode: false
        in: path
        name: firstName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirstLastNameGenderedOut'
          description: A genderized name.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
      security:
      - api_key: []
      summary: "Infer the likely gender of a just a fiven name, assuming default 'US'\
        \ local context. Please use preferably full names and local geographic context\
        \ for better accuracy."
      tags:
      - personal
      x-accepts: application/json
  /api2/json/gender/{firstName}/{lastName}:
    get:
      operationId: gender_1
      parameters:
      - explode: false
        in: path
        name: firstName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: lastName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirstLastNameGenderedOut'
          description: A genderized name.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
      security:
      - api_key: []
      summary: Infer the likely gender of a name.
      tags:
      - personal
      x-accepts: application/json
  /api2/json/genderGeo/{firstName}/{lastName}/{countryIso2}:
    get:
      operationId: genderGeo
      parameters:
      - explode: false
        in: path
        name: firstName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: lastName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: countryIso2
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirstLastNameGenderedOut'
          description: A genderized name.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
      security:
      - api_key: []
      summary: "Infer the likely gender of a name, given a local context (ISO2 country\
        \ code)."
      tags:
      - personal
      x-accepts: application/json
  /api2/json/genderGeoBatch:
    post:
      operationId: genderGeoBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchFirstLastNameGeoIn'
        description: "A list of names, with country code."
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchFirstLastNameGenderedOut'
          description: A list of genderized names.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
        "400":
          description: Bad request (ex. too many names)
      security:
      - api_key: []
      summary: "Infer the likely gender of up to 100 names, each given a local context\
        \ (ISO2 country code)."
      tags:
      - personal
      x-content-type: application/json
      x-accepts: application/json
  /api2/json/genderBatch:
    post:
      operationId: genderBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchFirstLastNameIn'
        description: A list of personal names
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchFirstLastNameGenderedOut'
          description: A list of genderized names.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
        "400":
          description: Bad request (ex. too many names)
      security:
      - api_key: []
      summary: "Infer the likely gender of up to 100 names, detecting automatically\
        \ the cultural context."
      tags:
      - personal
      x-content-type: application/json
      x-accepts: application/json
  /api2/json/genderFullGeo/{fullName}/{countryIso2}:
    get:
      operationId: genderFullGeo
      parameters:
      - explode: false
        in: path
        name: fullName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: countryIso2
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalNameGenderedOut'
          description: A genderized name.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
      security:
      - api_key: []
      summary: "Infer the likely gender of a full name, given a local context (ISO2\
        \ country code)."
      tags:
      - personal
      x-accepts: application/json
  /api2/json/genderFull/{fullName}:
    get:
      operationId: genderFull
      parameters:
      - explode: false
        in: path
        name: fullName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalNameGenderedOut'
          description: A genderized name.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
      security:
      - api_key: []
      summary: "Infer the likely gender of a full name, ex. John H. Smith"
      tags:
      - personal
      x-accepts: application/json
  /api2/json/genderFullBatch:
    post:
      operationId: genderFullBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchPersonalNameIn'
        description: A list of personal names
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchPersonalNameGenderedOut'
          description: A list of genderized names.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
        "400":
          description: Bad request (ex. too many names)
      security:
      - api_key: []
      summary: "Infer the likely gender of up to 100 full names, detecting automatically\
        \ the cultural context."
      tags:
      - personal
      x-content-type: application/json
      x-accepts: application/json
  /api2/json/genderFullGeoBatch:
    post:
      operationId: genderFullGeoBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchPersonalNameGeoIn'
        description: "A list of personal names, with a country ISO2 code"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchPersonalNameGenderedOut'
          description: A list of genderized names.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
        "400":
          description: Bad request (ex. too many names)
      security:
      - api_key: []
      summary: "Infer the likely gender of up to 100 full names, with a given cultural\
        \ context (country ISO2 code)."
      tags:
      - personal
      x-content-type: application/json
      x-accepts: application/json
  /api2/json/originBatch:
    post:
      operationId: originBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchFirstLastNameIn'
        description: A list of personal names
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchFirstLastNameOriginedOut'
          description: A list of genderized names.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
        "400":
          description: Bad request (ex. too many names)
      security:
      - api_key: []
      summary: "[USES 10 UNITS PER NAME] Infer the likely country of origin of up\
        \ to 100 names, detecting automatically the cultural context."
      tags:
      - personal
      x-content-type: application/json
      x-accepts: application/json
  /api2/json/originFull/{personalNameFull}:
    get:
      operationId: originFull
      parameters:
      - explode: false
        in: path
        name: personalNameFull
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalNameOriginedOut'
          description: A origined name.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
      security:
      - api_key: []
      summary: "[USES 10 UNITS PER NAME] Infer the likely country of origin of a personal\
        \ name. Assumes names as they are in the country of origin. For US, CA, AU,\
        \ NZ and other melting-pots : use 'diaspora' instead."
      tags:
      - personal
      x-accepts: application/json
  /api2/json/originFullBatch:
    post:
      operationId: originFullBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchPersonalNameIn'
        description: A list of personal names
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchPersonalNameOriginedOut'
          description: A list of genderized names.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
        "400":
          description: Bad request (ex. too many names)
      security:
      - api_key: []
      summary: "[USES 10 UNITS PER NAME] Infer the likely country of origin of up\
        \ to 100 names, detecting automatically the cultural context."
      tags:
      - personal
      x-content-type: application/json
      x-accepts: application/json
  /api2/json/subclassificationIndian/{firstName}/{lastName}:
    get:
      operationId: subclassificationIndian
      parameters:
      - explode: false
        in: path
        name: firstName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: lastName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirstLastNameGeoSubclassificationOut'
          description: A classified name at a sub-country level.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
      security:
      - api_key: []
      summary: "[USES 10 UNITS PER NAME] Infer the likely Indian state of Union territory\
        \ according to ISO 3166-2:IN based on the name."
      tags:
      - indian
      x-accepts: application/json
  /api2/json/subclassificationIndianFull/{fullName}:
    get:
      operationId: subclassificationIndianFull
      parameters:
      - explode: false
        in: path
        name: fullName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalNameGeoSubclassificationOut'
          description: A classified name at a sub-country level.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
      security:
      - api_key: []
      summary: "[USES 10 UNITS PER NAME] Infer the likely Indian state of Union territory\
        \ according to ISO 3166-2:IN based on the name."
      tags:
      - indian
      x-accepts: application/json
  /api2/json/subclassification/{countryIso2}/{firstName}/{lastName}:
    get:
      operationId: subclassification
      parameters:
      - explode: false
        in: path
        name: countryIso2
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: firstName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: lastName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirstLastNameGeoSubclassificationOut'
          description: A classified name at a sub-country level.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
      security:
      - api_key: []
      summary: "[USES 10 UNITS PER NAME] Infer the likely origin of a name at a country\
        \ subclassification level (state or regeion). Initially, this is only supported\
        \ for India (ISO2 code 'IN')."
      tags:
      - personal
      x-accepts: application/json
  /api2/json/subclassificationFull/{countryIso2}/{fullName}:
    get:
      operationId: subclassificationFull
      parameters:
      - explode: false
        in: path
        name: countryIso2
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: fullName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirstLastNameGeoSubclassificationOut'
          description: A classified name at a sub-country level.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
      security:
      - api_key: []
      summary: "[USES 10 UNITS PER NAME] Infer the likely origin of a name at a country\
        \ subclassification level (state or regeion). Initially, this is only supported\
        \ for India (ISO2 code 'IN')."
      tags:
      - personal
      x-accepts: application/json
  /api2/json/subclassificationBatch:
    post:
      operationId: subclassificationBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchFirstLastNameGeoIn'
        description: A list of personal names
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchFirstLastNameGeoSubclassificationOut'
          description: A list of classified names at a sub-country level.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
        "400":
          description: Bad request (ex. too many names)
      security:
      - api_key: []
      summary: "[USES 10 UNITS PER NAME] Infer the likely origin of a list of up to\
        \ 100 names at a country subclassification level (state or regeion). Initially,\
        \ this is only supported for India (ISO2 code 'IN')."
      tags:
      - personal
      x-content-type: application/json
      x-accepts: application/json
  /api2/json/subclassificationFullBatch:
    post:
      operationId: subclassificationFullBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchPersonalNameGeoIn'
        description: A list of personal names
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchPersonalNameGeoSubclassificationOut'
          description: A list of classified names at a sub-country level.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
        "400":
          description: Bad request (ex. too many names)
      security:
      - api_key: []
      summary: "[USES 10 UNITS PER NAME] Infer the likely origin of a list of up to\
        \ 100 names at a country subclassification level (state or regeion). Initially,\
        \ this is only supported for India (ISO2 code 'IN')."
      tags:
      - personal
      x-content-type: application/json
      x-accepts: application/json
  /api2/json/subclassificationIndianBatch:
    post:
      operationId: subclassificationIndianBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchFirstLastNameGeoIn'
        description: A list of personal names
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchFirstLastNameGeoSubclassificationOut'
          description: A list of classified names at a subcountry level.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
        "400":
          description: Bad request (ex. too many names)
      security:
      - api_key: []
      summary: "[USES 10 UNITS PER NAME] Infer the likely Indian state of Union territory\
        \ according to ISO 3166-2:IN based on a list of up to 100 names."
      tags:
      - indian
      x-content-type: application/json
      x-accepts: application/json
  /api2/json/subclassificationIndianFullBatch:
    post:
      operationId: subclassificationIndianFullBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchPersonalNameGeoIn'
        description: A list of personal names
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchPersonalNameGeoSubclassificationOut'
          description: A list of classified names at a subcountry level.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
        "400":
          description: Bad request (ex. too many names)
      security:
      - api_key: []
      summary: "[USES 10 UNITS PER NAME] Infer the likely Indian state of Union territory\
        \ according to ISO 3166-2:IN based on a list of up to 100 names."
      tags:
      - indian
      x-content-type: application/json
      x-accepts: application/json
  /api2/json/religionIndianFull/{subDivisionIso31662}/{personalNameFull}:
    get:
      operationId: religion
      parameters:
      - explode: false
        in: path
        name: subDivisionIso31662
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: personalNameFull
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalNameReligionedOut'
          description: A religion-coded name.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
      security:
      - api_key: []
      summary: "[USES 10 UNITS PER NAME] Infer the likely religion of a personal Indian\
        \ full name, provided the Indian state or Union territory (NB/ this can be\
        \ inferred using the subclassification endpoint)."
      tags:
      - indian
      x-accepts: application/json
  /api2/json/religionIndian/{subDivisionIso31662}/{firstName}/{lastName}:
    get:
      operationId: religion_1
      parameters:
      - explode: false
        in: path
        name: subDivisionIso31662
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: firstName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: lastName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirstLastNameReligionedOut'
          description: A religion-coded name.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
      security:
      - api_key: []
      summary: "[USES 10 UNITS PER NAME] Infer the likely religion of a personal Indian\
        \ first/last name, provided the Indian state or Union territory (NB/ this\
        \ can be inferred using the subclassification endpoint)."
      tags:
      - indian
      x-accepts: application/json
  /api2/json/religion/{countryIso2}/{subDivisionIso31662}/{firstName}/{lastName}:
    get:
      operationId: religion_2
      parameters:
      - explode: false
        in: path
        name: countryIso2
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: subDivisionIso31662
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: firstName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: lastName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirstLastNameReligionedOut'
          description: A religion-coded name.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
      security:
      - api_key: []
      summary: "[USES 10 UNITS PER NAME] Infer the likely religion of a personal first/last\
        \ name. NB: only for INDIA (as of current version)."
      tags:
      - personal
      x-accepts: application/json
  /api2/json/religionFull/{countryIso2}/{subDivisionIso31662}/{personalNameFull}:
    get:
      operationId: religionFull
      parameters:
      - explode: false
        in: path
        name: countryIso2
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: subDivisionIso31662
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: personalNameFull
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalNameReligionedOut'
          description: A religion-coded name.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
      security:
      - api_key: []
      summary: "[USES 10 UNITS PER NAME] Infer the likely religion of a personal full\
        \ name. NB: only for INDIA (as of current version)."
      tags:
      - personal
      x-accepts: application/json
  /api2/json/religionFullBatch:
    post:
      operationId: religionFullBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchPersonalNameGeoSubdivisionIn'
        description: A list of personal names
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchPersonalNameReligionedOut'
          description: A list of religion-coded names.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
        "400":
          description: Bad request (ex. too many names)
      security:
      - api_key: []
      summary: "[USES 10 UNITS PER NAME] Infer the likely religion of up to 100 personal\
        \ full names. NB: only for India as of currently."
      tags:
      - personal
      x-content-type: application/json
      x-accepts: application/json
  /api2/json/religionIndianFullBatch:
    post:
      operationId: religionIndianFullBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchPersonalNameSubdivisionIn'
        description: A list of personal names
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchPersonalNameReligionedOut'
          description: A list of religion-coded names.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
        "400":
          description: Bad request (ex. too many names)
      security:
      - api_key: []
      summary: "[USES 10 UNITS PER NAME] Infer the likely religion of up to 100 personal\
        \ full Indian names, provided the subclassification at State or Union territory\
        \ level (NB/ can be inferred using the subclassification endpoint)."
      tags:
      - indian
      x-content-type: application/json
      x-accepts: application/json
  /api2/json/religionBatch:
    post:
      operationId: religionBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchFirstLastNameGeoSubdivisionIn'
        description: A list of personal first / last names
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchFirstLastNameReligionedOut'
          description: A list of religion-coded names.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
        "400":
          description: Bad request (ex. too many names)
      security:
      - api_key: []
      summary: "[USES 10 UNITS PER NAME] Infer the likely religion of up to 100 personal\
        \ first/last names. NB: only for India as of currently."
      tags:
      - personal
      x-content-type: application/json
      x-accepts: application/json
  /api2/json/religionIndianBatch:
    post:
      operationId: religionIndianBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchFirstLastNameSubdivisionIn'
        description: A list of personal names
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchFirstLastNameReligionedOut'
          description: A list of religion-coded names.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
        "400":
          description: Bad request (ex. too many names)
      security:
      - api_key: []
      summary: "[USES 10 UNITS PER NAME] Infer the likely religion of up to 100 personal\
        \ first/last Indian names, provided the subclassification at State or Union\
        \ territory level (NB/ can be inferred using the subclassification endpoint)."
      tags:
      - indian
      x-content-type: application/json
      x-accepts: application/json
  /api2/json/castegroupIndianFull/{subDivisionIso31662}/{personalNameFull}:
    get:
      operationId: castegroupIndianFull
      parameters:
      - explode: false
        in: path
        name: subDivisionIso31662
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: personalNameFull
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalNameCastegroupOut'
          description: A castegroup-coded name.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
      security:
      - api_key: []
      summary: "[USES 10 UNITS PER NAME] Infer the likely Indian name castegroup of\
        \ a personal full name."
      tags:
      - indian
      x-accepts: application/json
  /api2/json/castegroupIndianFullBatch:
    post:
      operationId: castegroupIndianFullBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchPersonalNameSubdivisionIn'
        description: A list of personal names
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchPersonalNameCastegroupOut'
          description: A list of castegroup-coded names.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
        "400":
          description: Bad request (ex. too many names)
      security:
      - api_key: []
      summary: "[USES 10 UNITS PER NAME] Infer the likely Indian name castegroup of\
        \ up to 100 personal full names. "
      tags:
      - indian
      x-content-type: application/json
      x-accepts: application/json
  /api2/json/castegroupIndian/{subDivisionIso31662}/{firstName}/{lastName}:
    get:
      operationId: castegroupIndian
      parameters:
      - explode: false
        in: path
        name: subDivisionIso31662
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: firstName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: lastName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirstLastNameCastegroupOut'
          description: A castegroup-coded name.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
      security:
      - api_key: []
      summary: "[USES 10 UNITS PER NAME] Infer the likely Indian name castegroup of\
        \ a first / last name."
      tags:
      - indian
      x-accepts: application/json
  /api2/json/castegroupIndianBatch:
    post:
      operationId: castegroupIndianBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchFirstLastNameSubdivisionIn'
        description: A list of personal names
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchFirstLastNameCastegroupOut'
          description: A list of castegroup-coded names.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
        "400":
          description: Bad request (ex. too many names)
      security:
      - api_key: []
      summary: "[USES 10 UNITS PER NAME] Infer the likely Indian name castegroup of\
        \ up to 100 personal first / last names. "
      tags:
      - indian
      x-content-type: application/json
      x-accepts: application/json
  /api2/json/casteIndian/{subDivisionIso31662}/{firstName}/{lastName}:
    get:
      operationId: castegroupIndianHindu
      parameters:
      - explode: false
        in: path
        name: subDivisionIso31662
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: firstName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: lastName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirstLastNameCasteOut'
          description: A caste-coded name.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
      security:
      - api_key: []
      summary: "[USES 10 UNITS PER NAME] Infer the likely Indian name caste of a personal\
        \ Hindu name."
      tags:
      - indian
      x-accepts: application/json
  /api2/json/casteIndianBatch:
    post:
      operationId: casteIndianBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchFirstLastNameGeoSubdivisionIn'
        description: A list of personal names
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchFirstLastNameCasteOut'
          description: A list of castegroup-coded names.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
        "400":
          description: Bad request (ex. too many names)
      security:
      - api_key: []
      summary: "[USES 10 UNITS PER NAME] Infer the likely Indian name caste of up\
        \ to 100 personal Indian Hindu names. "
      tags:
      - indian
      x-content-type: application/json
      x-accepts: application/json
  /api2/json/countryBatch:
    post:
      operationId: countryBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchPersonalNameIn'
        description: A list of personal names
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchPersonalNameGeoOut'
          description: A list of origined names.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
        "400":
          description: Bad request (ex. too many names)
      security:
      - api_key: []
      summary: "[USES 10 UNITS PER NAME] Infer the likely country of residence of\
        \ up to 100 personal full names, or surnames. Assumes names as they are in\
        \ the country of residence OR the country of origin."
      tags:
      - personal
      x-content-type: application/json
      x-accepts: application/json
  /api2/json/countryFnLn/{firstName}/{lastName}:
    get:
      operationId: countryFnLn
      parameters:
      - explode: false
        in: path
        name: firstName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: lastName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirstLastNameOriginedOut'
          description: A origined name.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
      security:
      - api_key: []
      summary: "[USES 10 UNITS PER NAME] Infer the likely country of residence of\
        \ a personal first / last name, or one surname. Assumes names as they are\
        \ in the country of residence OR the country of origin."
      tags:
      - personal
      x-accepts: application/json
  /api2/json/countryFnLnBatch:
    post:
      operationId: countryFnLnBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchFirstLastNameIn'
        description: A list of personal names
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchFirstLastNameGeoOut'
          description: A list of origined names.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
        "400":
          description: Bad request (ex. too many names)
      security:
      - api_key: []
      summary: "[USES 10 UNITS PER NAME] Infer the likely country of residence of\
        \ up to 100 personal first / last names, or surnames. Assumes names as they\
        \ are in the country of residence OR the country of origin."
      tags:
      - personal
      x-content-type: application/json
      x-accepts: application/json
  /api2/json/usRaceEthnicity/{firstName}/{lastName}:
    get:
      operationId: usRaceEthnicity
      parameters:
      - explode: false
        in: path
        name: firstName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: lastName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirstLastNameUSRaceEthnicityOut'
          description: "a US resident's likely race/ethnicity : W_NL (white, non latino),\
            \ HL (hispano latino),  A (asian, non latino), B_NL (black, non latino),\
            \ AI_AN (American Indian or Alaskan Native*) and PI (Pacific Islander*).\
            \ *optionally"
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
      security:
      - api_key: []
      summary: "[USES 10 UNITS PER NAME] Infer a US resident's likely race/ethnicity\
        \ according to US Census taxonomy W_NL (white, non latino), HL (hispano latino),\
        \  A (asian, non latino), B_NL (black, non latino). Optionally add header\
        \ X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional\
        \ classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander)."
      tags:
      - personal
      x-accepts: application/json
  /api2/json/usRaceEthnicityZIP5/{firstName}/{lastName}/{zip5Code}:
    get:
      operationId: usRaceEthnicityZIP5
      parameters:
      - explode: false
        in: path
        name: firstName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: lastName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: zip5Code
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirstLastNameUSRaceEthnicityOut'
          description: "a US resident's likely race/ethnicity : W_NL (white, non latino),\
            \ HL (hispano latino),  A (asian, non latino), B_NL (black, non latino),\
            \ AI_AN (American Indian or Alaskan Native*) and PI (Pacific Islander*).\
            \ *optionally"
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
      security:
      - api_key: []
      summary: "[USES 10 UNITS PER NAME] Infer a US resident's likely race/ethnicity\
        \ according to US Census taxonomy, using (optional) ZIP5 code info. Output\
        \ is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino),\
        \ B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY:\
        \ USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian\
        \ or Alaskan Native) and PI (Pacific Islander)."
      tags:
      - personal
      x-accepts: application/json
  /api2/json/usRaceEthnicityBatch:
    post:
      operationId: usRaceEthnicityBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchFirstLastNameGeoIn'
        description: A list of personal names
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchFirstLastNameUSRaceEthnicityOut'
          description: "A list of US resident's likely race/ethnicity. W_NL (white,\
            \ non latino), HL (hispano latino),  A (asian, non latino), B_NL (black,\
            \ non latino), AI_AN (American Indian or Alaskan Native*) and PI (Pacific\
            \ Islander*). *optionally"
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
        "400":
          description: Bad request (ex. too many names)
      security:
      - api_key: []
      summary: "[USES 10 UNITS PER NAME] Infer up-to 100 US resident's likely race/ethnicity\
        \ according to US Census taxonomy. Output is W_NL (white, non latino), HL\
        \ (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally\
        \ add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for\
        \ two additional classes, AI_AN (American Indian or Alaskan Native) and PI\
        \ (Pacific Islander)."
      tags:
      - personal
      x-content-type: application/json
      x-accepts: application/json
  /api2/json/usZipRaceEthnicityBatch:
    post:
      operationId: usZipRaceEthnicityBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchFirstLastNameGeoZippedIn'
        description: A list of personal names
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchFirstLastNameUSRaceEthnicityOut'
          description: "A list of US resident's likely race/ethnicity. W_NL (white,\
            \ non latino), HL (hispano latino),  A (asian, non latino), B_NL (black,\
            \ non latino), AI_AN (American Indian or Alaskan Native*) and PI (Pacific\
            \ Islander*). *optionally"
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
        "400":
          description: Bad request (ex. too many names)
      security:
      - api_key: []
      summary: "[USES 10 UNITS PER NAME] Infer up-to 100 US resident's likely race/ethnicity\
        \ according to US Census taxonomy, with (optional) ZIP code. Output is W_NL\
        \ (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black,\
        \ non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES\
        \ for two additional classes, AI_AN (American Indian or Alaskan Native) and\
        \ PI (Pacific Islander)."
      tags:
      - personal
      x-content-type: application/json
      x-accepts: application/json
  /api2/json/usRaceEthnicityFull/{personalNameFull}:
    get:
      operationId: usRaceEthnicityFull
      parameters:
      - explode: false
        in: path
        name: personalNameFull
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalNameUSRaceEthnicityOut'
          description: "a US resident's likely race/ethnicity : W_NL (white, non latino),\
            \ HL (hispano latino),  A (asian, non latino), B_NL (black, non latino),\
            \ AI_AN (American Indian or Alaskan Native*) and PI (Pacific Islander*).\
            \ *optionally"
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
      security:
      - api_key: []
      summary: "[USES 10 UNITS PER NAME] Infer a US resident's likely race/ethnicity\
        \ according to US Census taxonomy W_NL (white, non latino), HL (hispano latino),\
        \  A (asian, non latino), B_NL (black, non latino). Optionally add header\
        \ X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional\
        \ classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander)."
      tags:
      - personal
      x-accepts: application/json
  /api2/json/usRaceEthnicityFullBatch:
    post:
      operationId: usRaceEthnicityFullBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchPersonalNameGeoIn'
        description: A list of personal names
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchPersonalNameUSRaceEthnicityOut'
          description: "A list of US resident's likely race/ethnicity. W_NL (white,\
            \ non latino), HL (hispano latino),  A (asian, non latino), B_NL (black,\
            \ non latino), AI_AN (American Indian or Alaskan Native*) and PI (Pacific\
            \ Islander*). *optionally"
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
        "400":
          description: Bad request (ex. too many names)
      security:
      - api_key: []
      summary: "[USES 10 UNITS PER NAME] Infer up-to 100 US resident's likely race/ethnicity\
        \ according to US Census taxonomy. Output is W_NL (white, non latino), HL\
        \ (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally\
        \ add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for\
        \ two additional classes, AI_AN (American Indian or Alaskan Native) and PI\
        \ (Pacific Islander)."
      tags:
      - personal
      x-content-type: application/json
      x-accepts: application/json
  /api2/json/diaspora/{countryIso2}/{firstName}/{lastName}:
    get:
      operationId: diaspora
      parameters:
      - explode: false
        in: path
        name: countryIso2
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: firstName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: lastName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirstLastNameDiasporaedOut'
          description: A diaspora / ethnicity for given name and geography.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
      security:
      - api_key: []
      summary: "[USES 20 UNITS PER NAME] Infer the likely ethnicity/diaspora of a\
        \ personal name, given a country of residence ISO2 code (ex. US, CA, AU, NZ\
        \ etc.)"
      tags:
      - personal
      x-accepts: application/json
  /api2/json/diasporaBatch:
    post:
      operationId: diasporaBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchFirstLastNameGeoIn'
        description: A list of personal names
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchFirstLastNameDiasporaedOut'
          description: A list of diaspora / ethnicity given a name and residency.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
        "400":
          description: Bad request (ex. too many names)
      security:
      - api_key: []
      summary: "[USES 20 UNITS PER NAME] Infer the likely ethnicity/diaspora of up\
        \ to 100 personal names, given a country of residence ISO2 code (ex. US, CA,\
        \ AU, NZ etc.)"
      tags:
      - personal
      x-content-type: application/json
      x-accepts: application/json
  /api2/json/diasporaFull/{countryIso2}/{personalNameFull}:
    get:
      operationId: diasporaFull
      parameters:
      - explode: false
        in: path
        name: countryIso2
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: personalNameFull
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalNameDiasporaedOut'
          description: A diaspora / ethnicity for given name and geography.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
      security:
      - api_key: []
      summary: "[USES 20 UNITS PER NAME] Infer the likely ethnicity/diaspora of a\
        \ personal name, given a country of residence ISO2 code (ex. US, CA, AU, NZ\
        \ etc.)"
      tags:
      - personal
      x-accepts: application/json
  /api2/json/diasporaFullBatch:
    post:
      operationId: diasporaFullBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchPersonalNameGeoIn'
        description: A list of personal names
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchPersonalNameDiasporaedOut'
          description: A list of diaspora / ethnicity given a name and residency.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
        "400":
          description: Bad request (ex. too many names)
      security:
      - api_key: []
      summary: "[USES 20 UNITS PER NAME] Infer the likely ethnicity/diaspora of up\
        \ to 100 personal names, given a country of residence ISO2 code (ex. US, CA,\
        \ AU, NZ etc.)"
      tags:
      - personal
      x-content-type: application/json
      x-accepts: application/json
  /api2/json/communityEngage/{countryIso2}/{firstName}/{lastName}:
    get:
      operationId: communityEngage
      parameters:
      - explode: false
        in: path
        name: countryIso2
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: firstName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: lastName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommunityEngageOut'
          description: A community engagement candidate.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
      security:
      - api_key: []
      summary: "[USES 20 UNITS PER NAME] Infer the likely ethnicity/diaspora, country,\
        \ gender of a personal name, given a country of residence ISO2 code (ex. US,\
        \ CA, AU, NZ etc.) for community engagement (require special module/pricing)"
      tags:
      - personal
      x-accepts: application/json
  /api2/json/communityEngageBatch:
    post:
      operationId: communityEngageBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchFirstLastNameGeoIn'
        description: A list of personal names
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchCommunityEngageOut'
          description: A list of diaspora / ethnicity given a name and residency.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
        "400":
          description: Bad request (ex. too many names)
      security:
      - api_key: []
      summary: "Infer the likely ethnicity/diaspora, country, gender of up to 100\
        \ personal names, given a country of residence ISO2 code (ex. US, CA, AU,\
        \ NZ etc.) for community engagement (require special module/pricing)"
      tags:
      - personal
      x-content-type: application/json
      x-accepts: application/json
  /api2/json/communityEngageFull/{countryIso2}/{personalNameFull}:
    get:
      operationId: communityEngageFull
      parameters:
      - explode: false
        in: path
        name: countryIso2
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: personalNameFull
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommunityEngageOut'
          description: A community engagement candidate.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
      security:
      - api_key: []
      summary: "[USES 20 UNITS PER NAME] Infer the likely ethnicity/diaspora, country,\
        \ gender of a personal name, given a country of residence ISO2 code (ex. US,\
        \ CA, AU, NZ etc.) for community engagement (require special module/pricing)"
      tags:
      - personal
      x-accepts: application/json
  /api2/json/communityEngageFullBatch:
    post:
      operationId: communityEngageFullBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchPersonalNameGeoIn'
        description: A list of personal names
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchCommunityEngageFullOut'
          description: A list cummunity engagement candidates.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
        "400":
          description: Bad request (ex. too many names)
      security:
      - api_key: []
      summary: "Infer the likely ethnicity/diaspora, country, gender of up to 100\
        \ personal names, given a country of residence ISO2 code (ex. US, CA, AU,\
        \ NZ etc.) for community engagement (require special module/pricing)"
      tags:
      - personal
      x-content-type: application/json
      x-accepts: application/json
  /api2/json/parseName/{nameFull}/{countryIso2}:
    get:
      operationId: parseNameGeo
      parameters:
      - explode: false
        in: path
        name: nameFull
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: countryIso2
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalNameParsedOut'
          description: A origined name.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
      security:
      - api_key: []
      summary: "Infer the likely first/last name structure of a name, ex. John Smith\
        \ or SMITH, John or SMITH; John. For better accuracy, provide a geographic\
        \ context."
      tags:
      - personal
      x-accepts: application/json
  /api2/json/parseNameBatch:
    post:
      operationId: parseNameBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchPersonalNameIn'
        description: A list of personal names
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchPersonalNameParsedOut'
          description: A list of parsed names.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
        "400":
          description: Bad request (ex. too many names)
      security:
      - api_key: []
      summary: "Infer the likely first/last name structure of a name, ex. John Smith\
        \ or SMITH, John or SMITH; John."
      tags:
      - personal
      x-content-type: application/json
      x-accepts: application/json
  /api2/json/parseNameGeoBatch:
    post:
      operationId: parseNameGeoBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchPersonalNameGeoIn'
        description: A list of personal names
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchPersonalNameParsedOut'
          description: A list of parsed names.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
        "400":
          description: Bad request (ex. too many names)
      security:
      - api_key: []
      summary: "Infer the likely first/last name structure of a name, ex. John Smith\
        \ or SMITH, John or SMITH; John. Giving a local context improves precision. "
      tags:
      - personal
      x-content-type: application/json
      x-accepts: application/json
  /api2/json/parseChineseName/{chineseName}:
    get:
      operationId: parseChineseName
      parameters:
      - explode: false
        in: path
        name: chineseName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalNameParsedOut'
          description: A origined name.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
      security:
      - api_key: []
      summary: "Infer the likely first/last name structure of a name, ex. 王晓明 -> 王\
        (surname) 晓明(given name)"
      tags:
      - chinese
      x-accepts: application/json
  /api2/json/parseChineseNameBatch:
    post:
      operationId: parseChineseNameBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchPersonalNameIn'
        description: A list of personal names
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchPersonalNameParsedOut'
          description: A list of parsed names.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
        "400":
          description: Bad request (ex. too many names)
      security:
      - api_key: []
      summary: "Infer the likely first/last name structure of a name, ex. 王晓明 -> 王\
        (surname) 晓明(given name)."
      tags:
      - chinese
      x-content-type: application/json
      x-accepts: application/json
  /api2/json/pinyinChineseName/{chineseName}:
    get:
      operationId: pinyinChineseName
      parameters:
      - explode: false
        in: path
        name: chineseName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalNameParsedOut'
          description: A pinyin name.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
      security:
      - api_key: []
      summary: "Romanize the Chinese name to Pinyin, ex. 王晓明 -> Wang (surname) Xiaoming\
        \ (given name)"
      tags:
      - chinese
      x-accepts: application/json
  /api2/json/pinyinChineseNameBatch:
    post:
      operationId: pinyinChineseNameBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchPersonalNameIn'
        description: A list of Chinese names
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchPersonalNameParsedOut'
          description: A list of Pinyin names.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
        "400":
          description: Bad request (ex. too many names)
      security:
      - api_key: []
      summary: "Romanize a list of Chinese name to Pinyin, ex. 王晓明 -> Wang (surname)\
        \ Xiaoming (given name)."
      tags:
      - chinese
      x-content-type: application/json
      x-accepts: application/json
  /api2/json/chineseNameMatch/{chineseSurnameLatin}/{chineseGivenNameLatin}/{chineseName}:
    get:
      operationId: chineseNameMatch
      parameters:
      - explode: false
        in: path
        name: chineseSurnameLatin
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: chineseGivenNameLatin
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: chineseName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NameMatchedOut'
          description: A romanized name.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
      security:
      - api_key: []
      summary: Return a score for matching Chinese name ex. 王晓明 with a romanized name
        ex. Wang Xiaoming
      tags:
      - chinese
      x-accepts: application/json
  /api2/json/chineseNameMatchBatch:
    post:
      operationId: chineseNameMatchBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchMatchPersonalFirstLastNameIn'
        description: "A list of personal Chinese names in LATIN, firstName = chineseGivenName;\
          \ lastName=chineseSurname"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchNameMatchedOut'
          description: A list of genderized names.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
        "400":
          description: Bad request (ex. too many names)
      security:
      - api_key: []
      summary: "Identify Chinese name candidates, based on the romanized name (firstName\
        \ = chineseGivenName; lastName=chineseSurname), ex. Wang Xiaoming"
      tags:
      - chinese
      x-content-type: application/json
      x-accepts: application/json
  /api2/json/genderChineseNamePinyin/{chineseSurnameLatin}/{chineseGivenNameLatin}:
    get:
      operationId: genderChineseNamePinyin
      parameters:
      - explode: false
        in: path
        name: chineseSurnameLatin
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: chineseGivenNameLatin
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirstLastNameGenderedOut'
          description: A genderized name.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
      security:
      - api_key: []
      summary: Infer the likely gender of a Chinese name in LATIN (Pinyin).
      tags:
      - chinese
      x-accepts: application/json
  /api2/json/genderChineseNamePinyinBatch:
    post:
      operationId: genderChineseNamePinyinBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchFirstLastNameIn'
        description: "A list of names, with country code."
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchFirstLastNameGenderedOut'
          description: A list of genderized names.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
        "400":
          description: Bad request (ex. too many names)
      security:
      - api_key: []
      summary: Infer the likely gender of up to 100 Chinese names in LATIN (Pinyin).
      tags:
      - chinese
      x-content-type: application/json
      x-accepts: application/json
  /api2/json/genderChineseName/{chineseName}:
    get:
      operationId: genderChineseName
      parameters:
      - explode: false
        in: path
        name: chineseName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalNameGenderedOut'
          description: A genderized name.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
      security:
      - api_key: []
      summary: Infer the likely gender of a Chinese full name ex. 王晓明
      tags:
      - chinese
      x-accepts: application/json
  /api2/json/genderChineseNameBatch:
    post:
      operationId: genderChineseNameBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchPersonalNameIn'
        description: "A list of personal names, with a country ISO2 code"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchPersonalNameGenderedOut'
          description: A list of genderized names.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
        "400":
          description: Bad request (ex. too many names)
      security:
      - api_key: []
      summary: Infer the likely gender of up to 100 full names ex. 王晓明
      tags:
      - chinese
      x-content-type: application/json
      x-accepts: application/json
  /api2/json/chineseNameCandidates/{chineseSurnameLatin}/{chineseGivenNameLatin}:
    get:
      operationId: chineseNameCandidates
      parameters:
      - explode: false
        in: path
        name: chineseSurnameLatin
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: chineseGivenNameLatin
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NameMatchCandidatesOut'
          description: A romanized name.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
      security:
      - api_key: []
      summary: "Identify Chinese name candidates, based on the romanized name ex.\
        \ Wang Xiaoming"
      tags:
      - chinese
      x-accepts: application/json
  /api2/json/chineseNameCandidatesBatch:
    post:
      operationId: chineseNameCandidatesBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchFirstLastNameIn'
        description: "A list of personal Chinese names in LATIN, firstName = chineseGivenName;\
          \ lastName=chineseSurname"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchNameMatchCandidatesOut'
          description: A list of genderized names.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
        "400":
          description: Bad request (ex. too many names)
      security:
      - api_key: []
      summary: "Identify Chinese name candidates, based on the romanized name (firstName\
        \ = chineseGivenName; lastName=chineseSurname), ex. Wang Xiaoming"
      tags:
      - chinese
      x-content-type: application/json
      x-accepts: application/json
  /api2/json/chineseNameGenderCandidates/{chineseSurnameLatin}/{chineseGivenNameLatin}/{knownGender}:
    get:
      operationId: chineseNameGenderCandidates
      parameters:
      - explode: false
        in: path
        name: chineseSurnameLatin
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: chineseGivenNameLatin
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: knownGender
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NameMatchCandidatesOut'
          description: A romanized name.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
      security:
      - api_key: []
      summary: "Identify Chinese name candidates, based on the romanized name ex.\
        \ Wang Xiaoming - having a known gender ('male' or 'female')"
      tags:
      - chinese
      x-accepts: application/json
  /api2/json/chineseNameCandidatesGenderBatch:
    post:
      operationId: chineseNameCandidatesGenderBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchFirstLastNameGenderIn'
        description: "A list of personal Chinese names in LATIN, firstName = chineseGivenName;\
          \ lastName=chineseSurname"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchNameMatchCandidatesOut'
          description: A list of genderized names.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
        "400":
          description: Bad request (ex. too many names)
      security:
      - api_key: []
      summary: "Identify Chinese name candidates, based on the romanized name (firstName\
        \ = chineseGivenName; lastName=chineseSurname) ex. Wang Xiaoming."
      tags:
      - chinese
      x-content-type: application/json
      x-accepts: application/json
  /api2/json/parseJapaneseName/{japaneseName}:
    get:
      operationId: parseJapaneseName
      parameters:
      - explode: false
        in: path
        name: japaneseName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalNameParsedOut'
          description: A origined name.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
      security:
      - api_key: []
      summary: "Infer the likely first/last name structure of a name, ex. 山本 早苗 or\
        \ Yamamoto Sanae"
      tags:
      - japanese
      x-accepts: application/json
  /api2/json/parseJapaneseNameBatch:
    post:
      operationId: parseJapaneseNameBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchPersonalNameIn'
        description: A list of personal names
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchPersonalNameParsedOut'
          description: A list of parsed names.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
        "400":
          description: Bad request (ex. too many names)
      security:
      - api_key: []
      summary: "Infer the likely first/last name structure of a name, ex. 山本 早苗 or\
        \ Yamamoto Sanae "
      tags:
      - japanese
      x-content-type: application/json
      x-accepts: application/json
  /api2/json/japaneseNameKanjiCandidates/{japaneseSurnameLatin}/{japaneseGivenNameLatin}/{knownGender}:
    get:
      operationId: japaneseNameKanjiCandidates
      parameters:
      - explode: false
        in: path
        name: japaneseSurnameLatin
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: japaneseGivenNameLatin
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: knownGender
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NameMatchCandidatesOut'
          description: A romanized name.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
      security:
      - api_key: []
      summary: "Identify japanese name candidates in KANJI, based on the romanized\
        \ name ex. Yamamoto Sanae - and a known gender."
      tags:
      - japanese
      x-accepts: application/json
  /api2/json/japaneseNameKanjiCandidates/{japaneseSurnameLatin}/{japaneseGivenNameLatin}:
    get:
      operationId: japaneseNameKanjiCandidates_1
      parameters:
      - explode: false
        in: path
        name: japaneseSurnameLatin
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: japaneseGivenNameLatin
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NameMatchCandidatesOut'
          description: A romanized name.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
      security:
      - api_key: []
      summary: "Identify japanese name candidates in KANJI, based on the romanized\
        \ name ex. Yamamoto Sanae"
      tags:
      - japanese
      x-accepts: application/json
  /api2/json/japaneseNameLatinCandidates/{japaneseSurnameKanji}/{japaneseGivenNameKanji}:
    get:
      operationId: japaneseNameLatinCandidates
      parameters:
      - explode: false
        in: path
        name: japaneseSurnameKanji
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: japaneseGivenNameKanji
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NameMatchCandidatesOut'
          description: A romanized name.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
      security:
      - api_key: []
      summary: "Romanize japanese name, based on the name in Kanji."
      tags:
      - japanese
      x-accepts: application/json
  /api2/json/japaneseNameKanjiCandidatesBatch:
    post:
      operationId: japaneseNameKanjiCandidatesBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchFirstLastNameIn'
        description: "A list of personal japanese names in LATIN, firstName = japaneseGivenName;\
          \ lastName=japaneseSurname"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchNameMatchCandidatesOut'
          description: A list of genderized names.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
        "400":
          description: Bad request (ex. too many names)
      security:
      - api_key: []
      summary: "Identify japanese name candidates in KANJI, based on the romanized\
        \ name (firstName = japaneseGivenName; lastName=japaneseSurname), ex. Yamamoto\
        \ Sanae"
      tags:
      - japanese
      x-content-type: application/json
      x-accepts: application/json
  /api2/json/japaneseNameGenderKanjiCandidatesBatch:
    post:
      operationId: japaneseNameGenderKanjiCandidatesBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchFirstLastNameGenderIn'
        description: "A list of personal japanese names in LATIN, firstName = japaneseGivenName;\
          \ lastName=japaneseSurname and known gender"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchNameMatchCandidatesOut'
          description: A list of genderized names.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
        "400":
          description: Bad request (ex. too many names)
      security:
      - api_key: []
      summary: "Identify japanese name candidates in KANJI, based on the romanized\
        \ name (firstName = japaneseGivenName; lastName=japaneseSurname) with KNOWN\
        \ gender, ex. Yamamoto Sanae"
      tags:
      - japanese
      x-content-type: application/json
      x-accepts: application/json
  /api2/json/japaneseNameLatinCandidatesBatch:
    post:
      operationId: japaneseNameLatinCandidatesBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchFirstLastNameIn'
        description: "A list of personal japanese names in KANJI, firstName = japaneseGivenName;\
          \ lastName=japaneseSurname"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchNameMatchCandidatesOut'
          description: A list of genderized names.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
        "400":
          description: Bad request (ex. too many names)
      security:
      - api_key: []
      summary: "Romanize japanese names, based on the name in KANJI"
      tags:
      - japanese
      x-content-type: application/json
      x-accepts: application/json
  /api2/json/japaneseNameMatch/{japaneseSurnameLatin}/{japaneseGivenNameLatin}/{japaneseName}:
    get:
      operationId: japaneseNameMatch
      parameters:
      - explode: false
        in: path
        name: japaneseSurnameLatin
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: japaneseGivenNameLatin
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: japaneseName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NameMatchedOut'
          description: A romanized name.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
      security:
      - api_key: []
      summary: Return a score for matching Japanese name in KANJI ex. 山本 早苗 with a
        romanized name ex. Yamamoto Sanae
      tags:
      - japanese
      x-accepts: application/json
  /api2/json/japaneseNameMatchFeedbackLoop/{japaneseSurnameLatin}/{japaneseGivenNameLatin}/{japaneseName}:
    get:
      operationId: japaneseNameMatchFeedbackLoop
      parameters:
      - explode: false
        in: path
        name: japaneseSurnameLatin
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: japaneseGivenNameLatin
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: japaneseName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedbackLoopOut'
          description: A romanized name.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
      security:
      - api_key: []
      summary: "[CREDITS 1 UNIT] Feedback loop to better perform matching Japanese\
        \ name in KANJI ex. 山本 早苗 with a romanized name ex. Yamamoto Sanae"
      tags:
      - japanese
      x-accepts: application/json
  /api2/json/japaneseNameMatchBatch:
    post:
      operationId: japaneseNameMatchBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchMatchPersonalFirstLastNameIn'
        description: "A list of personal Japanese names in LATIN, firstName = japaneseGivenName;\
          \ lastName=japaneseSurname"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchNameMatchedOut'
          description: A list of matched names.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
        "400":
          description: Bad request (ex. too many names)
      security:
      - api_key: []
      summary: Return a score for matching a list of Japanese names in KANJI ex. 山本
        早苗 with romanized names ex. Yamamoto Sanae
      tags:
      - japanese
      x-content-type: application/json
      x-accepts: application/json
  /api2/json/genderJapaneseName/{japaneseSurname}/{japaneseGivenName}:
    get:
      operationId: genderJapaneseNamePinyin
      parameters:
      - explode: false
        in: path
        name: japaneseSurname
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: japaneseGivenName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirstLastNameGenderedOut'
          description: A genderized name.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
      security:
      - api_key: []
      summary: Infer the likely gender of a Japanese name in LATIN (Pinyin).
      tags:
      - japanese
      x-accepts: application/json
  /api2/json/genderJapaneseNameBatch:
    post:
      operationId: genderJapaneseNamePinyinBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchFirstLastNameIn'
        description: "A list of names, with country code."
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchFirstLastNameGenderedOut'
          description: A list of genderized names.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
        "400":
          description: Bad request (ex. too many names)
      security:
      - api_key: []
      summary: Infer the likely gender of up to 100 Japanese names in LATIN (Pinyin).
      tags:
      - japanese
      x-content-type: application/json
      x-accepts: application/json
  /api2/json/genderJapaneseNameFull/{japaneseName}:
    get:
      operationId: genderJapaneseNameFull
      parameters:
      - explode: false
        in: path
        name: japaneseName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalNameGenderedOut'
          description: A genderized name.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
      security:
      - api_key: []
      summary: Infer the likely gender of a Japanese full name ex. 王晓明
      tags:
      - japanese
      x-accepts: application/json
  /api2/json/genderJapaneseNameFullBatch:
    post:
      operationId: genderJapaneseNameFullBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchPersonalNameIn'
        description: A list of personal names
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchPersonalNameGenderedOut'
          description: A list of genderized names.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
        "400":
          description: Bad request (ex. too many names)
      security:
      - api_key: []
      summary: Infer the likely gender of up to 100 full names
      tags:
      - japanese
      x-content-type: application/json
      x-accepts: application/json
  /api2/json/phoneCode/{firstName}/{lastName}/{phoneNumber}:
    get:
      operationId: phoneCode
      parameters:
      - explode: false
        in: path
        name: firstName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: lastName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: phoneNumber
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirstLastNamePhoneCodedOut'
          description: A name with country and phone code.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
      security:
      - api_key: []
      summary: "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix,\
        \ given a personal name and formatted / unformatted phone number."
      tags:
      - social
      x-accepts: application/json
  /api2/json/phoneCodeGeo/{firstName}/{lastName}/{phoneNumber}/{countryIso2}:
    get:
      operationId: phoneCodeGeo
      parameters:
      - explode: false
        in: path
        name: firstName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: lastName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: phoneNumber
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: countryIso2
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirstLastNamePhoneCodedOut'
          description: A name with country and phone code.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
      security:
      - api_key: []
      summary: "[USES 11 UNITS PER NAME] Infer the likely phone prefix, given a personal\
        \ name and formatted / unformatted phone number, with a local context (ISO2\
        \ country of residence)."
      tags:
      - social
      x-accepts: application/json
  /api2/json/phoneCodeGeoFeedbackLoop/{firstName}/{lastName}/{phoneNumber}/{phoneNumberE164}/{countryIso2}:
    get:
      operationId: phoneCodeGeoFeedbackLoop
      parameters:
      - explode: false
        in: path
        name: firstName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: lastName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: phoneNumber
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: phoneNumberE164
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: countryIso2
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirstLastNamePhoneCodedOut'
          description: A name with country and phone code.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
      security:
      - api_key: []
      summary: "[CREDITS 1 UNIT] Feedback loop to better infer the likely phone prefix,\
        \ given a personal name and formatted / unformatted phone number, with a local\
        \ context (ISO2 country of residence)."
      tags:
      - social
      x-accepts: application/json
  /api2/json/phoneCodeBatch:
    post:
      operationId: phoneCodeBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchFirstLastNamePhoneNumberIn'
        description: A list of personal names
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchFirstLastNamePhoneCodedOut'
          description: A list of genderized names.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
        "400":
          description: Bad request (ex. too many names)
      security:
      - api_key: []
      summary: "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix,\
        \ of up to 100 personal names, detecting automatically the local context given\
        \ a name and formatted / unformatted phone number."
      tags:
      - social
      x-content-type: application/json
      x-accepts: application/json
  /api2/json/phoneCodeGeoBatch:
    post:
      operationId: phoneCodeGeoBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchFirstLastNamePhoneNumberGeoIn'
        description: A list of personal names
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchFirstLastNamePhoneCodedOut'
          description: A list of genderized names.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
        "400":
          description: Bad request (ex. too many names)
      security:
      - api_key: []
      summary: "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix,\
        \ of up to 100 personal names, with a local context (ISO2 country of residence)."
      tags:
      - social
      x-content-type: application/json
      x-accepts: application/json
  /api2/json/parseName/{nameFull}:
    get:
      operationId: parseName
      parameters:
      - explode: false
        in: path
        name: nameFull
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalNameParsedOut'
          description: A origined name.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: "Email not Verified, or API Limit Reached, or API Key Disabled"
      security:
      - api_key: []
      summary: "Infer the likely first/last name structure of a name, ex. John Smith\
        \ or SMITH, John or SMITH; John. "
      tags:
      - personal
      x-accepts: application/json
components:
  schemas:
    BatchFirstLastNameGenderedOut:
      description: Represents the output of inferring the LIKELY gender from a list
        of personal names.
      example:
        personalNames:
        - firstName: firstName
          lastName: lastName
          genderScale: -0.8398343619077977
          score: 60.27456183070403
          probabilityCalibrated: -0.706837403899411
          likelyGender: male
          id: id
          explanation: explanation
          script: script
        - firstName: firstName
          lastName: lastName
          genderScale: -0.8398343619077977
          score: 60.27456183070403
          probabilityCalibrated: -0.706837403899411
          likelyGender: male
          id: id
          explanation: explanation
          script: script
      properties:
        personalNames:
          description: Classified genderized names
          items:
            $ref: '#/components/schemas/FirstLastNameGenderedOut'
          type: array
      type: object
      xml:
        name: BatchFirstLastNameGenderedOut
    FirstLastNameGeoSubclassificationOut:
      description: Represents the geographic name origin at a country subclassification
        level (usually regional or state level).
      example:
        firstName: firstName
        lastName: lastName
        score: 8.008281904610115
        probabilityCalibrated: 0.20549123661408064
        subclassificationTop:
        - subclassificationTop
        - subclassificationTop
        probabilityAltCalibrated: -0.706837403899411
        id: id
        countryIso2: countryIso2
        explanation: explanation
        script: script
        subClassification: subClassification
        subClassificationAlt: subClassificationAlt
      properties:
        script:
          type: string
        id:
          type: string
        explanation:
          type: string
        firstName:
          description: The first name (also known as given name)
          type: string
        lastName:
          description: "The last name (also known as family name, or surname)"
          type: string
        countryIso2:
          description: The input country ISO2 code
          type: string
          xml:
            attribute: true
        subClassification:
          description: Most likely subclassification ISO_3166-2 code
          type: string
        subClassificationAlt:
          description: "Second best alternative : subclassification ISO_3166-2 code"
          type: string
        subclassificationTop:
          description: List subclassification ISO_3166-2 codes (top 10)
          items:
            description: List subclassification ISO_3166-2 codes (top 10)
            type: string
          type: array
        score:
          description: "Compatibility to NamSor_v1 Origin score value. Higher score\
            \ is better, but score is not normalized. Use calibratedProbability if\
            \ available. "
          format: double
          maximum: 100
          minimum: 0
          type: number
        probabilityCalibrated:
          description: 'The calibrated probability for subclassification to have been
            guessed correctly. -1 = still calibrating. '
          format: double
          maximum: 1
          minimum: -1
          type: number
        probabilityAltCalibrated:
          description: 'The calibrated probability for subclassification OR subclassificationAlt
            to have been guessed correctly. -1 = still calibrating. '
          format: double
          maximum: 1
          minimum: -1
          type: number
      type: object
      xml:
        name: FirstLastNameGeoSubclassificationOut
    BatchFirstLastNameCasteOut:
      description: Represents the output of inferring the LIKELY origin from a list
        of personal names.
      example:
        personalNames:
        - casteTop:
          - casteTop
          - casteTop
          firstName: firstName
          lastName: lastName
          score: 8.008281904610115
          probabilityCalibrated: 0.20549123661408064
          caste: caste
          probabilityAltCalibrated: -0.706837403899411
          id: id
          explanation: explanation
          casteAlt: casteAlt
          script: script
        - casteTop:
          - casteTop
          - casteTop
          firstName: firstName
          lastName: lastName
          score: 8.008281904610115
          probabilityCalibrated: 0.20549123661408064
          caste: caste
          probabilityAltCalibrated: -0.706837403899411
          id: id
          explanation: explanation
          casteAlt: casteAlt
          script: script
      properties:
        personalNames:
          description: Classified origined names
          items:
            $ref: '#/components/schemas/FirstLastNameCasteOut'
          type: array
      type: object
      xml:
        name: BatchFirstLastNameCasteOut
    FirstLastNameCastegroupOut:
      description: Represents the output of inferring the LIKELY caste group from
        a personal Hindu/Indian name.
      example:
        castegroup: castegroup
        castegroupTop:
        - castegroupTop
        - castegroupTop
        firstName: firstName
        lastName: lastName
        score: 8.008281904610115
        probabilityCalibrated: 0.20549123661408064
        probabilityAltCalibrated: -0.706837403899411
        id: id
        explanation: explanation
        castegroupAlt: castegroupAlt
        script: script
      properties:
        script:
          type: string
        id:
          type: string
        explanation:
          type: string
        firstName:
          description: The first name (also known as given name)
          type: string
        lastName:
          description: "The last name (also known as family name, or surname)"
          type: string
        castegroup:
          description: Most likely caste group
          type: string
        castegroupAlt:
          description: "Second best alternative : caste group "
          type: string
        castegroupTop:
          description: List caste group (top 10)
          items:
            description: List caste group (top 10)
            type: string
          type: array
        score:
          description: "Compatibility to NamSor_v1 Origin score value. Higher score\
            \ is better, but score is not normalized. Use calibratedProbability if\
            \ available. "
          format: double
          maximum: 100
          minimum: 0
          type: number
        probabilityCalibrated:
          description: 'The calibrated probability for caste to have been guessed
            correctly. -1 = still calibrating. '
          format: double
          maximum: 1
          minimum: -1
          type: number
        probabilityAltCalibrated:
          description: 'The calibrated probability for caste OR casteAlt to have been
            guessed correctly. -1 = still calibrating. '
          format: double
          maximum: 1
          minimum: -1
          type: number
      type: object
      xml:
        name: FirstLastNameCastegroupOut
    FirstLastNamePhoneNumberIn:
      example:
        firstName: firstName
        lastName: lastName
        phoneNumber: phoneNumber
        id: id
      properties:
        id:
          type: string
          xml:
            attribute: true
        firstName:
          type: string
          xml:
            attribute: true
        lastName:
          type: string
          xml:
            attribute: true
        phoneNumber:
          type: string
      type: object
      xml:
        name: FirstLastNamePhoneNumberIn
    FirstLastNameSubdivisionIn:
      example:
        firstName: firstName
        lastName: lastName
        subdivisionIso: subdivisionIso
        id: id
      properties:
        id:
          type: string
          xml:
            attribute: true
        firstName:
          type: string
          xml:
            attribute: true
        lastName:
          type: string
          xml:
            attribute: true
        subdivisionIso:
          type: string
          xml:
            attribute: true
      type: object
      xml:
        name: FirstLastNameGeoSubdivisionIn
    SoftwareVersionOut:
      description: The software version.
      example:
        softwareNameAndVersion: softwareNameAndVersion
        softwareVersion:
        - 0
        - 0
      properties:
        softwareNameAndVersion:
          description: The software version
          type: string
        softwareVersion:
          description: The software version major minor build
          items:
            description: The software version major minor build
            format: int32
            type: integer
          type: array
      type: object
      xml:
        name: SoftwareVersionOut
    APIClassifierOut:
      description: The list of classifiers and versions.
      example:
        probabilityCalibrated: true
        shuttingDown: true
        learning: true
        classifierName: classifierName
        serving: true
      properties:
        classifierName:
          description: The classifier name
          type: string
        serving:
          description: "True if the classifier is serving requests (has reached minimal\
            \ learning, is not shutting down)"
          type: boolean
        learning:
          description: True if the classifier is learning
          type: boolean
        shuttingDown:
          description: True if the classifier is shutting down
          type: boolean
        probabilityCalibrated:
          description: "True if the classifier has finished the initial learning and\
            \ calibrated probabilities (meanwhile, during initial learning, probabilities\
            \ will be equal to -1)"
          type: boolean
      type: object
      xml:
        name: APIClassifierOut
    CommunityEngageOut:
      description: "Represent multiple classifications for community engagement (gender,\
        \ country, origin, diaspora)"
      example:
        prime: true
        country:
          country: country
          topRegion: topRegion
          subRegion: subRegion
          probabilityCalibrated: 0.20549123661408064
          countryAlt: countryAlt
          explanation: explanation
          script: script
          religionStats:
          - pct: 5.962133916683182
            religion: religion
          - pct: 5.962133916683182
            religion: religion
          score: 8.008281904610115
          countriesTop:
          - countriesTop
          - countriesTop
          religionStatsAlt:
          - pct: 5.962133916683182
            religion: religion
          - pct: 5.962133916683182
            religion: religion
          name: name
          probabilityAltCalibrated: -0.706837403899411
          id: id
          region: region
        gender:
          genderScale: -0.8398343619077977
          score: 60.27456183070403
          probabilityCalibrated: -0.706837403899411
          name: name
          likelyGender: male
          id: id
          explanation: explanation
          script: script
        scoped: true
        PersonalNameUSRaceEthnicityOut:
          raceEthnicityAlt: W_NL
          score: 8.008281904610115
          raceEthnicitiesTop:
          - raceEthnicitiesTop
          - raceEthnicitiesTop
          probabilityCalibrated: 0.20549123661408064
          name: name
          probabilityAltCalibrated: -0.706837403899411
          id: id
          explanation: explanation
          script: script
          raceEthnicity: W_NL
        PersonalNameDiasporaedOut:
          probabilityCalibrated: 0.20549123661408064
          ethnicity: Chinese
          lifted: true
          ethnicityAlt: Japanese
          explanation: explanation
          script: script
          religionStats:
          - pct: 5.962133916683182
            religion: religion
          - pct: 5.962133916683182
            religion: religion
          score: 8.008281904610115
          religionStatsAlt:
          - pct: 5.962133916683182
            religion: religion
          - pct: 5.962133916683182
            religion: religion
          name: name
          probabilityAltCalibrated: -0.706837403899411
          id: id
          countryIso2: countryIso2
          ethnicitiesTop:
          - ethnicitiesTop
          - ethnicitiesTop
        id: id
        PersonalNameOriginedOut:
          probabilityCalibrated: 0.20549123661408064
          religionStatsSynthetic:
          - pct: 5.962133916683182
            religion: religion
          - pct: 5.962133916683182
            religion: religion
          explanation: explanation
          script: script
          regionOrigin: regionOrigin
          topRegionOrigin: topRegionOrigin
          religionStats:
          - pct: 5.962133916683182
            religion: religion
          - pct: 5.962133916683182
            religion: religion
          score: 8.008281904610115
          subRegionOrigin: subRegionOrigin
          religionStatsAlt:
          - pct: 5.962133916683182
            religion: religion
          - pct: 5.962133916683182
            religion: religion
          name: name
          probabilityAltCalibrated: -0.706837403899411
          countriesOriginTop:
          - countriesOriginTop
          - countriesOriginTop
          id: id
          countryOrigin: countryOrigin
          countryOriginAlt: countryOriginAlt
        script: script
      properties:
        id:
          type: string
          xml:
            attribute: true
        PersonalNameDiasporaedOut:
          $ref: '#/components/schemas/PersonalNameDiasporaedOut'
        PersonalNameOriginedOut:
          $ref: '#/components/schemas/PersonalNameOriginedOut'
        country:
          $ref: '#/components/schemas/PersonalNameGeoOut'
        gender:
          $ref: '#/components/schemas/PersonalNameGenderedOut'
        PersonalNameUSRaceEthnicityOut:
          $ref: '#/components/schemas/PersonalNameUSRaceEthnicityOut'
        prime:
          type: boolean
        scoped:
          type: boolean
        script:
          type: string
      type: object
      xml:
        name: CommunityEngageOut
    FirstLastNameGenderIn:
      example:
        firstName: firstName
        lastName: lastName
        gender: gender
        id: id
      properties:
        id:
          type: string
          xml:
            attribute: true
        firstName:
          type: string
          xml:
            attribute: true
        lastName:
          type: string
          xml:
            attribute: true
        gender:
          description: The known gender of the name
          type: string
          xml:
            attribute: true
      type: object
      xml:
        name: FirstLastName
    FirstLastNameGenderedOut:
      description: Represents the output of inferring the LIKELY gender from a personal
        name.
      example:
        firstName: firstName
        lastName: lastName
        genderScale: -0.8398343619077977
        score: 60.27456183070403
        probabilityCalibrated: -0.706837403899411
        likelyGender: male
        id: id
        explanation: explanation
        script: script
      properties:
        script:
          type: string
        id:
          type: string
        explanation:
          type: string
        firstName:
          description: The first name (also known as given name)
          type: string
        lastName:
          description: "The last name (also known as family name, or surname)"
          type: string
        likelyGender:
          description: Most likely gender
          enum:
          - male
          - female
          - unknown
          type: string
        genderScale:
          description: "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value."
          format: double
          maximum: 1
          minimum: -1
          type: number
        score:
          description: "Compatibility to NamSor_v1 Gender score value. Higher score\
            \ is better, but score is not normalized. Use calibratedProbability if\
            \ available. "
          format: double
          maximum: 100
          minimum: 0
          type: number
        probabilityCalibrated:
          description: 'The calibrated probability for inferred gender to have been
            guessed correctly. -1 = still calibrating. '
          format: double
          maximum: 1
          minimum: -1
          type: number
      type: object
      xml:
        name: FirstLastNameGenderedOut
    APIKeyOut:
      example:
        striped: true
        apiKey: apiKey
        anonymized: true
        learnable: true
        ipAddress: ipAddress
        admin: true
        communityEngageOption:
          genderFilter:
          - genderFilter
          - genderFilter
          ethnicityFilter:
          - ethnicityFilter
          - ethnicityFilter
          countryOutFilter:
          - countryOutFilter
          - countryOutFilter
          usRaceEthnicityFilter:
          - usRaceEthnicityFilter
          - usRaceEthnicityFilter
        userId: userId
        explainable: true
        vetted: true
        partner: true
        corporate: true
        disabled: true
      properties:
        apiKey:
          description: The user API Key.
          type: string
          xml:
            name: api_key
        userId:
          description: The user identifier.
          type: string
        admin:
          description: The API Key has admin role.
          type: boolean
        vetted:
          description: The API Key is vetted (assumed truthful) for machine learning.
          type: boolean
        learnable:
          description: The API Key is learnable (without assuming truthfulness) for
            machine learning. Set learnable=false and anonymized=true for highest
            privacy (ie. to forget data as it's processed).
          type: boolean
        anonymized:
          description: The API Key is anonymized (using SHA-252 digest for logging).
            Set learnable=false and anonymized=true for highest privacy (ie. to forget
            data as it's processed).
          type: boolean
        partner:
          description: The API Key has partner role.
          type: boolean
        striped:
          description: The API Key is associated to a valid Stripe account.
          type: boolean
        corporate:
          description: The API Key has role corporate (ex SWIFT payments instead of
            Stripe payments).
          type: boolean
        disabled:
          description: The API Key is temporarily or permanently disabled.
          type: boolean
        explainable:
          description: The API Key supports the AI explainability option (may require
            a specific license).
          type: boolean
        ipAddress:
          type: string
        communityEngageOption:
          $ref: '#/components/schemas/CommunityEngageOptionOut'
      type: object
      xml:
        name: APIKeyOut
    BatchFirstLastNameDiasporaedOut:
      description: "Represents the output of inferring the LIKELY ethnicity from a\
        \ personal name, given an country of residence."
      example:
        personalNames:
        - lastName: lastName
          probabilityCalibrated: 0.12747533132666566
          ethnicity: Chinese
          lifted: true
          ethnicityAlt: Japanese
          explanation: explanation
          script: script
          religionStats:
          - pct: 5.962133916683182
            religion: religion
          - pct: 5.962133916683182
            religion: religion
          firstName: firstName
          score: 59.621339166831824
          religionStatsAlt:
          - pct: 5.962133916683182
            religion: religion
          - pct: 5.962133916683182
            religion: religion
          probabilityAltCalibrated: -0.539572822613047
          id: id
          countryIso2: countryIso2
          ethnicitiesTop:
          - ethnicitiesTop
          - ethnicitiesTop
        - lastName: lastName
          probabilityCalibrated: 0.12747533132666566
          ethnicity: Chinese
          lifted: true
          ethnicityAlt: Japanese
          explanation: explanation
          script: script
          religionStats:
          - pct: 5.962133916683182
            religion: religion
          - pct: 5.962133916683182
            religion: religion
          firstName: firstName
          score: 59.621339166831824
          religionStatsAlt:
          - pct: 5.962133916683182
            religion: religion
          - pct: 5.962133916683182
            religion: religion
          probabilityAltCalibrated: -0.539572822613047
          id: id
          countryIso2: countryIso2
          ethnicitiesTop:
          - ethnicitiesTop
          - ethnicitiesTop
      properties:
        personalNames:
          description: Classified diaspora names
          items:
            $ref: '#/components/schemas/FirstLastNameDiasporaedOut'
          type: array
      type: object
      xml:
        name: BatchFirstLastNameDiasporaedOut
    BatchPersonalNameGeoOut:
      example:
        personalNames:
        - country: country
          topRegion: topRegion
          subRegion: subRegion
          probabilityCalibrated: 0.20549123661408064
          countryAlt: countryAlt
          explanation: explanation
          script: script
          religionStats:
          - pct: 5.962133916683182
            religion: religion
          - pct: 5.962133916683182
            religion: religion
          score: 8.008281904610115
          countriesTop:
          - countriesTop
          - countriesTop
          religionStatsAlt:
          - pct: 5.962133916683182
            religion: religion
          - pct: 5.962133916683182
            religion: religion
          name: name
          probabilityAltCalibrated: -0.706837403899411
          id: id
          region: region
        - country: country
          topRegion: topRegion
          subRegion: subRegion
          probabilityCalibrated: 0.20549123661408064
          countryAlt: countryAlt
          explanation: explanation
          script: script
          religionStats:
          - pct: 5.962133916683182
            religion: religion
          - pct: 5.962133916683182
            religion: religion
          score: 8.008281904610115
          countriesTop:
          - countriesTop
          - countriesTop
          religionStatsAlt:
          - pct: 5.962133916683182
            religion: religion
          - pct: 5.962133916683182
            religion: religion
          name: name
          probabilityAltCalibrated: -0.706837403899411
          id: id
          region: region
      properties:
        personalNames:
          description: Classified geo names
          items:
            $ref: '#/components/schemas/PersonalNameGeoOut'
          type: array
      type: object
      xml:
        name: BatchPersonalNameGeoOut
    BatchFirstLastNameCastegroupOut:
      description: Represents the output of inferring the LIKELY origin from a list
        of personal names.
      example:
        personalNames:
        - castegroup: castegroup
          castegroupTop:
          - castegroupTop
          - castegroupTop
          firstName: firstName
          lastName: lastName
          score: 8.008281904610115
          probabilityCalibrated: 0.20549123661408064
          probabilityAltCalibrated: -0.706837403899411
          id: id
          explanation: explanation
          castegroupAlt: castegroupAlt
          script: script
        - castegroup: castegroup
          castegroupTop:
          - castegroupTop
          - castegroupTop
          firstName: firstName
          lastName: lastName
          score: 8.008281904610115
          probabilityCalibrated: 0.20549123661408064
          probabilityAltCalibrated: -0.706837403899411
          id: id
          explanation: explanation
          castegroupAlt: castegroupAlt
          script: script
      properties:
        personalNames:
          description: Classified origined names
          items:
            $ref: '#/components/schemas/FirstLastNameCastegroupOut'
          type: array
      type: object
      xml:
        name: BatchFirstLastNameCastegroupOut
    ProperNounCategorizedOut:
      description: Classified typed proper names
      example:
        score: 8.008281904610115
        commonTypeAlt: commonTypeAlt
        name: name
        id: id
        explanation: explanation
        script: script
        commonType: commonType
      properties:
        script:
          type: string
        id:
          type: string
        explanation:
          type: string
        name:
          description: The input name
          type: string
        commonType:
          description: The most likely common name type
          type: string
        commonTypeAlt:
          description: "Best alternative for : The most likely common name type"
          type: string
        score:
          description: "Higher score is better, but score is not normalized. Use calibratedProbability\
            \ if available. "
          format: double
          maximum: 100
          minimum: 0
          type: number
      type: object
      xml:
        name: ProperNounCategorizedOut
    PersonalNameGenderedOut:
      description: Classified genderized names
      example:
        genderScale: -0.8398343619077977
        score: 60.27456183070403
        probabilityCalibrated: -0.706837403899411
        name: name
        likelyGender: male
        id: id
        explanation: explanation
        script: script
      properties:
        script:
          type: string
        id:
          type: string
        explanation:
          type: string
        name:
          description: The input name.
          type: string
        likelyGender:
          description: Most likely gender
          enum:
          - male
          - female
          - unknown
          type: string
        genderScale:
          description: "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value."
          format: double
          maximum: 1
          minimum: -1
          type: number
        score:
          description: "Compatibility to NamSor_v1 Gender score value. Higher score\
            \ is better, but score is not normalized. Use calibratedProbability if\
            \ available. "
          format: double
          maximum: 100
          minimum: 0
          type: number
        probabilityCalibrated:
          description: 'The calibrated probability for inferred gender to have been
            guessed correctly. -1 = still calibrating. '
          format: double
          maximum: 1
          minimum: -1
          type: number
      type: object
      xml:
        name: PersonalNameGenderedOut
    FirstLastNameOriginedOut:
      description: Represents the output of inferring the LIKELY country of Origin
        from a personal name.
      example:
        lastName: lastName
        probabilityCalibrated: 0.20549123661408064
        explanation: explanation
        script: script
        regionOrigin: regionOrigin
        topRegionOrigin: topRegionOrigin
        religionStats:
        - pct: 5.962133916683182
          religion: religion
        - pct: 5.962133916683182
          religion: religion
        firstName: firstName
        score: 8.008281904610115
        subRegionOrigin: subRegionOrigin
        religionStatsAlt:
        - pct: 5.962133916683182
          religion: religion
        - pct: 5.962133916683182
          religion: religion
        probabilityAltCalibrated: -0.706837403899411
        countriesOriginTop:
        - countriesOriginTop
        - countriesOriginTop
        id: id
        countryOrigin: countryOrigin
        countryOriginAlt: countryOriginAlt
      properties:
        script:
          type: string
        id:
          type: string
        explanation:
          type: string
        firstName:
          description: The first name (also known as given name)
          type: string
        lastName:
          description: "The last name (also known as family name, or surname)"
          type: string
        countryOrigin:
          description: Most likely country of Origin
          type: string
        countryOriginAlt:
          description: "Second best alternative : country of Origin"
          type: string
        countriesOriginTop:
          description: List countries of Origin (top 10)
          items:
            description: List countries of Origin (top 10)
            type: string
          type: array
        score:
          description: "Compatibility to NamSor_v1 Origin score value. Higher score\
            \ is better, but score is not normalized. Use calibratedProbability if\
            \ available. "
          format: double
          maximum: 100
          minimum: 0
          type: number
        regionOrigin:
          description: Most likely region of Origin (based on countryOrigin ISO2 code)
          type: string
        topRegionOrigin:
          description: Most likely top region of Origin (based on countryOrigin ISO2
            code)
          type: string
        subRegionOrigin:
          description: Most likely sub region of Origin (based on countryOrigin ISO2
            code)
          type: string
        probabilityCalibrated:
          description: 'The calibrated probability for countryOrigin to have been
            guessed correctly. -1 = still calibrating. '
          format: double
          maximum: 1
          minimum: -1
          type: number
        probabilityAltCalibrated:
          description: 'The calibrated probability for countryOrigin OR countryOriginAlt
            to have been guessed correctly. -1 = still calibrating. '
          format: double
          maximum: 1
          minimum: -1
          type: number
        religionStats:
          description: "Geographic religious statistics, assuming country of origin\
            \ is correctly predicted."
          items:
            $ref: '#/components/schemas/ReligionStatOut'
          type: array
        religionStatsAlt:
          description: "Geographic religious statistics, for origin best alternative."
          items:
            $ref: '#/components/schemas/ReligionStatOut'
          type: array
      type: object
      xml:
        name: FirstLastNameOriginedOut
    RegionISO:
      description: List of countries and regions
      example:
        subregion: subregion
        countryFIPS: countryFIPS
        countryName: countryName
        countryNumCode: countryNumCode
        countryISO2: countryISO2
        countryISO3: countryISO3
        region: region
        topregion: topregion
      properties:
        countryName:
          type: string
        countryNumCode:
          type: string
        countryISO2:
          type: string
        countryISO3:
          type: string
        countryFIPS:
          type: string
        subregion:
          type: string
        region:
          type: string
        topregion:
          type: string
      type: object
    CorridorOut:
      description: "Represent multiple classifications for corridor sender and receiver\
        \ (gender, country, origin, diaspora)"
      example:
        FirstLastNameDiasporaedOut:
          lastName: lastName
          probabilityCalibrated: 0.12747533132666566
          ethnicity: Chinese
          lifted: true
          ethnicityAlt: Japanese
          explanation: explanation
          script: script
          religionStats:
          - pct: 5.962133916683182
            religion: religion
          - pct: 5.962133916683182
            religion: religion
          firstName: firstName
          score: 59.621339166831824
          religionStatsAlt:
          - pct: 5.962133916683182
            religion: religion
          - pct: 5.962133916683182
            religion: religion
          probabilityAltCalibrated: -0.539572822613047
          id: id
          countryIso2: countryIso2
          ethnicitiesTop:
          - ethnicitiesTop
          - ethnicitiesTop
        FirstLastNameGenderedOut:
          firstName: firstName
          lastName: lastName
          genderScale: -0.8398343619077977
          score: 60.27456183070403
          probabilityCalibrated: -0.706837403899411
          likelyGender: male
          id: id
          explanation: explanation
          script: script
        id: id
        script: script
        FirstLastNameOriginedOut:
          lastName: lastName
          probabilityCalibrated: 0.20549123661408064
          explanation: explanation
          script: script
          regionOrigin: regionOrigin
          topRegionOrigin: topRegionOrigin
          religionStats:
          - pct: 5.962133916683182
            religion: religion
          - pct: 5.962133916683182
            religion: religion
          firstName: firstName
          score: 8.008281904610115
          subRegionOrigin: subRegionOrigin
          religionStatsAlt:
          - pct: 5.962133916683182
            religion: religion
          - pct: 5.962133916683182
            religion: religion
          probabilityAltCalibrated: -0.706837403899411
          countriesOriginTop:
          - countriesOriginTop
          - countriesOriginTop
          id: id
          countryOrigin: countryOrigin
          countryOriginAlt: countryOriginAlt
      properties:
        id:
          type: string
          xml:
            attribute: true
        FirstLastNameGenderedOut:
          $ref: '#/components/schemas/FirstLastNameGenderedOut'
        FirstLastNameOriginedOut:
          $ref: '#/components/schemas/FirstLastNameOriginedOut'
        FirstLastNameDiasporaedOut:
          $ref: '#/components/schemas/FirstLastNameDiasporaedOut'
        script:
          type: string
      type: object
      xml:
        name: CorridorOut
    BatchNameMatchedOut:
      example:
        matchedNames:
        - score: 0.8008281904610115
          matchStatus: Match
          id: id
          explanation: explanation
          script: script
        - score: 0.8008281904610115
          matchStatus: Match
          id: id
          explanation: explanation
          script: script
      properties:
        matchedNames:
          description: Classified matched names
          items:
            $ref: '#/components/schemas/NameMatchedOut'
          type: array
      type: object
      xml:
        name: BatchNameMatchedOut
    BatchNameMatchCandidatesOut:
      example:
        namesAndMatchCandidates:
        - firstName: firstName
          lastName: lastName
          orderOption: orderOption
          matchCandidates:
          - predScoreGivenName: 6.027456183070403
            candidateName: candidateName
            probability: 0.8008281904610115
            predScoreFamilyName: 1.4658129805029452
          - predScoreGivenName: 6.027456183070403
            candidateName: candidateName
            probability: 0.8008281904610115
            predScoreFamilyName: 1.4658129805029452
          id: id
          explanation: explanation
          script: script
        - firstName: firstName
          lastName: lastName
          orderOption: orderOption
          matchCandidates:
          - predScoreGivenName: 6.027456183070403
            candidateName: candidateName
            probability: 0.8008281904610115
            predScoreFamilyName: 1.4658129805029452
          - predScoreGivenName: 6.027456183070403
            candidateName: candidateName
            probability: 0.8008281904610115
            predScoreFamilyName: 1.4658129805029452
          id: id
          explanation: explanation
          script: script
      properties:
        namesAndMatchCandidates:
          description: Classified matched names
          items:
            $ref: '#/components/schemas/NameMatchCandidatesOut'
          type: array
      type: object
      xml:
        name: BatchNameMatchCandidatesOut
    BatchPersonalNameGenderedOut:
      example:
        personalNames:
        - genderScale: -0.8398343619077977
          score: 60.27456183070403
          probabilityCalibrated: -0.706837403899411
          name: name
          likelyGender: male
          id: id
          explanation: explanation
          script: script
        - genderScale: -0.8398343619077977
          score: 60.27456183070403
          probabilityCalibrated: -0.706837403899411
          name: name
          likelyGender: male
          id: id
          explanation: explanation
          script: script
      properties:
        personalNames:
          description: Classified genderized names
          items:
            $ref: '#/components/schemas/PersonalNameGenderedOut'
          type: array
      type: object
      xml:
        name: BatchPersonalNameGenderedOut
    FeedbackLoopOut:
      example:
        feedbackCredits: 0
      properties:
        feedbackCredits:
          description: Number of units recredited as per feedback loop successful
            classification
          format: int64
          type: integer
      type: object
      xml:
        name: FeedbackLoopOut
    APIPeriodUsageOut:
      example:
        overageInclTax: 5.025004791520295
        overageQuantity: 9
        billingPeriod:
          apiKey: apiKey
          periodStarted: 7
          stripeCurrentPeriodEnd: 1
          usage: 6
          hardLimit: 1
          subscriptionStarted: 4
          periodEnded: 1
          billingStatus: billingStatus
          stripeCurrentPeriodStart: 1
          softLimit: 7
        overageCurrency: overageCurrency
        subscription:
          stripeStatus: stripeStatus
          planBaseFeesKey: planBaseFeesKey
          planQuota: 5
          apiKey: apiKey
          priceUSD: 2.3021358869347655
          priceOverageUSD: 7.061401241503109
          planStarted: 0
          planName: planName
          planStatus: planStatus
          priceOverage: 3.616076749251911
          userId: userId
          planEnded: 1
          taxRate: 5.962133916683182
          price: 9.301444243932576
          currency: currency
          currencyFactor: 2.027123023002322
          stripeSubscription: stripeSubscription
          stripeCustomerId: stripeCustomerId
          priorPlanStarted: 6
        overageExclTax: 4.965218492984954
      properties:
        subscription:
          $ref: '#/components/schemas/APIPlanSubscriptionOut'
        billingPeriod:
          $ref: '#/components/schemas/APIBillingPeriodUsageOut'
        overageExclTax:
          description: Overage amount including any tax.
          format: double
          type: number
        overageInclTax:
          description: Overage amount including tax (if applicable).
          format: double
          type: number
        overageCurrency:
          description: Currency of the overage amount.
          type: string
        overageQuantity:
          description: "Quantity above monthly quota of the current subscritpion,\
            \ in units."
          format: int64
          type: integer
      type: object
      xml:
        name: APICurrentUsageOut
    BatchFirstLastNameGeoSubdivisionIn:
      example:
        personalNames:
        - firstName: firstName
          lastName: lastName
          subdivisionIso: subdivisionIso
          id: id
          countryIso2: countryIso2
        - firstName: firstName
          lastName: lastName
          subdivisionIso: subdivisionIso
          id: id
          countryIso2: countryIso2
      properties:
        personalNames:
          items:
            $ref: '#/components/schemas/FirstLastNameGeoSubdivisionIn'
          type: array
      type: object
      xml:
        name: BatchFirstLastNameGeoSubdivisionIn
    BatchCorridorIn:
      example:
        corridorFromTo:
        - firstLastNameGeoTo:
            firstName: firstName
            lastName: lastName
            id: id
            countryIso2: countryIso2
          id: id
          firstLastNameGeoFrom:
            firstName: firstName
            lastName: lastName
            id: id
            countryIso2: countryIso2
        - firstLastNameGeoTo:
            firstName: firstName
            lastName: lastName
            id: id
            countryIso2: countryIso2
          id: id
          firstLastNameGeoFrom:
            firstName: firstName
            lastName: lastName
            id: id
            countryIso2: countryIso2
      properties:
        corridorFromTo:
          items:
            $ref: '#/components/schemas/CorridorIn'
          type: array
      type: object
      xml:
        name: BatchCorridorIn
    FirstLastNameGeoSubdivisionIn:
      example:
        firstName: firstName
        lastName: lastName
        subdivisionIso: subdivisionIso
        id: id
        countryIso2: countryIso2
      properties:
        id:
          type: string
          xml:
            attribute: true
        firstName:
          type: string
          xml:
            attribute: true
        lastName:
          type: string
          xml:
            attribute: true
        countryIso2:
          type: string
          xml:
            attribute: true
        subdivisionIso:
          type: string
          xml:
            attribute: true
      type: object
      xml:
        name: FirstLastNameGeoSubdivisionIn
    FirstLastNameGeoOut:
      description: Represents the output of inferring the LIKELY country of Origin
        from a personal name.
      example:
        lastName: lastName
        country: country
        topRegion: topRegion
        subRegion: subRegion
        probabilityCalibrated: 0.20549123661408064
        countryAlt: countryAlt
        explanation: explanation
        script: script
        religionStats:
        - pct: 5.962133916683182
          religion: religion
        - pct: 5.962133916683182
          religion: religion
        firstName: firstName
        score: 8.008281904610115
        countriesTop:
        - countriesTop
        - countriesTop
        religionStatsAlt:
        - pct: 5.962133916683182
          religion: religion
        - pct: 5.962133916683182
          religion: religion
        probabilityAltCalibrated: -0.706837403899411
        id: id
        region: region
      properties:
        script:
          type: string
        id:
          type: string
        explanation:
          type: string
        firstName:
          description: The first name (also known as given name)
          type: string
        lastName:
          description: "The last name (also known as family name, or surname)"
          type: string
        score:
          description: "Higher score is better, but score is not normalized. Use calibratedProbability\
            \ if available. "
          format: double
          maximum: 100
          minimum: 0
          type: number
        country:
          description: 'Most likely country '
          type: string
        countryAlt:
          description: "Second best alternative : country "
          type: string
        region:
          description: Most likely region (based on country ISO2 code)
          type: string
        topRegion:
          description: Most likely top region (based on country ISO2 code)
          type: string
        subRegion:
          description: Most likely sub region (based on country ISO2 code)
          type: string
        countriesTop:
          description: List countries (top 10)
          items:
            description: List countries (top 10)
            type: string
          type: array
        probabilityCalibrated:
          description: 'The calibrated probability for country to have been guessed
            correctly. -1 = still calibrating. '
          format: double
          maximum: 1
          minimum: -1
          type: number
        probabilityAltCalibrated:
          description: 'The calibrated probability for country OR countryAlt to have
            been guessed correctly. -1 = still calibrating. '
          format: double
          maximum: 1
          minimum: -1
          type: number
        religionStats:
          description: "Geographic religious statistics, assuming country is correctly\
            \ predicted."
          items:
            $ref: '#/components/schemas/ReligionStatOut'
          type: array
        religionStatsAlt:
          description: "Geographic religious statistics, for country best alternative."
          items:
            $ref: '#/components/schemas/ReligionStatOut'
          type: array
      type: object
      xml:
        name: FirstLastNameGeoOut
    PersonalNameParsedOut:
      example:
        score: 8.008281904610115
        firstLastName:
          firstName: firstName
          lastName: lastName
          id: id
          explanation: explanation
          script: script
        name: name
        id: id
        explanation: explanation
        script: script
        nameParserTypeAlt: FN1LN1
        nameParserType: FN1LN1
      properties:
        script:
          type: string
        id:
          type: string
        explanation:
          type: string
        name:
          description: The input name.
          type: string
        nameParserType:
          description: "Name parsing is addressed as a classification problem, for\
            \ example FN1LN1 means a first then last name order."
          enum:
          - FN1LN1
          - LN1FN1
          - FN1LN2
          - LN2FN1
          - FN1LNx
          - LNxFN1
          - FN2LN1
          - LN1FN2
          - FN2LN2
          - LN2FN2
          - FN2LNx
          - LNxFN2
          - FNxLN1
          - LN1FNx
          - FNxLN2
          - LN2FNx
          - FNxLNx
          - LNxFNx
          type: string
        nameParserTypeAlt:
          description: "Second best alternative parsing. Name parsing is addressed\
            \ as a classification problem, for example FN1LN1 means a first then last\
            \ name order."
          enum:
          - FN1LN1
          - LN1FN1
          - FN1LN2
          - LN2FN1
          - FN1LNx
          - LNxFN1
          - FN2LN1
          - LN1FN2
          - FN2LN2
          - LN2FN2
          - FN2LNx
          - LNxFN2
          - FNxLN1
          - LN1FNx
          - FNxLN2
          - LN2FNx
          - FNxLNx
          - LNxFNx
          type: string
        firstLastName:
          $ref: '#/components/schemas/FirstLastNameOut'
        score:
          description: "Higher score is better, but score is not normalized. Use calibratedProbability\
            \ if available. "
          format: double
          maximum: 100
          minimum: 0
          type: number
      type: object
      xml:
        name: PersonalNameParsedOut
    BatchPersonalNameGeoSubdivisionIn:
      example:
        personalNames:
        - subdivisionIso: subdivisionIso
          name: name
          id: id
          countryIso2: countryIso2
        - subdivisionIso: subdivisionIso
          name: name
          id: id
          countryIso2: countryIso2
      properties:
        personalNames:
          items:
            $ref: '#/components/schemas/PersonalNameGeoSubdivisionIn'
          type: array
      type: object
      xml:
        name: BatchPersonalNameGeoSubdivisionIn
    BatchFirstLastNameGeoZippedIn:
      example:
        personalNames:
        - firstName: firstName
          lastName: lastName
          zipCode: zipCode
          id: id
          countryIso2: countryIso2
        - firstName: firstName
          lastName: lastName
          zipCode: zipCode
          id: id
          countryIso2: countryIso2
      properties:
        personalNames:
          items:
            $ref: '#/components/schemas/FirstLastNameGeoZippedIn'
          type: array
      type: object
      xml:
        name: BatchFirstLastNameGeoZippedIn
    BatchFirstLastNameOriginedOut:
      description: Represents the output of inferring the LIKELY origin from a list
        of personal names.
      example:
        personalNames:
        - lastName: lastName
          probabilityCalibrated: 0.20549123661408064
          explanation: explanation
          script: script
          regionOrigin: regionOrigin
          topRegionOrigin: topRegionOrigin
          religionStats:
          - pct: 5.962133916683182
            religion: religion
          - pct: 5.962133916683182
            religion: religion
          firstName: firstName
          score: 8.008281904610115
          subRegionOrigin: subRegionOrigin
          religionStatsAlt:
          - pct: 5.962133916683182
            religion: religion
          - pct: 5.962133916683182
            religion: religion
          probabilityAltCalibrated: -0.706837403899411
          countriesOriginTop:
          - countriesOriginTop
          - countriesOriginTop
          id: id
          countryOrigin: countryOrigin
          countryOriginAlt: countryOriginAlt
        - lastName: lastName
          probabilityCalibrated: 0.20549123661408064
          explanation: explanation
          script: script
          regionOrigin: regionOrigin
          topRegionOrigin: topRegionOrigin
          religionStats:
          - pct: 5.962133916683182
            religion: religion
          - pct: 5.962133916683182
            religion: religion
          firstName: firstName
          score: 8.008281904610115
          subRegionOrigin: subRegionOrigin
          religionStatsAlt:
          - pct: 5.962133916683182
            religion: religion
          - pct: 5.962133916683182
            religion: religion
          probabilityAltCalibrated: -0.706837403899411
          countriesOriginTop:
          - countriesOriginTop
          - countriesOriginTop
          id: id
          countryOrigin: countryOrigin
          countryOriginAlt: countryOriginAlt
      properties:
        personalNames:
          description: Classified origined names
          items:
            $ref: '#/components/schemas/FirstLastNameOriginedOut'
          type: array
      type: object
      xml:
        name: BatchFirstLastNameOriginedOut
    FirstLastNameGeoZippedIn:
      example:
        firstName: firstName
        lastName: lastName
        zipCode: zipCode
        id: id
        countryIso2: countryIso2
      properties:
        id:
          type: string
          xml:
            attribute: true
        firstName:
          type: string
          xml:
            attribute: true
        lastName:
          type: string
          xml:
            attribute: true
        countryIso2:
          type: string
          xml:
            attribute: true
        zipCode:
          type: string
          xml:
            attribute: true
      type: object
      xml:
        name: FirstLastNameGeoZippedIn
    CorridorIn:
      description: "Represent any transnational interaction between names (ex. remittance,\
        \ communication, cross-border investment, airline travel"
      example:
        firstLastNameGeoTo:
          firstName: firstName
          lastName: lastName
          id: id
          countryIso2: countryIso2
        id: id
        firstLastNameGeoFrom:
          firstName: firstName
          lastName: lastName
          id: id
          countryIso2: countryIso2
      properties:
        id:
          type: string
          xml:
            attribute: true
        firstLastNameGeoFrom:
          $ref: '#/components/schemas/FirstLastNameGeoIn'
        firstLastNameGeoTo:
          $ref: '#/components/schemas/FirstLastNameGeoIn'
      type: object
      xml:
        name: CorridorIn
    BatchPersonalNameDiasporaedOut:
      description: "Represents the output of inferring the LIKELY ethnicity from a\
        \ personal name, given an country of residence."
      example:
        personalNames:
        - probabilityCalibrated: 0.20549123661408064
          ethnicity: Chinese
          lifted: true
          ethnicityAlt: Japanese
          explanation: explanation
          script: script
          religionStats:
          - pct: 5.962133916683182
            religion: religion
          - pct: 5.962133916683182
            religion: religion
          score: 8.008281904610115
          religionStatsAlt:
          - pct: 5.962133916683182
            religion: religion
          - pct: 5.962133916683182
            religion: religion
          name: name
          probabilityAltCalibrated: -0.706837403899411
          id: id
          countryIso2: countryIso2
          ethnicitiesTop:
          - ethnicitiesTop
          - ethnicitiesTop
        - probabilityCalibrated: 0.20549123661408064
          ethnicity: Chinese
          lifted: true
          ethnicityAlt: Japanese
          explanation: explanation
          script: script
          religionStats:
          - pct: 5.962133916683182
            religion: religion
          - pct: 5.962133916683182
            religion: religion
          score: 8.008281904610115
          religionStatsAlt:
          - pct: 5.962133916683182
            religion: religion
          - pct: 5.962133916683182
            religion: religion
          name: name
          probabilityAltCalibrated: -0.706837403899411
          id: id
          countryIso2: countryIso2
          ethnicitiesTop:
          - ethnicitiesTop
          - ethnicitiesTop
      properties:
        personalNames:
          description: Classified diaspora names
          items:
            $ref: '#/components/schemas/PersonalNameDiasporaedOut'
          type: array
      type: object
      xml:
        name: BatchPersonalNameDiasporaedOut
    BatchCorridorOut:
      example:
        corridorFromTo:
        - FirstLastNameDiasporaedOut:
            lastName: lastName
            probabilityCalibrated: 0.12747533132666566
            ethnicity: Chinese
            lifted: true
            ethnicityAlt: Japanese
            explanation: explanation
            script: script
            religionStats:
            - pct: 5.962133916683182
              religion: religion
            - pct: 5.962133916683182
              religion: religion
            firstName: firstName
            score: 59.621339166831824
            religionStatsAlt:
            - pct: 5.962133916683182
              religion: religion
            - pct: 5.962133916683182
              religion: religion
            probabilityAltCalibrated: -0.539572822613047
            id: id
            countryIso2: countryIso2
            ethnicitiesTop:
            - ethnicitiesTop
            - ethnicitiesTop
          FirstLastNameGenderedOut:
            firstName: firstName
            lastName: lastName
            genderScale: -0.8398343619077977
            score: 60.27456183070403
            probabilityCalibrated: -0.706837403899411
            likelyGender: male
            id: id
            explanation: explanation
            script: script
          id: id
          script: script
          FirstLastNameOriginedOut:
            lastName: lastName
            probabilityCalibrated: 0.20549123661408064
            explanation: explanation
            script: script
            regionOrigin: regionOrigin
            topRegionOrigin: topRegionOrigin
            religionStats:
            - pct: 5.962133916683182
              religion: religion
            - pct: 5.962133916683182
              religion: religion
            firstName: firstName
            score: 8.008281904610115
            subRegionOrigin: subRegionOrigin
            religionStatsAlt:
            - pct: 5.962133916683182
              religion: religion
            - pct: 5.962133916683182
              religion: religion
            probabilityAltCalibrated: -0.706837403899411
            countriesOriginTop:
            - countriesOriginTop
            - countriesOriginTop
            id: id
            countryOrigin: countryOrigin
            countryOriginAlt: countryOriginAlt
        - FirstLastNameDiasporaedOut:
            lastName: lastName
            probabilityCalibrated: 0.12747533132666566
            ethnicity: Chinese
            lifted: true
            ethnicityAlt: Japanese
            explanation: explanation
            script: script
            religionStats:
            - pct: 5.962133916683182
              religion: religion
            - pct: 5.962133916683182
              religion: religion
            firstName: firstName
            score: 59.621339166831824
            religionStatsAlt:
            - pct: 5.962133916683182
              religion: religion
            - pct: 5.962133916683182
              religion: religion
            probabilityAltCalibrated: -0.539572822613047
            id: id
            countryIso2: countryIso2
            ethnicitiesTop:
            - ethnicitiesTop
            - ethnicitiesTop
          FirstLastNameGenderedOut:
            firstName: firstName
            lastName: lastName
            genderScale: -0.8398343619077977
            score: 60.27456183070403
            probabilityCalibrated: -0.706837403899411
            likelyGender: male
            id: id
            explanation: explanation
            script: script
          id: id
          script: script
          FirstLastNameOriginedOut:
            lastName: lastName
            probabilityCalibrated: 0.20549123661408064
            explanation: explanation
            script: script
            regionOrigin: regionOrigin
            topRegionOrigin: topRegionOrigin
            religionStats:
            - pct: 5.962133916683182
              religion: religion
            - pct: 5.962133916683182
              religion: religion
            firstName: firstName
            score: 8.008281904610115
            subRegionOrigin: subRegionOrigin
            religionStatsAlt:
            - pct: 5.962133916683182
              religion: religion
            - pct: 5.962133916683182
              religion: religion
            probabilityAltCalibrated: -0.706837403899411
            countriesOriginTop:
            - countriesOriginTop
            - countriesOriginTop
            id: id
            countryOrigin: countryOrigin
            countryOriginAlt: countryOriginAlt
      properties:
        corridorFromTo:
          description: Classified corridors
          items:
            $ref: '#/components/schemas/CorridorOut'
          type: array
      type: object
      xml:
        name: BatchCorridorOut
    BatchPersonalNameGeoIn:
      example:
        personalNames:
        - name: name
          id: id
          countryIso2: countryIso2
        - name: name
          id: id
          countryIso2: countryIso2
      properties:
        personalNames:
          items:
            $ref: '#/components/schemas/PersonalNameGeoIn'
          type: array
      type: object
      xml:
        name: BatchPersonalNameGeoIn
    FirstLastNameIn:
      example:
        firstName: firstName
        lastName: lastName
        id: id
      properties:
        id:
          type: string
          xml:
            attribute: true
        firstName:
          type: string
          xml:
            attribute: true
        lastName:
          type: string
          xml:
            attribute: true
      type: object
      xml:
        name: FirstLastName
    BatchFirstLastNameGeoSubclassificationOut:
      description: Represents the output of inferring the LIKELY country subclassification
        (regional names).
      example:
        personalNames:
        - firstName: firstName
          lastName: lastName
          score: 8.008281904610115
          probabilityCalibrated: 0.20549123661408064
          subclassificationTop:
          - subclassificationTop
          - subclassificationTop
          probabilityAltCalibrated: -0.706837403899411
          id: id
          countryIso2: countryIso2
          explanation: explanation
          script: script
          subClassification: subClassification
          subClassificationAlt: subClassificationAlt
        - firstName: firstName
          lastName: lastName
          score: 8.008281904610115
          probabilityCalibrated: 0.20549123661408064
          subclassificationTop:
          - subclassificationTop
          - subclassificationTop
          probabilityAltCalibrated: -0.706837403899411
          id: id
          countryIso2: countryIso2
          explanation: explanation
          script: script
          subClassification: subClassification
          subClassificationAlt: subClassificationAlt
      properties:
        personalNames:
          description: Classified names at sub country level (region or state)
          items:
            $ref: '#/components/schemas/FirstLastNameGeoSubclassificationOut'
          type: array
      type: object
      xml:
        name: BatchFirstLastNameGeoSubclassificationOut
    APIClassifierTaxonomyOut:
      example:
        taxonomyClasses:
        - taxonomyClasses
        - taxonomyClasses
        classifyingScripts:
        - classifyingScripts
        - classifyingScripts
        classifierName: classifierName
      properties:
        classifierName:
          description: Name of the classifier as per apiStatus (corresponds also to
            the name of the service in apiServices)
          type: string
        taxonomyClasses:
          description: The taxonomy classes this classifier classifies to
          items:
            description: The taxonomy classes this classifier classifies to
            type: string
          type: array
        classifyingScripts:
          description: The scripts / alphabets this classifiers classifies to
          items:
            description: The scripts / alphabets this classifiers classifies to
            type: string
          type: array
      type: object
      xml:
        name: APIClassifierTaxonomyOut
    NameMatchCandidateOut:
      description: The ordered list of name matching candidates
      example:
        predScoreGivenName: 6.027456183070403
        candidateName: candidateName
        probability: 0.8008281904610115
        predScoreFamilyName: 1.4658129805029452
      properties:
        candidateName:
          description: The name matching candidate name
          type: string
        probability:
          description: The name matching estimated probability.
          format: double
          type: number
        predScoreGivenName:
          description: The given name prediction score.
          format: double
          type: number
        predScoreFamilyName:
          description: The family name prediction score.
          format: double
          type: number
      type: object
      xml:
        name: NameMatchCandidateOut
    ReligionStatOut:
      description: "Geographic religious statistics, assuming country is correctly\
        \ predicted."
      example:
        pct: 5.962133916683182
        religion: religion
      properties:
        religion:
          type: string
        pct:
          format: double
          type: number
      type: object
      xml:
        name: ReligionStatOut
    FirstLastNameUSRaceEthnicityOut:
      description: "Represents the output of inferring the LIKELY US 'race/ethnicity'\
        \ from a personal name, given US country of residence and (optionally) a ZIP5\
        \ code."
      example:
        firstName: firstName
        lastName: lastName
        raceEthnicityAlt: W_NL
        score: 8.008281904610115
        raceEthnicitiesTop:
        - raceEthnicitiesTop
        - raceEthnicitiesTop
        probabilityCalibrated: 0.20549123661408064
        probabilityAltCalibrated: -0.706837403899411
        id: id
        explanation: explanation
        script: script
        raceEthnicity: W_NL
      properties:
        script:
          type: string
        id:
          type: string
        explanation:
          type: string
        firstName:
          description: The first name (also known as given name)
          type: string
        lastName:
          description: "The last name (also known as family name, or surname)"
          type: string
        raceEthnicityAlt:
          description: Second most likely US 'race'/ethnicity
          enum:
          - W_NL
          - HL
          - A
          - B_NL
          - AI_AN
          - PI
          type: string
          xml:
            attribute: true
        raceEthnicity:
          description: Most likely US 'race'/ethnicity
          enum:
          - W_NL
          - HL
          - A
          - B_NL
          - AI_AN
          - PI
          type: string
          xml:
            attribute: true
        score:
          description: "Higher score is better, but score is not normalized. Use calibratedProbability\
            \ if available. "
          format: double
          maximum: 100
          minimum: 0
          type: number
        raceEthnicitiesTop:
          description: List 'race'/ethnicities
          items:
            description: List 'race'/ethnicities
            type: string
          type: array
        probabilityCalibrated:
          description: 'The calibrated probability for raceEthnicity to have been
            guessed correctly. -1 = still calibrating. '
          format: double
          maximum: 1
          minimum: -1
          type: number
        probabilityAltCalibrated:
          description: 'The calibrated probability for raceEthnicity OR raceEthnicityAlt
            to have been guessed correctly. -1 = still calibrating. '
          format: double
          maximum: 1
          minimum: -1
          type: number
      type: object
      xml:
        name: FirstLastNameUSRaceEthnicityOut
    BatchFirstLastNamePhoneNumberGeoIn:
      example:
        personalNamesWithPhoneNumbers:
        - firstName: firstName
          lastName: lastName
          phoneNumber: phoneNumber
          countryIso2Alt: countryIso2Alt
          id: id
          countryIso2: countryIso2
        - firstName: firstName
          lastName: lastName
          phoneNumber: phoneNumber
          countryIso2Alt: countryIso2Alt
          id: id
          countryIso2: countryIso2
      properties:
        personalNamesWithPhoneNumbers:
          items:
            $ref: '#/components/schemas/FirstLastNamePhoneNumberGeoIn'
          type: array
      type: object
      xml:
        name: BatchFirstLastNamePhoneNumberGeoIn
    PersonalNameGeoIn:
      example:
        name: name
        id: id
        countryIso2: countryIso2
      properties:
        id:
          type: string
          xml:
            attribute: true
        name:
          type: string
          xml:
            attribute: true
        countryIso2:
          type: string
          xml:
            attribute: true
      type: object
      xml:
        name: PersonalNameGeoIn
    BatchProperNounCategorizedOut:
      description: "Represents the output of inferring the common type (anthroponym,\
        \ toponym, brand, etc.) from a list of proper names."
      example:
        properNouns:
        - score: 8.008281904610115
          commonTypeAlt: commonTypeAlt
          name: name
          id: id
          explanation: explanation
          script: script
          commonType: commonType
        - score: 8.008281904610115
          commonTypeAlt: commonTypeAlt
          name: name
          id: id
          explanation: explanation
          script: script
          commonType: commonType
      properties:
        properNouns:
          description: Classified typed proper names
          items:
            $ref: '#/components/schemas/ProperNounCategorizedOut'
          type: array
      type: object
      xml:
        name: BatchProperNounCategorizedOut
    BatchFirstLastNameIn:
      example:
        personalNames:
        - firstName: firstName
          lastName: lastName
          id: id
        - firstName: firstName
          lastName: lastName
          id: id
      properties:
        personalNames:
          items:
            $ref: '#/components/schemas/FirstLastNameIn'
          type: array
      type: object
      xml:
        name: BatchFirstLastNameIn
    FirstLastNameCasteOut:
      description: Represents the output of inferring the LIKELY caste from a personal
        Hindu/Indian name.
      example:
        casteTop:
        - casteTop
        - casteTop
        firstName: firstName
        lastName: lastName
        score: 8.008281904610115
        probabilityCalibrated: 0.20549123661408064
        caste: caste
        probabilityAltCalibrated: -0.706837403899411
        id: id
        explanation: explanation
        casteAlt: casteAlt
        script: script
      properties:
        script:
          type: string
        id:
          type: string
        explanation:
          type: string
        firstName:
          description: The first name (also known as given name)
          type: string
        lastName:
          description: "The last name (also known as family name, or surname)"
          type: string
        caste:
          description: Most likely caste
          type: string
        casteAlt:
          description: "Second best alternative : caste"
          type: string
        casteTop:
          description: List caste(top 10)
          items:
            description: List caste(top 10)
            type: string
          type: array
        score:
          description: "Compatibility to NamSor_v1 Origin score value. Higher score\
            \ is better, but score is not normalized. Use calibratedProbability if\
            \ available. "
          format: double
          maximum: 100
          minimum: 0
          type: number
        probabilityCalibrated:
          description: 'The calibrated probability for caste to have been guessed
            correctly. -1 = still calibrating. '
          format: double
          maximum: 1
          minimum: -1
          type: number
        probabilityAltCalibrated:
          description: 'The calibrated probability for caste OR casteAlt to have been
            guessed correctly. -1 = still calibrating. '
          format: double
          maximum: 1
          minimum: -1
          type: number
      type: object
      xml:
        name: FirstLastNameCasteOut
    BatchMatchPersonalFirstLastNameIn:
      example:
        personalNames:
        - id: id
          name2:
            name: name
            id: id
          name1:
            firstName: firstName
            lastName: lastName
            id: id
        - id: id
          name2:
            name: name
            id: id
          name1:
            firstName: firstName
            lastName: lastName
            id: id
      properties:
        personalNames:
          items:
            $ref: '#/components/schemas/MatchPersonalFirstLastNameIn'
          type: array
      type: object
      xml:
        name: BatchMatchPersonalFirstLastNameIn
    FirstLastNamePhoneNumberGeoIn:
      example:
        firstName: firstName
        lastName: lastName
        phoneNumber: phoneNumber
        countryIso2Alt: countryIso2Alt
        id: id
        countryIso2: countryIso2
      properties:
        id:
          type: string
          xml:
            attribute: true
        firstName:
          type: string
          xml:
            attribute: true
        lastName:
          type: string
          xml:
            attribute: true
        phoneNumber:
          type: string
        countryIso2:
          type: string
        countryIso2Alt:
          type: string
      type: object
      xml:
        name: FirstLastNamePhoneNumberGeoIn
    RegionOut:
      example:
        countriesAndRegions:
        - subregion: subregion
          countryFIPS: countryFIPS
          countryName: countryName
          countryNumCode: countryNumCode
          countryISO2: countryISO2
          countryISO3: countryISO3
          region: region
          topregion: topregion
        - subregion: subregion
          countryFIPS: countryFIPS
          countryName: countryName
          countryNumCode: countryNumCode
          countryISO2: countryISO2
          countryISO3: countryISO3
          region: region
          topregion: topregion
      properties:
        countriesAndRegions:
          description: List of countries and regions
          items:
            $ref: '#/components/schemas/RegionISO'
          type: array
      type: object
      xml:
        name: RegionOut
    PersonalNameGeoOut:
      example:
        country: country
        topRegion: topRegion
        subRegion: subRegion
        probabilityCalibrated: 0.20549123661408064
        countryAlt: countryAlt
        explanation: explanation
        script: script
        religionStats:
        - pct: 5.962133916683182
          religion: religion
        - pct: 5.962133916683182
          religion: religion
        score: 8.008281904610115
        countriesTop:
        - countriesTop
        - countriesTop
        religionStatsAlt:
        - pct: 5.962133916683182
          religion: religion
        - pct: 5.962133916683182
          religion: religion
        name: name
        probabilityAltCalibrated: -0.706837403899411
        id: id
        region: region
      properties:
        script:
          type: string
        id:
          type: string
        explanation:
          type: string
        name:
          description: The input name.
          type: string
        score:
          description: "Higher score is better, but score is not normalized. Use calibratedProbability\
            \ if available. "
          format: double
          maximum: 100
          minimum: 0
          type: number
        country:
          description: 'Most likely country '
          type: string
        countryAlt:
          description: "Second best alternative : country "
          type: string
        region:
          description: Most likely region (based on country ISO2 code)
          type: string
        topRegion:
          description: Most likely top region (based on country ISO2 code)
          type: string
        subRegion:
          description: Most likely sub region (based on country ISO2 code)
          type: string
        countriesTop:
          description: List countries (top 10)
          items:
            description: List countries (top 10)
            type: string
          type: array
        probabilityCalibrated:
          description: 'The calibrated probability for country to have been guessed
            correctly. -1 = still calibrating. '
          format: double
          maximum: 1
          minimum: -1
          type: number
        probabilityAltCalibrated:
          description: 'The calibrated probability for country OR countryAlt to have
            been guessed correctly. -1 = still calibrating. '
          format: double
          maximum: 1
          minimum: -1
          type: number
        religionStats:
          description: "Geographic religious statistics, assuming country is correctly\
            \ predicted."
          items:
            $ref: '#/components/schemas/ReligionStatOut'
          type: array
        religionStatsAlt:
          description: "Geographic religious statistics, for country best alternative."
          items:
            $ref: '#/components/schemas/ReligionStatOut'
          type: array
      type: object
      xml:
        name: PersonalNameGeoOut
    BatchFirstLastNameGeoIn:
      example:
        personalNames:
        - firstName: firstName
          lastName: lastName
          id: id
          countryIso2: countryIso2
        - firstName: firstName
          lastName: lastName
          id: id
          countryIso2: countryIso2
      properties:
        personalNames:
          items:
            $ref: '#/components/schemas/FirstLastNameGeoIn'
          type: array
      type: object
      xml:
        name: BatchFirstLastNameGeoIn
    BatchPersonalNameCastegroupOut:
      example:
        personalNames:
        - castegroup: castegroup
          castegroupTop:
          - castegroupTop
          - castegroupTop
          score: 8.008281904610115
          probabilityCalibrated: 0.20549123661408064
          name: name
          probabilityAltCalibrated: -0.706837403899411
          id: id
          explanation: explanation
          castegroupAlt: castegroupAlt
          script: script
        - castegroup: castegroup
          castegroupTop:
          - castegroupTop
          - castegroupTop
          score: 8.008281904610115
          probabilityCalibrated: 0.20549123661408064
          name: name
          probabilityAltCalibrated: -0.706837403899411
          id: id
          explanation: explanation
          castegroupAlt: castegroupAlt
          script: script
      properties:
        personalNames:
          description: Caste group-coded names
          items:
            $ref: '#/components/schemas/PersonalNameCastegroupOut'
          type: array
      type: object
      xml:
        name: BatchPersonalNameCastegroupOut
    APICounterV2Out:
      description: Detailed usage as reported by the deduplicating API counter.
      example:
        apiKey:
          striped: true
          apiKey: apiKey
          anonymized: true
          learnable: true
          ipAddress: ipAddress
          admin: true
          communityEngageOption:
            genderFilter:
            - genderFilter
            - genderFilter
            ethnicityFilter:
            - ethnicityFilter
            - ethnicityFilter
            countryOutFilter:
            - countryOutFilter
            - countryOutFilter
            usRaceEthnicityFilter:
            - usRaceEthnicityFilter
            - usRaceEthnicityFilter
          userId: userId
          explainable: true
          vetted: true
          partner: true
          corporate: true
          disabled: true
        serviceFeaturesUsage:
          key: 5
        apiService: apiService
        createdDateTime: 0
        lastFlushedDateTime: 1
        totalUsage: 6
        hostAddress: hostAddress
        lastUsedDateTime: 5
      properties:
        apiKey:
          $ref: '#/components/schemas/APIKeyOut'
        apiService:
          description: The apiService corresponds to the classifier name.
          type: string
        hostAddress:
          description: The processing hostAddress.
          type: string
        createdDateTime:
          description: The create datetime of the counter.
          format: int64
          type: integer
        totalUsage:
          description: The usage of the counter.
          format: int64
          type: integer
        lastFlushedDateTime:
          description: The flush datetime of the counter.
          format: int64
          type: integer
        lastUsedDateTime:
          description: The last usage datetime of the counter.
          format: int64
          type: integer
        serviceFeaturesUsage:
          additionalProperties:
            description: "Usage of special features, such as Chinese, Japanese."
            format: int64
            type: integer
          description: "Usage of special features, such as Chinese, Japanese."
          type: object
      type: object
      xml:
        name: APICallStatOut
    NameMatchCandidatesOut:
      description: Classified matched names
      example:
        firstName: firstName
        lastName: lastName
        orderOption: orderOption
        matchCandidates:
        - predScoreGivenName: 6.027456183070403
          candidateName: candidateName
          probability: 0.8008281904610115
          predScoreFamilyName: 1.4658129805029452
        - predScoreGivenName: 6.027456183070403
          candidateName: candidateName
          probability: 0.8008281904610115
          predScoreFamilyName: 1.4658129805029452
        id: id
        explanation: explanation
        script: script
      properties:
        script:
          type: string
        id:
          type: string
        explanation:
          type: string
        firstName:
          description: The first name (also known as given name)
          type: string
        lastName:
          description: "The last name (also known as family name, or surname)"
          type: string
        orderOption:
          description: The option for ordering
          type: string
        matchCandidates:
          description: The ordered list of name matching candidates
          items:
            $ref: '#/components/schemas/NameMatchCandidateOut'
          type: array
      type: object
      xml:
        name: NameMatchCandidatesOut
    NameIn:
      example:
        name: name
        id: id
      properties:
        id:
          type: string
          xml:
            attribute: true
        name:
          type: string
          xml:
            attribute: true
      type: object
      xml:
        name: NameIn
    PersonalNameSubdivisionIn:
      example:
        subdivisionIso: subdivisionIso
        name: name
        id: id
      properties:
        id:
          type: string
          xml:
            attribute: true
        name:
          type: string
          xml:
            attribute: true
        subdivisionIso:
          type: string
          xml:
            attribute: true
      type: object
      xml:
        name: PersonalNameSubdivisionIn
    BatchPersonalNameSubdivisionIn:
      example:
        personalNames:
        - subdivisionIso: subdivisionIso
          name: name
          id: id
        - subdivisionIso: subdivisionIso
          name: name
          id: id
      properties:
        personalNames:
          items:
            $ref: '#/components/schemas/PersonalNameSubdivisionIn'
          type: array
      type: object
      xml:
        name: BatchPersonalNameSubdivisionIn
    BatchPersonalNameUSRaceEthnicityOut:
      description: Represents the output of inferring the LIKELY US race/ethnicity
        from a list of personal names.
      example:
        personalNames:
        - raceEthnicityAlt: W_NL
          score: 8.008281904610115
          raceEthnicitiesTop:
          - raceEthnicitiesTop
          - raceEthnicitiesTop
          probabilityCalibrated: 0.20549123661408064
          name: name
          probabilityAltCalibrated: -0.706837403899411
          id: id
          explanation: explanation
          script: script
          raceEthnicity: W_NL
        - raceEthnicityAlt: W_NL
          score: 8.008281904610115
          raceEthnicitiesTop:
          - raceEthnicitiesTop
          - raceEthnicitiesTop
          probabilityCalibrated: 0.20549123661408064
          name: name
          probabilityAltCalibrated: -0.706837403899411
          id: id
          explanation: explanation
          script: script
          raceEthnicity: W_NL
      properties:
        personalNames:
          description: Classified origined names
          items:
            $ref: '#/components/schemas/PersonalNameUSRaceEthnicityOut'
          type: array
      type: object
      xml:
        name: BatchPersonalNameUSRaceEthnicityOut
    APIPlanSubscriptionOut:
      description: The API Plan governing the subscription.
      example:
        stripeStatus: stripeStatus
        planBaseFeesKey: planBaseFeesKey
        planQuota: 5
        apiKey: apiKey
        priceUSD: 2.3021358869347655
        priceOverageUSD: 7.061401241503109
        planStarted: 0
        planName: planName
        planStatus: planStatus
        priceOverage: 3.616076749251911
        userId: userId
        planEnded: 1
        taxRate: 5.962133916683182
        price: 9.301444243932576
        currency: currency
        currencyFactor: 2.027123023002322
        stripeSubscription: stripeSubscription
        stripeCustomerId: stripeCustomerId
        priorPlanStarted: 6
      properties:
        apiKey:
          description: User API Key.
          type: string
        planStarted:
          description: Datetime when the user subscribed to the current plan.
          format: int64
          type: integer
        priorPlanStarted:
          description: Datetime when the user subscribed to the prior plan.
          format: int64
          type: integer
        planEnded:
          description: Datetime when the user ended the plan.
          format: int64
          type: integer
        taxRate:
          description: Applicable tax rate for the plan.
          format: double
          type: number
        planName:
          description: Current plan name.
          type: string
        planBaseFeesKey:
          description: Current plan key (as in Stripe product).
          type: string
        planStatus:
          description: Plan status.
          type: string
        planQuota:
          description: "Current plan quota in quantity of units (NB: some API use\
            \ several units per name)."
          format: int64
          type: integer
        priceUSD:
          description: Current plan monthly price expressed in USD (includes a free
            quota).
          format: double
          type: number
        priceOverageUSD:
          description: Current plan price for overages expressed in USD (extra price
            per unit above the free quota).
          format: double
          type: number
        price:
          description: Current plan price for overages expressed in Currency (extra
            price per unit above the free quota).
          format: double
          type: number
        priceOverage:
          description: Current plan price for overages expressed in Currency (extra
            price per unit above the free quota).
          format: double
          type: number
        currency:
          description: Current plan Currency for prices.
          type: string
        currencyFactor:
          description: "For USD, GBP, EUR - the factor is 1."
          format: double
          type: number
        stripeCustomerId:
          description: Stripe customer identifier.
          type: string
        stripeStatus:
          description: Stripe status ex active.
          type: string
        stripeSubscription:
          description: Stripe subscription identifier.
          type: string
        userId:
          description: Internal user identifier.
          type: string
      type: object
      xml:
        name: APIPlanSubscriptionOut
    FirstLastNameGeoIn:
      example:
        firstName: firstName
        lastName: lastName
        id: id
        countryIso2: countryIso2
      properties:
        id:
          type: string
          xml:
            attribute: true
        firstName:
          type: string
          xml:
            attribute: true
        lastName:
          type: string
          xml:
            attribute: true
        countryIso2:
          type: string
          xml:
            attribute: true
      type: object
      xml:
        name: FirstLastNameGeoIn
    BatchFirstLastNameReligionedOut:
      description: Represents the output of inferring the LIKELY religion from a list
        of personal names.
      example:
        personalNames:
        - firstName: firstName
          lastName: lastName
          religionAlt: religionAlt
          score: 8.008281904610115
          probabilityCalibrated: 0.20549123661408064
          probabilityAltCalibrated: -0.706837403899411
          id: id
          religionsTop:
          - religionsTop
          - religionsTop
          explanation: explanation
          script: script
          religion: religion
        - firstName: firstName
          lastName: lastName
          religionAlt: religionAlt
          score: 8.008281904610115
          probabilityCalibrated: 0.20549123661408064
          probabilityAltCalibrated: -0.706837403899411
          id: id
          religionsTop:
          - religionsTop
          - religionsTop
          explanation: explanation
          script: script
          religion: religion
      properties:
        personalNames:
          description: Classified names
          items:
            $ref: '#/components/schemas/FirstLastNameReligionedOut'
          type: array
      type: object
      xml:
        name: BatchFirstLastNameReligionedOut
    PersonalNameOriginedOut:
      description: Represents the output of inferring the LIKELY country of Origin
        from a personal name.
      example:
        probabilityCalibrated: 0.20549123661408064
        religionStatsSynthetic:
        - pct: 5.962133916683182
          religion: religion
        - pct: 5.962133916683182
          religion: religion
        explanation: explanation
        script: script
        regionOrigin: regionOrigin
        topRegionOrigin: topRegionOrigin
        religionStats:
        - pct: 5.962133916683182
          religion: religion
        - pct: 5.962133916683182
          religion: religion
        score: 8.008281904610115
        subRegionOrigin: subRegionOrigin
        religionStatsAlt:
        - pct: 5.962133916683182
          religion: religion
        - pct: 5.962133916683182
          religion: religion
        name: name
        probabilityAltCalibrated: -0.706837403899411
        countriesOriginTop:
        - countriesOriginTop
        - countriesOriginTop
        id: id
        countryOrigin: countryOrigin
        countryOriginAlt: countryOriginAlt
      properties:
        script:
          type: string
        id:
          type: string
        explanation:
          type: string
        name:
          description: The input name.
          type: string
        countryOrigin:
          description: Most likely country of Origin
          type: string
        countryOriginAlt:
          description: "Second best alternative : country of Origin"
          type: string
        countriesOriginTop:
          description: List countries of Origin (top 10)
          items:
            description: List countries of Origin (top 10)
            type: string
          type: array
        score:
          description: "Compatibility to NamSor_v1 Origin score value. Higher score\
            \ is better, but score is not normalized. Use calibratedProbability if\
            \ available. "
          format: double
          maximum: 100
          minimum: 0
          type: number
        regionOrigin:
          description: Most likely region of Origin (based on countryOrigin ISO2 code)
          type: string
        topRegionOrigin:
          description: Most likely top region of Origin (based on countryOrigin ISO2
            code)
          type: string
        subRegionOrigin:
          description: Most likely sub region of Origin (based on countryOrigin ISO2
            code)
          type: string
        probabilityCalibrated:
          description: 'The calibrated probability for countryOrigin to have been
            guessed correctly. -1 = still calibrating. '
          format: double
          maximum: 1
          minimum: -1
          type: number
        probabilityAltCalibrated:
          description: 'The calibrated probability for countryOrigin OR countryOriginAlt
            to have been guessed correctly. -1 = still calibrating. '
          format: double
          maximum: 1
          minimum: -1
          type: number
        religionStats:
          description: "Geographic religious statistics, assuming country of origin\
            \ is correctly predicted."
          items:
            $ref: '#/components/schemas/ReligionStatOut'
          type: array
        religionStatsAlt:
          description: "Geographic religious statistics, for country best alternative."
          items:
            $ref: '#/components/schemas/ReligionStatOut'
          type: array
        religionStatsSynthetic:
          description: "Geographic religious statistics, assuming country of origin\
            \ OR best alternative is correctly predicted."
          items:
            $ref: '#/components/schemas/ReligionStatOut'
          type: array
      type: object
      xml:
        name: PersonalNameOriginedOut
    PersonalNameCastegroupOut:
      description: Caste group-coded names
      example:
        castegroup: castegroup
        castegroupTop:
        - castegroupTop
        - castegroupTop
        score: 8.008281904610115
        probabilityCalibrated: 0.20549123661408064
        name: name
        probabilityAltCalibrated: -0.706837403899411
        id: id
        explanation: explanation
        castegroupAlt: castegroupAlt
        script: script
      properties:
        script:
          type: string
        id:
          type: string
        explanation:
          type: string
        name:
          description: The input name.
          type: string
        score:
          description: "Higher score is better, but score is not normalized. Use calibratedProbability\
            \ if available. "
          format: double
          maximum: 100
          minimum: 0
          type: number
        castegroup:
          description: Most likely caste group
          type: string
        castegroupAlt:
          description: "Second best alternative : caste group "
          type: string
        castegroupTop:
          description: List caste group (top 10)
          items:
            description: List caste group (top 10)
            type: string
          type: array
        probabilityCalibrated:
          description: 'The calibrated probability for country to have been guessed
            correctly. -1 = still calibrating. '
          format: double
          maximum: 1
          minimum: -1
          type: number
        probabilityAltCalibrated:
          description: 'The calibrated probability for country OR countryAlt to have
            been guessed correctly. -1 = still calibrating. '
          format: double
          maximum: 1
          minimum: -1
          type: number
      type: object
      xml:
        name: PersonalNameCastegroupOut
    APIClassifiersStatusOut:
      example:
        classifiers:
        - probabilityCalibrated: true
          shuttingDown: true
          learning: true
          classifierName: classifierName
          serving: true
        - probabilityCalibrated: true
          shuttingDown: true
          learning: true
          classifierName: classifierName
          serving: true
        softwareVersion:
          softwareNameAndVersion: softwareNameAndVersion
          softwareVersion:
          - 0
          - 0
      properties:
        softwareVersion:
          $ref: '#/components/schemas/SoftwareVersionOut'
        classifiers:
          description: The list of classifiers and versions.
          items:
            $ref: '#/components/schemas/APIClassifierOut'
          type: array
      type: object
      xml:
        name: APIClassifiersStatusOut
    BatchNameGeoIn:
      example:
        properNouns:
        - name: name
          id: id
          countryIso2: countryIso2
        - name: name
          id: id
          countryIso2: countryIso2
      properties:
        properNouns:
          items:
            $ref: '#/components/schemas/NameGeoIn'
          type: array
      type: object
      xml:
        name: BatchNameGeoIn
    BatchFirstLastNameGenderIn:
      example:
        personalNames:
        - firstName: firstName
          lastName: lastName
          gender: gender
          id: id
        - firstName: firstName
          lastName: lastName
          gender: gender
          id: id
      properties:
        personalNames:
          items:
            $ref: '#/components/schemas/FirstLastNameGenderIn'
          type: array
      type: object
      xml:
        name: BatchFirstLastNameGenderIn
    BatchPersonalNameParsedOut:
      example:
        personalNames:
        - score: 8.008281904610115
          firstLastName:
            firstName: firstName
            lastName: lastName
            id: id
            explanation: explanation
            script: script
          name: name
          id: id
          explanation: explanation
          script: script
          nameParserTypeAlt: FN1LN1
          nameParserType: FN1LN1
        - score: 8.008281904610115
          firstLastName:
            firstName: firstName
            lastName: lastName
            id: id
            explanation: explanation
            script: script
          name: name
          id: id
          explanation: explanation
          script: script
          nameParserTypeAlt: FN1LN1
          nameParserType: FN1LN1
      properties:
        personalNames:
          description: Classified parsed names
          items:
            $ref: '#/components/schemas/PersonalNameParsedOut'
          type: array
      type: object
      xml:
        name: BatchPersonalNameParsedOut
    FirstLastNameDiasporaedOut:
      description: "Represents the output of inferring the LIKELY ethnicity from a\
        \ personal name, given an country of residence."
      example:
        lastName: lastName
        probabilityCalibrated: 0.12747533132666566
        ethnicity: Chinese
        lifted: true
        ethnicityAlt: Japanese
        explanation: explanation
        script: script
        religionStats:
        - pct: 5.962133916683182
          religion: religion
        - pct: 5.962133916683182
          religion: religion
        firstName: firstName
        score: 59.621339166831824
        religionStatsAlt:
        - pct: 5.962133916683182
          religion: religion
        - pct: 5.962133916683182
          religion: religion
        probabilityAltCalibrated: -0.539572822613047
        id: id
        countryIso2: countryIso2
        ethnicitiesTop:
        - ethnicitiesTop
        - ethnicitiesTop
      properties:
        script:
          type: string
        id:
          type: string
        explanation:
          type: string
        firstName:
          description: The first name (also known as given name)
          type: string
        lastName:
          description: "The last name (also known as family name, or surname)"
          type: string
        score:
          description: "Compatibility to NamSor_v1 Diaspora score value. Higher score\
            \ is better, but score is not normalized. Use calibratedProbability if\
            \ available. "
          format: double
          maximum: 100
          minimum: 0
          type: number
        ethnicityAlt:
          description: The second best alternative ethnicity
          example: Japanese
          type: string
          xml:
            attribute: true
        ethnicity:
          description: The most likely ethnicity
          example: Chinese
          type: string
          xml:
            attribute: true
        lifted:
          description: "Indicates if the output ethnicity is based on machine learning\
            \ only, or further lifted as a known fact by a country-specific rule.\
            \ Let us know if you believe ethnicity is incorrect on a specific case\
            \ where lifted is true."
          type: boolean
          xml:
            attribute: true
        countryIso2:
          description: "From input data, the countryIso2 of geographic context (US,CA\
            \ etc.)"
          type: string
          xml:
            attribute: true
        ethnicitiesTop:
          description: List most likely ethnicities (top 10)
          items:
            description: List most likely ethnicities (top 10)
            type: string
          type: array
        probabilityCalibrated:
          description: 'The calibrated probability for ethnicity to have been guessed
            correctly. -1 = still calibrating. '
          format: double
          maximum: 1
          minimum: -1
          type: number
        probabilityAltCalibrated:
          description: 'The calibrated probability for ethnicity OR ethnicityAlt to
            have been guessed correctly. -1 = still calibrating. '
          format: double
          maximum: 1
          minimum: -1
          type: number
        religionStats:
          description: "Geographic religious statistics, assuming ethnicity is correctly\
            \ predicted."
          items:
            $ref: '#/components/schemas/ReligionStatOut'
          type: array
        religionStatsAlt:
          description: "Geographic religious statistics, for country best alternative."
          items:
            $ref: '#/components/schemas/ReligionStatOut'
          type: array
      type: object
      xml:
        name: FirstLastNameDiasporaedOut
    BatchPersonalNameReligionedOut:
      example:
        personalNames:
        - score: 8.008281904610115
          religionAlt: religionAlt
          probabilityCalibrated: 0.20549123661408064
          name: name
          probabilityAltCalibrated: -0.706837403899411
          id: id
          religionsTop:
          - religionsTop
          - religionsTop
          explanation: explanation
          script: script
          religion: religion
        - score: 8.008281904610115
          religionAlt: religionAlt
          probabilityCalibrated: 0.20549123661408064
          name: name
          probabilityAltCalibrated: -0.706837403899411
          id: id
          religionsTop:
          - religionsTop
          - religionsTop
          explanation: explanation
          script: script
          religion: religion
      properties:
        personalNames:
          description: religious-coded names
          items:
            $ref: '#/components/schemas/PersonalNameReligionedOut'
          type: array
      type: object
      xml:
        name: BatchPersonalNameReligionedOut
    BatchFirstLastNameGeoOut:
      example:
        personalNames:
        - lastName: lastName
          country: country
          topRegion: topRegion
          subRegion: subRegion
          probabilityCalibrated: 0.20549123661408064
          countryAlt: countryAlt
          explanation: explanation
          script: script
          religionStats:
          - pct: 5.962133916683182
            religion: religion
          - pct: 5.962133916683182
            religion: religion
          firstName: firstName
          score: 8.008281904610115
          countriesTop:
          - countriesTop
          - countriesTop
          religionStatsAlt:
          - pct: 5.962133916683182
            religion: religion
          - pct: 5.962133916683182
            religion: religion
          probabilityAltCalibrated: -0.706837403899411
          id: id
          region: region
        - lastName: lastName
          country: country
          topRegion: topRegion
          subRegion: subRegion
          probabilityCalibrated: 0.20549123661408064
          countryAlt: countryAlt
          explanation: explanation
          script: script
          religionStats:
          - pct: 5.962133916683182
            religion: religion
          - pct: 5.962133916683182
            religion: religion
          firstName: firstName
          score: 8.008281904610115
          countriesTop:
          - countriesTop
          - countriesTop
          religionStatsAlt:
          - pct: 5.962133916683182
            religion: religion
          - pct: 5.962133916683182
            religion: religion
          probabilityAltCalibrated: -0.706837403899411
          id: id
          region: region
      properties:
        personalNames:
          description: Classified names
          items:
            $ref: '#/components/schemas/FirstLastNameGeoOut'
          type: array
      type: object
      xml:
        name: BatchFirstLastNameGeoOut
    APIBillingPeriodUsageOut:
      description: The current billing period.
      example:
        apiKey: apiKey
        periodStarted: 7
        stripeCurrentPeriodEnd: 1
        usage: 6
        hardLimit: 1
        subscriptionStarted: 4
        periodEnded: 1
        billingStatus: billingStatus
        stripeCurrentPeriodStart: 1
        softLimit: 7
      properties:
        apiKey:
          description: User API Key.
          type: string
        subscriptionStarted:
          description: Datetime when the user subscribed to the plan.
          format: int64
          type: integer
        periodStarted:
          description: Datetime when the the plan's current period started.
          format: int64
          type: integer
        periodEnded:
          description: Datetime when the the plan's current period endend.
          format: int64
          type: integer
        stripeCurrentPeriodEnd:
          description: Datetime when the the plan's current period endend (in Stripe).
            Internal and Stripe periodicity should ~coincide.
          format: int64
          type: integer
        stripeCurrentPeriodStart:
          description: Datetime when the the plan's current period started (in Stripe).
            Internal and Stripe periodicity should ~coincide.
          format: int64
          type: integer
        billingStatus:
          description: Current period billing status ex OPEN.
          type: string
        usage:
          description: Current period usage in units (NB some API endpoints use more
            than one unit).
          format: int64
          type: integer
        softLimit:
          description: Current period soft limit (reaching the limit sends an email
            notification).
          format: int64
          type: integer
        hardLimit:
          description: Current period hard limit (reaching the limit sends an email
            notification and blocks the API Key).
          format: int64
          type: integer
      type: object
      xml:
        name: APIBillingPeriodUsageOut
    PersonalNameIn:
      example:
        name: name
        id: id
      properties:
        id:
          type: string
          xml:
            attribute: true
        name:
          type: string
          xml:
            attribute: true
      type: object
      xml:
        name: PersonalNameIn
    APIUsageAggregatedOut:
      example:
        rowHeaders:
        - rowHeaders
        - rowHeaders
        data:
        - - 5
          - 5
        - - 5
          - 5
        historyTruncated: true
        colHeaders:
        - colHeaders
        - colHeaders
        totalUsage: 1
        periodStart: 0
        timeUnit: timeUnit
        periodEnd: 6
      properties:
        timeUnit:
          description: "Time unit is DAY, WEEK or MONTH depending on prior usage"
          type: string
        periodStart:
          description: Start datetime of the reporting period
          format: int64
          type: integer
        periodEnd:
          description: End datetime of the reporting period
          format: int64
          type: integer
        totalUsage:
          description: Total usage in the current period
          format: int64
          type: integer
        historyTruncated:
          description: If the history was truncaded due to data limit
          type: boolean
        data:
          description: "Data points : usage per DAY, WEEK or MONTH and per apiService"
          items:
            description: "Data points : usage per DAY, WEEK or MONTH and per apiService"
            items:
              description: "Data points : usage per DAY, WEEK or MONTH and per apiService"
              format: int32
              type: integer
            type: array
          type: array
        colHeaders:
          description: 'apiServices as column headers '
          items:
            description: 'apiServices as column headers '
            type: string
          type: array
        rowHeaders:
          description: 'dates as row headers '
          items:
            description: 'dates as row headers '
            type: string
          type: array
      type: object
      xml:
        name: APIUsageAggregatedOut
    APIServicesOut:
      example:
        apiServices:
        - costInUnits: 0
          serviceGroup: serviceGroup
          serviceName: serviceName
        - costInUnits: 0
          serviceGroup: serviceGroup
          serviceName: serviceName
      properties:
        apiServices:
          description: List of API Services
          items:
            $ref: '#/components/schemas/APIServiceOut'
          type: array
      type: object
      xml:
        name: APIServicesOut
    BatchNameIn:
      example:
        properNouns:
        - name: name
          id: id
        - name: name
          id: id
      properties:
        properNouns:
          items:
            $ref: '#/components/schemas/NameIn'
          type: array
      type: object
      xml:
        name: BatchNameIn
    FirstLastNameOut:
      description: First / last name structure corresponding to the most likely parsing.
      example:
        firstName: firstName
        lastName: lastName
        id: id
        explanation: explanation
        script: script
      properties:
        script:
          type: string
        id:
          type: string
        explanation:
          type: string
        firstName:
          description: The first name (also known as given name)
          type: string
        lastName:
          description: "The last name (also known as family name, or surname)"
          type: string
      type: object
      xml:
        name: FirstLastNameOut
    PersonalNameGeoSubclassificationOut:
      description: Classified names at sub country level (region or state)
      example:
        score: 8.008281904610115
        probabilityCalibrated: 0.20549123661408064
        subclassificationTop:
        - subclassificationTop
        - subclassificationTop
        name: name
        probabilityAltCalibrated: -0.706837403899411
        id: id
        countryIso2: countryIso2
        explanation: explanation
        script: script
        subClassification: subClassification
        subClassificationAlt: subClassificationAlt
      properties:
        script:
          type: string
        id:
          type: string
        explanation:
          type: string
        name:
          description: The input name.
          type: string
        countryIso2:
          description: The input country ISO2 code
          type: string
          xml:
            attribute: true
        subClassification:
          description: Most likely subclassification ISO_3166-2 code
          type: string
        subClassificationAlt:
          description: "Second best alternative : subclassification ISO_3166-2 code"
          type: string
        subclassificationTop:
          description: List subclassification ISO_3166-2 codes (top 10)
          items:
            description: List subclassification ISO_3166-2 codes (top 10)
            type: string
          type: array
        score:
          description: "Compatibility to NamSor_v1 Origin score value. Higher score\
            \ is better, but score is not normalized. Use calibratedProbability if\
            \ available. "
          format: double
          maximum: 100
          minimum: 0
          type: number
        probabilityCalibrated:
          description: 'The calibrated probability for subclassification to have been
            guessed correctly. -1 = still calibrating. '
          format: double
          maximum: 1
          minimum: -1
          type: number
        probabilityAltCalibrated:
          description: 'The calibrated probability for subclassification OR subclassificationAlt
            to have been guessed correctly. -1 = still calibrating. '
          format: double
          maximum: 1
          minimum: -1
          type: number
      type: object
      xml:
        name: PersonalNameGeoSubclassificationOut
    BatchFirstLastNameUSRaceEthnicityOut:
      description: "Represents the output of inferring the LIKELY US 'race/ethnicity'\
        \ from a personal name, given US country of residence and (optionally) a ZIP5\
        \ code."
      example:
        personalNames:
        - firstName: firstName
          lastName: lastName
          raceEthnicityAlt: W_NL
          score: 8.008281904610115
          raceEthnicitiesTop:
          - raceEthnicitiesTop
          - raceEthnicitiesTop
          probabilityCalibrated: 0.20549123661408064
          probabilityAltCalibrated: -0.706837403899411
          id: id
          explanation: explanation
          script: script
          raceEthnicity: W_NL
        - firstName: firstName
          lastName: lastName
          raceEthnicityAlt: W_NL
          score: 8.008281904610115
          raceEthnicitiesTop:
          - raceEthnicitiesTop
          - raceEthnicitiesTop
          probabilityCalibrated: 0.20549123661408064
          probabilityAltCalibrated: -0.706837403899411
          id: id
          explanation: explanation
          script: script
          raceEthnicity: W_NL
      properties:
        personalNames:
          description: Classified US 'race'/ethnicized names
          items:
            $ref: '#/components/schemas/FirstLastNameUSRaceEthnicityOut'
          type: array
      type: object
      xml:
        name: BatchFirstLastNameUSRaceEthnicityOut
    BatchPersonalNameIn:
      example:
        personalNames:
        - name: name
          id: id
        - name: name
          id: id
      properties:
        personalNames:
          items:
            $ref: '#/components/schemas/PersonalNameIn'
          type: array
      type: object
      xml:
        name: BatchPersonalNameIn
    BatchFirstLastNamePhoneNumberIn:
      example:
        personalNamesWithPhoneNumbers:
        - firstName: firstName
          lastName: lastName
          phoneNumber: phoneNumber
          id: id
        - firstName: firstName
          lastName: lastName
          phoneNumber: phoneNumber
          id: id
      properties:
        personalNamesWithPhoneNumbers:
          items:
            $ref: '#/components/schemas/FirstLastNamePhoneNumberIn'
          type: array
      type: object
      xml:
        name: BatchFirstLastNamePhoneNumberIn
    NameGeoIn:
      example:
        name: name
        id: id
        countryIso2: countryIso2
      properties:
        id:
          type: string
          xml:
            attribute: true
        name:
          type: string
          xml:
            attribute: true
        countryIso2:
          type: string
          xml:
            attribute: true
      type: object
      xml:
        name: NameGeoIn
    PersonalNameReligionedOut:
      description: religious-coded names
      example:
        score: 8.008281904610115
        religionAlt: religionAlt
        probabilityCalibrated: 0.20549123661408064
        name: name
        probabilityAltCalibrated: -0.706837403899411
        id: id
        religionsTop:
        - religionsTop
        - religionsTop
        explanation: explanation
        script: script
        religion: religion
      properties:
        script:
          type: string
        id:
          type: string
        explanation:
          type: string
        name:
          description: The input name.
          type: string
        score:
          description: "Higher score is better, but score is not normalized. Use calibratedProbability\
            \ if available. "
          format: double
          maximum: 100
          minimum: 0
          type: number
        religion:
          description: Most likely religion
          type: string
        religionAlt:
          description: "Second best alternative : religion "
          type: string
        religionsTop:
          description: List religions (top 10)
          items:
            description: List religions (top 10)
            type: string
          type: array
        probabilityCalibrated:
          description: 'The calibrated probability for country to have been guessed
            correctly. -1 = still calibrating. '
          format: double
          maximum: 1
          minimum: -1
          type: number
        probabilityAltCalibrated:
          description: 'The calibrated probability for country OR countryAlt to have
            been guessed correctly. -1 = still calibrating. '
          format: double
          maximum: 1
          minimum: -1
          type: number
      type: object
      xml:
        name: PersonalNameReligionedOut
    FirstLastNamePhoneCodedOut:
      description: Represents the output of inferring the LIKELY country and phone
        code from a personal name and phone number.
      example:
        lastName: lastName
        originCountryIso2Alt: originCountryIso2Alt
        phoneCountryIso2Verified: phoneCountryIso2Verified
        verified: true
        explanation: explanation
        script: script
        firstName: firstName
        score: 14.658129805029452
        phoneNumber: phoneNumber
        phoneCountryCode: 0
        phoneCountryIso2: phoneCountryIso2
        originCountryIso2: originCountryIso2
        phoneCountryIso2Alt: phoneCountryIso2Alt
        id: id
        internationalPhoneNumberVerified: internationalPhoneNumberVerified
        phoneCountryCodeAlt: 6
        countryIso2: countryIso2
      properties:
        script:
          type: string
        id:
          type: string
        explanation:
          type: string
        firstName:
          description: The first name (also known as given name)
          type: string
        lastName:
          description: "The last name (also known as family name, or surname)"
          type: string
        internationalPhoneNumberVerified:
          description: "The normalized phone number, verified using libphonenumber."
          type: string
        phoneCountryIso2Verified:
          description: "The phone ISO2 country code, verified using libphonenumber."
          type: string
        phoneCountryCode:
          description: "The phone country code of the phone number, verified using\
            \ libphonenumber."
          format: int32
          type: integer
        phoneCountryCodeAlt:
          description: The best alternative phone country code of the phone number.
          format: int32
          type: integer
        phoneCountryIso2:
          description: The likely country of the phone number.
          type: string
        phoneCountryIso2Alt:
          description: The best alternative country of the phone number.
          type: string
        originCountryIso2:
          description: The likely country of origin of the name.
          type: string
        originCountryIso2Alt:
          description: The best alternative country of origin of the name.
          type: string
        phoneNumber:
          description: The input phone number.
          type: string
        verified:
          description: Indicates if the phone number could be positively verified
            using libphonenumber.
          type: boolean
        score:
          description: "Higher score is better, but score is not normalized. Use calibratedProbability\
            \ if available. "
          format: double
          maximum: 100
          minimum: 0
          type: number
        countryIso2:
          type: string
      type: object
      xml:
        name: FirstLastNamePhoneCodedOut
    MatchPersonalFirstLastNameIn:
      example:
        id: id
        name2:
          name: name
          id: id
        name1:
          firstName: firstName
          lastName: lastName
          id: id
      properties:
        id:
          type: string
          xml:
            attribute: true
        name1:
          $ref: '#/components/schemas/FirstLastNameIn'
        name2:
          $ref: '#/components/schemas/PersonalNameIn'
      type: object
      xml:
        name: MatchPersonalFirstLastNameIn
    BatchPersonalNameGeoSubclassificationOut:
      description: Represents the output of inferring the LIKELY country subclassification
        (regional names).
      example:
        personalNames:
        - score: 8.008281904610115
          probabilityCalibrated: 0.20549123661408064
          subclassificationTop:
          - subclassificationTop
          - subclassificationTop
          name: name
          probabilityAltCalibrated: -0.706837403899411
          id: id
          countryIso2: countryIso2
          explanation: explanation
          script: script
          subClassification: subClassification
          subClassificationAlt: subClassificationAlt
        - score: 8.008281904610115
          probabilityCalibrated: 0.20549123661408064
          subclassificationTop:
          - subclassificationTop
          - subclassificationTop
          name: name
          probabilityAltCalibrated: -0.706837403899411
          id: id
          countryIso2: countryIso2
          explanation: explanation
          script: script
          subClassification: subClassification
          subClassificationAlt: subClassificationAlt
      properties:
        personalNames:
          description: Classified names at sub country level (region or state)
          items:
            $ref: '#/components/schemas/PersonalNameGeoSubclassificationOut'
          type: array
      type: object
      xml:
        name: BatchPersonalNameGeoSubclassificationOut
    FirstLastNameReligionedOut:
      description: Represents the output of inferring the LIKELY religion from a personal
        Indian first/last name.
      example:
        firstName: firstName
        lastName: lastName
        religionAlt: religionAlt
        score: 8.008281904610115
        probabilityCalibrated: 0.20549123661408064
        probabilityAltCalibrated: -0.706837403899411
        id: id
        religionsTop:
        - religionsTop
        - religionsTop
        explanation: explanation
        script: script
        religion: religion
      properties:
        script:
          type: string
        id:
          type: string
        explanation:
          type: string
        firstName:
          description: The first name (also known as given name)
          type: string
        lastName:
          description: "The last name (also known as family name, or surname)"
          type: string
        religion:
          description: Most likely religion
          type: string
        religionAlt:
          description: "Second best alternative : religion "
          type: string
        religionsTop:
          description: List countries (top 10)
          items:
            description: List countries (top 10)
            type: string
          type: array
        score:
          description: "Compatibility to NamSor_v1 Origin score value. Higher score\
            \ is better, but score is not normalized. Use calibratedProbability if\
            \ available. "
          format: double
          maximum: 100
          minimum: 0
          type: number
        probabilityCalibrated:
          description: 'The calibrated probability for caste to have been guessed
            correctly. -1 = still calibrating. '
          format: double
          maximum: 1
          minimum: -1
          type: number
        probabilityAltCalibrated:
          description: 'The calibrated probability for caste OR casteAlt to have been
            guessed correctly. -1 = still calibrating. '
          format: double
          maximum: 1
          minimum: -1
          type: number
      type: object
      xml:
        name: FirstLastNameReligionedOut
    PersonalNameUSRaceEthnicityOut:
      description: "Represents the output of inferring the LIKELY US 'race/ethnicity'\
        \ from a personal name, given US country of residence and (optionally) a ZIP5\
        \ code."
      example:
        raceEthnicityAlt: W_NL
        score: 8.008281904610115
        raceEthnicitiesTop:
        - raceEthnicitiesTop
        - raceEthnicitiesTop
        probabilityCalibrated: 0.20549123661408064
        name: name
        probabilityAltCalibrated: -0.706837403899411
        id: id
        explanation: explanation
        script: script
        raceEthnicity: W_NL
      properties:
        script:
          type: string
        id:
          type: string
        explanation:
          type: string
        name:
          description: The input name.
          type: string
        raceEthnicityAlt:
          description: Second most likely US 'race'/ethnicity
          enum:
          - W_NL
          - HL
          - A
          - B_NL
          - AI_AN
          - PI
          type: string
          xml:
            attribute: true
        raceEthnicity:
          description: Most likely US 'race'/ethnicity
          enum:
          - W_NL
          - HL
          - A
          - B_NL
          - AI_AN
          - PI
          type: string
          xml:
            attribute: true
        score:
          description: "Higher score is better, but score is not normalized. Use calibratedProbability\
            \ if available. "
          format: double
          maximum: 100
          minimum: 0
          type: number
        raceEthnicitiesTop:
          description: List 'race'/ethnicities
          items:
            description: List 'race'/ethnicities
            type: string
          type: array
        probabilityCalibrated:
          description: 'The calibrated probability for raceEthnicity to have been
            guessed correctly. -1 = still calibrating. '
          format: double
          maximum: 1
          minimum: -1
          type: number
        probabilityAltCalibrated:
          description: 'The calibrated probability for raceEthnicity OR raceEthnicityAlt
            to have been guessed correctly. -1 = still calibrating. '
          format: double
          maximum: 1
          minimum: -1
          type: number
      type: object
      xml:
        name: PersonalNameUSRaceEthnicityOut
    PersonalNameGeoSubdivisionIn:
      example:
        subdivisionIso: subdivisionIso
        name: name
        id: id
        countryIso2: countryIso2
      properties:
        id:
          type: string
          xml:
            attribute: true
        name:
          type: string
          xml:
            attribute: true
        countryIso2:
          type: string
          xml:
            attribute: true
        subdivisionIso:
          type: string
          xml:
            attribute: true
      type: object
      xml:
        name: PersonalNameGeoSubdivisionIn
    CommunityEngageOptionOut:
      example:
        genderFilter:
        - genderFilter
        - genderFilter
        ethnicityFilter:
        - ethnicityFilter
        - ethnicityFilter
        countryOutFilter:
        - countryOutFilter
        - countryOutFilter
        usRaceEthnicityFilter:
        - usRaceEthnicityFilter
        - usRaceEthnicityFilter
      properties:
        genderFilter:
          description: The gender filter (null to allow all)
          items:
            description: The gender filter (null to allow all)
            type: string
          type: array
        ethnicityFilter:
          description: The ethnicity filter (null to allow all)
          items:
            description: The ethnicity filter (null to allow all)
            type: string
          type: array
        countryOutFilter:
          description: The output country filter (null to allow all)
          items:
            description: The output country filter (null to allow all)
            type: string
          type: array
        usRaceEthnicityFilter:
          description: The output US race/ethnicity filter (null to allow all)
          items:
            description: The output US race/ethnicity filter (null to allow all)
            type: string
          type: array
      type: object
      xml:
        name: CommunityEngageOptionOut
    BatchPersonalNameOriginedOut:
      description: Represents the output of inferring the LIKELY origin from a list
        of personal names.
      example:
        personalNames:
        - probabilityCalibrated: 0.20549123661408064
          religionStatsSynthetic:
          - pct: 5.962133916683182
            religion: religion
          - pct: 5.962133916683182
            religion: religion
          explanation: explanation
          script: script
          regionOrigin: regionOrigin
          topRegionOrigin: topRegionOrigin
          religionStats:
          - pct: 5.962133916683182
            religion: religion
          - pct: 5.962133916683182
            religion: religion
          score: 8.008281904610115
          subRegionOrigin: subRegionOrigin
          religionStatsAlt:
          - pct: 5.962133916683182
            religion: religion
          - pct: 5.962133916683182
            religion: religion
          name: name
          probabilityAltCalibrated: -0.706837403899411
          countriesOriginTop:
          - countriesOriginTop
          - countriesOriginTop
          id: id
          countryOrigin: countryOrigin
          countryOriginAlt: countryOriginAlt
        - probabilityCalibrated: 0.20549123661408064
          religionStatsSynthetic:
          - pct: 5.962133916683182
            religion: religion
          - pct: 5.962133916683182
            religion: religion
          explanation: explanation
          script: script
          regionOrigin: regionOrigin
          topRegionOrigin: topRegionOrigin
          religionStats:
          - pct: 5.962133916683182
            religion: religion
          - pct: 5.962133916683182
            religion: religion
          score: 8.008281904610115
          subRegionOrigin: subRegionOrigin
          religionStatsAlt:
          - pct: 5.962133916683182
            religion: religion
          - pct: 5.962133916683182
            religion: religion
          name: name
          probabilityAltCalibrated: -0.706837403899411
          countriesOriginTop:
          - countriesOriginTop
          - countriesOriginTop
          id: id
          countryOrigin: countryOrigin
          countryOriginAlt: countryOriginAlt
      properties:
        personalNames:
          description: Classified origined names
          items:
            $ref: '#/components/schemas/PersonalNameOriginedOut'
          type: array
      type: object
      xml:
        name: BatchPersonalNameOriginedOut
    APIUsageHistoryOut:
      example:
        detailedUsage:
        - apiKey:
            striped: true
            apiKey: apiKey
            anonymized: true
            learnable: true
            ipAddress: ipAddress
            admin: true
            communityEngageOption:
              genderFilter:
              - genderFilter
              - genderFilter
              ethnicityFilter:
              - ethnicityFilter
              - ethnicityFilter
              countryOutFilter:
              - countryOutFilter
              - countryOutFilter
              usRaceEthnicityFilter:
              - usRaceEthnicityFilter
              - usRaceEthnicityFilter
            userId: userId
            explainable: true
            vetted: true
            partner: true
            corporate: true
            disabled: true
          serviceFeaturesUsage:
            key: 5
          apiService: apiService
          createdDateTime: 0
          lastFlushedDateTime: 1
          totalUsage: 6
          hostAddress: hostAddress
          lastUsedDateTime: 5
        - apiKey:
            striped: true
            apiKey: apiKey
            anonymized: true
            learnable: true
            ipAddress: ipAddress
            admin: true
            communityEngageOption:
              genderFilter:
              - genderFilter
              - genderFilter
              ethnicityFilter:
              - ethnicityFilter
              - ethnicityFilter
              countryOutFilter:
              - countryOutFilter
              - countryOutFilter
              usRaceEthnicityFilter:
              - usRaceEthnicityFilter
              - usRaceEthnicityFilter
            userId: userId
            explainable: true
            vetted: true
            partner: true
            corporate: true
            disabled: true
          serviceFeaturesUsage:
            key: 5
          apiService: apiService
          createdDateTime: 0
          lastFlushedDateTime: 1
          totalUsage: 6
          hostAddress: hostAddress
          lastUsedDateTime: 5
      properties:
        detailedUsage:
          description: Detailed usage as reported by the deduplicating API counter.
          items:
            $ref: '#/components/schemas/APICounterV2Out'
          type: array
      type: object
      xml:
        name: APIUsageHistoryOut
    PersonalNameDiasporaedOut:
      description: "Represents the output of inferring the LIKELY ethnicity from a\
        \ personal name, given an country of residence."
      example:
        probabilityCalibrated: 0.20549123661408064
        ethnicity: Chinese
        lifted: true
        ethnicityAlt: Japanese
        explanation: explanation
        script: script
        religionStats:
        - pct: 5.962133916683182
          religion: religion
        - pct: 5.962133916683182
          religion: religion
        score: 8.008281904610115
        religionStatsAlt:
        - pct: 5.962133916683182
          religion: religion
        - pct: 5.962133916683182
          religion: religion
        name: name
        probabilityAltCalibrated: -0.706837403899411
        id: id
        countryIso2: countryIso2
        ethnicitiesTop:
        - ethnicitiesTop
        - ethnicitiesTop
      properties:
        script:
          type: string
        id:
          type: string
        explanation:
          type: string
        name:
          description: The input name.
          type: string
        score:
          description: "Compatibility to NamSor_v1 Diaspora score value. Higher score\
            \ is better, but score is not normalized. Use calibratedProbability if\
            \ available. "
          format: double
          maximum: 100
          minimum: 0
          type: number
        ethnicityAlt:
          description: The second best alternative ethnicity
          example: Japanese
          type: string
          xml:
            attribute: true
        ethnicity:
          description: The most likely ethnicity
          example: Chinese
          type: string
          xml:
            attribute: true
        lifted:
          description: "Indicates if the output ethnicity is based on machine learning\
            \ only, or further lifted as a known fact by a country-specific rule.\
            \ Let us know if you believe ethnicity is incorrect on a specific case\
            \ where lifted is true."
          type: boolean
          xml:
            attribute: true
        countryIso2:
          description: "From input data, the countryIso2 of geographic context (US,CA\
            \ etc.)"
          type: string
          xml:
            attribute: true
        ethnicitiesTop:
          description: List most likely ethnicities (top 10)
          items:
            description: List most likely ethnicities (top 10)
            type: string
          type: array
        probabilityCalibrated:
          description: 'The calibrated probability for ethnicity to have been guessed
            correctly. -1 = still calibrating. '
          format: double
          maximum: 1
          minimum: -1
          type: number
        probabilityAltCalibrated:
          description: 'The calibrated probability for ethnicity OR ethnicityAlt to
            have been guessed correctly. -1 = still calibrating. '
          format: double
          maximum: 1
          minimum: -1
          type: number
        religionStats:
          description: "Geographic religious statistics, assuming ethnicity is correctly\
            \ predicted."
          items:
            $ref: '#/components/schemas/ReligionStatOut'
          type: array
        religionStatsAlt:
          description: "Geographic religious statistics, for country best alternative."
          items:
            $ref: '#/components/schemas/ReligionStatOut'
          type: array
      type: object
      xml:
        name: PersonalNameDiasporaedOut
    BatchFirstLastNamePhoneCodedOut:
      description: Represents the output of inferring the LIKELY country and phone
        code of personal names+phones.
      example:
        personalNamesWithPhoneNumbers:
        - lastName: lastName
          originCountryIso2Alt: originCountryIso2Alt
          phoneCountryIso2Verified: phoneCountryIso2Verified
          verified: true
          explanation: explanation
          script: script
          firstName: firstName
          score: 14.658129805029452
          phoneNumber: phoneNumber
          phoneCountryCode: 0
          phoneCountryIso2: phoneCountryIso2
          originCountryIso2: originCountryIso2
          phoneCountryIso2Alt: phoneCountryIso2Alt
          id: id
          internationalPhoneNumberVerified: internationalPhoneNumberVerified
          phoneCountryCodeAlt: 6
          countryIso2: countryIso2
        - lastName: lastName
          originCountryIso2Alt: originCountryIso2Alt
          phoneCountryIso2Verified: phoneCountryIso2Verified
          verified: true
          explanation: explanation
          script: script
          firstName: firstName
          score: 14.658129805029452
          phoneNumber: phoneNumber
          phoneCountryCode: 0
          phoneCountryIso2: phoneCountryIso2
          originCountryIso2: originCountryIso2
          phoneCountryIso2Alt: phoneCountryIso2Alt
          id: id
          internationalPhoneNumberVerified: internationalPhoneNumberVerified
          phoneCountryCodeAlt: 6
          countryIso2: countryIso2
      properties:
        personalNamesWithPhoneNumbers:
          description: Classified phone-coded names
          items:
            $ref: '#/components/schemas/FirstLastNamePhoneCodedOut'
          type: array
      type: object
      xml:
        name: BatchFirstLastNamePhoneCodedOut
    BatchFirstLastNameSubdivisionIn:
      example:
        personalNames:
        - firstName: firstName
          lastName: lastName
          subdivisionIso: subdivisionIso
          id: id
        - firstName: firstName
          lastName: lastName
          subdivisionIso: subdivisionIso
          id: id
      properties:
        personalNames:
          items:
            $ref: '#/components/schemas/FirstLastNameSubdivisionIn'
          type: array
      type: object
      xml:
        name: BatchFirstLastNameSubdivisionIn
    BatchCommunityEngageFullOut:
      example:
        engagementCandidates:
        - prime: true
          country:
            country: country
            topRegion: topRegion
            subRegion: subRegion
            probabilityCalibrated: 0.20549123661408064
            countryAlt: countryAlt
            explanation: explanation
            script: script
            religionStats:
            - pct: 5.962133916683182
              religion: religion
            - pct: 5.962133916683182
              religion: religion
            score: 8.008281904610115
            countriesTop:
            - countriesTop
            - countriesTop
            religionStatsAlt:
            - pct: 5.962133916683182
              religion: religion
            - pct: 5.962133916683182
              religion: religion
            name: name
            probabilityAltCalibrated: -0.706837403899411
            id: id
            region: region
          gender:
            genderScale: -0.8398343619077977
            score: 60.27456183070403
            probabilityCalibrated: -0.706837403899411
            name: name
            likelyGender: male
            id: id
            explanation: explanation
            script: script
          scoped: true
          PersonalNameUSRaceEthnicityOut:
            raceEthnicityAlt: W_NL
            score: 8.008281904610115
            raceEthnicitiesTop:
            - raceEthnicitiesTop
            - raceEthnicitiesTop
            probabilityCalibrated: 0.20549123661408064
            name: name
            probabilityAltCalibrated: -0.706837403899411
            id: id
            explanation: explanation
            script: script
            raceEthnicity: W_NL
          PersonalNameDiasporaedOut:
            probabilityCalibrated: 0.20549123661408064
            ethnicity: Chinese
            lifted: true
            ethnicityAlt: Japanese
            explanation: explanation
            script: script
            religionStats:
            - pct: 5.962133916683182
              religion: religion
            - pct: 5.962133916683182
              religion: religion
            score: 8.008281904610115
            religionStatsAlt:
            - pct: 5.962133916683182
              religion: religion
            - pct: 5.962133916683182
              religion: religion
            name: name
            probabilityAltCalibrated: -0.706837403899411
            id: id
            countryIso2: countryIso2
            ethnicitiesTop:
            - ethnicitiesTop
            - ethnicitiesTop
          id: id
          PersonalNameOriginedOut:
            probabilityCalibrated: 0.20549123661408064
            religionStatsSynthetic:
            - pct: 5.962133916683182
              religion: religion
            - pct: 5.962133916683182
              religion: religion
            explanation: explanation
            script: script
            regionOrigin: regionOrigin
            topRegionOrigin: topRegionOrigin
            religionStats:
            - pct: 5.962133916683182
              religion: religion
            - pct: 5.962133916683182
              religion: religion
            score: 8.008281904610115
            subRegionOrigin: subRegionOrigin
            religionStatsAlt:
            - pct: 5.962133916683182
              religion: religion
            - pct: 5.962133916683182
              religion: religion
            name: name
            probabilityAltCalibrated: -0.706837403899411
            countriesOriginTop:
            - countriesOriginTop
            - countriesOriginTop
            id: id
            countryOrigin: countryOrigin
            countryOriginAlt: countryOriginAlt
          script: script
        - prime: true
          country:
            country: country
            topRegion: topRegion
            subRegion: subRegion
            probabilityCalibrated: 0.20549123661408064
            countryAlt: countryAlt
            explanation: explanation
            script: script
            religionStats:
            - pct: 5.962133916683182
              religion: religion
            - pct: 5.962133916683182
              religion: religion
            score: 8.008281904610115
            countriesTop:
            - countriesTop
            - countriesTop
            religionStatsAlt:
            - pct: 5.962133916683182
              religion: religion
            - pct: 5.962133916683182
              religion: religion
            name: name
            probabilityAltCalibrated: -0.706837403899411
            id: id
            region: region
          gender:
            genderScale: -0.8398343619077977
            score: 60.27456183070403
            probabilityCalibrated: -0.706837403899411
            name: name
            likelyGender: male
            id: id
            explanation: explanation
            script: script
          scoped: true
          PersonalNameUSRaceEthnicityOut:
            raceEthnicityAlt: W_NL
            score: 8.008281904610115
            raceEthnicitiesTop:
            - raceEthnicitiesTop
            - raceEthnicitiesTop
            probabilityCalibrated: 0.20549123661408064
            name: name
            probabilityAltCalibrated: -0.706837403899411
            id: id
            explanation: explanation
            script: script
            raceEthnicity: W_NL
          PersonalNameDiasporaedOut:
            probabilityCalibrated: 0.20549123661408064
            ethnicity: Chinese
            lifted: true
            ethnicityAlt: Japanese
            explanation: explanation
            script: script
            religionStats:
            - pct: 5.962133916683182
              religion: religion
            - pct: 5.962133916683182
              religion: religion
            score: 8.008281904610115
            religionStatsAlt:
            - pct: 5.962133916683182
              religion: religion
            - pct: 5.962133916683182
              religion: religion
            name: name
            probabilityAltCalibrated: -0.706837403899411
            id: id
            countryIso2: countryIso2
            ethnicitiesTop:
            - ethnicitiesTop
            - ethnicitiesTop
          id: id
          PersonalNameOriginedOut:
            probabilityCalibrated: 0.20549123661408064
            religionStatsSynthetic:
            - pct: 5.962133916683182
              religion: religion
            - pct: 5.962133916683182
              religion: religion
            explanation: explanation
            script: script
            regionOrigin: regionOrigin
            topRegionOrigin: topRegionOrigin
            religionStats:
            - pct: 5.962133916683182
              religion: religion
            - pct: 5.962133916683182
              religion: religion
            score: 8.008281904610115
            subRegionOrigin: subRegionOrigin
            religionStatsAlt:
            - pct: 5.962133916683182
              religion: religion
            - pct: 5.962133916683182
              religion: religion
            name: name
            probabilityAltCalibrated: -0.706837403899411
            countriesOriginTop:
            - countriesOriginTop
            - countriesOriginTop
            id: id
            countryOrigin: countryOrigin
            countryOriginAlt: countryOriginAlt
          script: script
      properties:
        engagementCandidates:
          description: Classified community engagement candidates
          items:
            $ref: '#/components/schemas/CommunityEngageOut'
          type: array
      type: object
      xml:
        name: BatchCommunityEngageFullOut
    APIServiceOut:
      description: List of API Services
      example:
        costInUnits: 0
        serviceGroup: serviceGroup
        serviceName: serviceName
      properties:
        serviceName:
          description: A service name corresponds to classifier name in apiStatus
            (ex. personalname_gender or personalfullname_gender)
          type: string
        serviceGroup:
          description: Groups together classifiers providing a similar service (ex.
            gender groups personalname_gender and personalfullname_gender)
          type: string
        costInUnits:
          description: Indicates how many units per call this service costs (ex. the
            number of units per name)
          format: int32
          type: integer
      type: object
      xml:
        name: APIServiceOut
    NameMatchedOut:
      description: Classified matched names
      example:
        score: 0.8008281904610115
        matchStatus: Match
        id: id
        explanation: explanation
        script: script
      properties:
        script:
          type: string
        id:
          type: string
        explanation:
          type: string
        matchStatus:
          description: The name matching status.
          enum:
          - Match
          - Mismatch
          type: string
        score:
          format: double
          type: number
      type: object
      xml:
        name: NameMatchedOut
    BatchCommunityEngageOut:
      example:
        engagementCandidates:
        - prime: true
          country:
            country: country
            topRegion: topRegion
            subRegion: subRegion
            probabilityCalibrated: 0.20549123661408064
            countryAlt: countryAlt
            explanation: explanation
            script: script
            religionStats:
            - pct: 5.962133916683182
              religion: religion
            - pct: 5.962133916683182
              religion: religion
            score: 8.008281904610115
            countriesTop:
            - countriesTop
            - countriesTop
            religionStatsAlt:
            - pct: 5.962133916683182
              religion: religion
            - pct: 5.962133916683182
              religion: religion
            name: name
            probabilityAltCalibrated: -0.706837403899411
            id: id
            region: region
          gender:
            genderScale: -0.8398343619077977
            score: 60.27456183070403
            probabilityCalibrated: -0.706837403899411
            name: name
            likelyGender: male
            id: id
            explanation: explanation
            script: script
          scoped: true
          PersonalNameUSRaceEthnicityOut:
            raceEthnicityAlt: W_NL
            score: 8.008281904610115
            raceEthnicitiesTop:
            - raceEthnicitiesTop
            - raceEthnicitiesTop
            probabilityCalibrated: 0.20549123661408064
            name: name
            probabilityAltCalibrated: -0.706837403899411
            id: id
            explanation: explanation
            script: script
            raceEthnicity: W_NL
          PersonalNameDiasporaedOut:
            probabilityCalibrated: 0.20549123661408064
            ethnicity: Chinese
            lifted: true
            ethnicityAlt: Japanese
            explanation: explanation
            script: script
            religionStats:
            - pct: 5.962133916683182
              religion: religion
            - pct: 5.962133916683182
              religion: religion
            score: 8.008281904610115
            religionStatsAlt:
            - pct: 5.962133916683182
              religion: religion
            - pct: 5.962133916683182
              religion: religion
            name: name
            probabilityAltCalibrated: -0.706837403899411
            id: id
            countryIso2: countryIso2
            ethnicitiesTop:
            - ethnicitiesTop
            - ethnicitiesTop
          id: id
          PersonalNameOriginedOut:
            probabilityCalibrated: 0.20549123661408064
            religionStatsSynthetic:
            - pct: 5.962133916683182
              religion: religion
            - pct: 5.962133916683182
              religion: religion
            explanation: explanation
            script: script
            regionOrigin: regionOrigin
            topRegionOrigin: topRegionOrigin
            religionStats:
            - pct: 5.962133916683182
              religion: religion
            - pct: 5.962133916683182
              religion: religion
            score: 8.008281904610115
            subRegionOrigin: subRegionOrigin
            religionStatsAlt:
            - pct: 5.962133916683182
              religion: religion
            - pct: 5.962133916683182
              religion: religion
            name: name
            probabilityAltCalibrated: -0.706837403899411
            countriesOriginTop:
            - countriesOriginTop
            - countriesOriginTop
            id: id
            countryOrigin: countryOrigin
            countryOriginAlt: countryOriginAlt
          script: script
        - prime: true
          country:
            country: country
            topRegion: topRegion
            subRegion: subRegion
            probabilityCalibrated: 0.20549123661408064
            countryAlt: countryAlt
            explanation: explanation
            script: script
            religionStats:
            - pct: 5.962133916683182
              religion: religion
            - pct: 5.962133916683182
              religion: religion
            score: 8.008281904610115
            countriesTop:
            - countriesTop
            - countriesTop
            religionStatsAlt:
            - pct: 5.962133916683182
              religion: religion
            - pct: 5.962133916683182
              religion: religion
            name: name
            probabilityAltCalibrated: -0.706837403899411
            id: id
            region: region
          gender:
            genderScale: -0.8398343619077977
            score: 60.27456183070403
            probabilityCalibrated: -0.706837403899411
            name: name
            likelyGender: male
            id: id
            explanation: explanation
            script: script
          scoped: true
          PersonalNameUSRaceEthnicityOut:
            raceEthnicityAlt: W_NL
            score: 8.008281904610115
            raceEthnicitiesTop:
            - raceEthnicitiesTop
            - raceEthnicitiesTop
            probabilityCalibrated: 0.20549123661408064
            name: name
            probabilityAltCalibrated: -0.706837403899411
            id: id
            explanation: explanation
            script: script
            raceEthnicity: W_NL
          PersonalNameDiasporaedOut:
            probabilityCalibrated: 0.20549123661408064
            ethnicity: Chinese
            lifted: true
            ethnicityAlt: Japanese
            explanation: explanation
            script: script
            religionStats:
            - pct: 5.962133916683182
              religion: religion
            - pct: 5.962133916683182
              religion: religion
            score: 8.008281904610115
            religionStatsAlt:
            - pct: 5.962133916683182
              religion: religion
            - pct: 5.962133916683182
              religion: religion
            name: name
            probabilityAltCalibrated: -0.706837403899411
            id: id
            countryIso2: countryIso2
            ethnicitiesTop:
            - ethnicitiesTop
            - ethnicitiesTop
          id: id
          PersonalNameOriginedOut:
            probabilityCalibrated: 0.20549123661408064
            religionStatsSynthetic:
            - pct: 5.962133916683182
              religion: religion
            - pct: 5.962133916683182
              religion: religion
            explanation: explanation
            script: script
            regionOrigin: regionOrigin
            topRegionOrigin: topRegionOrigin
            religionStats:
            - pct: 5.962133916683182
              religion: religion
            - pct: 5.962133916683182
              religion: religion
            score: 8.008281904610115
            subRegionOrigin: subRegionOrigin
            religionStatsAlt:
            - pct: 5.962133916683182
              religion: religion
            - pct: 5.962133916683182
              religion: religion
            name: name
            probabilityAltCalibrated: -0.706837403899411
            countriesOriginTop:
            - countriesOriginTop
            - countriesOriginTop
            id: id
            countryOrigin: countryOrigin
            countryOriginAlt: countryOriginAlt
          script: script
      properties:
        engagementCandidates:
          description: Classified community engagement candidates
          items:
            $ref: '#/components/schemas/CommunityEngageOut'
          type: array
      type: object
      xml:
        name: BatchCommunityEngageOut
  securitySchemes:
    api_key:
      description: api_key required
      in: header
      name: X-API-KEY
      type: apiKey

